{"version":3,"sources":["business-logic/near2/near/enviroment/network.ts","components/pages/landing/GreetingText.jsx","components/pages/landing/LandingPage.jsx","components/pages/not-found/NotFoundPage.jsx","components/pages/create/collection/CreateCollectionPage.jsx","business-logic/near2/near/constants.ts","business-logic/near2/near/enviroment/contract-names.ts","business-logic/near2/near/setup/near.ts","business-logic/near2/near/enviroment/config.ts","business-logic/near2/near/api/rpc.ts","components/pages/create/nft/upload/lines/SingleCharLine.jsx","components/pages/create/nft/upload/lines/SingleNumberLine.jsx","components/pages/create/nft/upload/containers/SingleLineContainer.jsx","components/pages/create/nft/upload/containers/MultiLineContainer.jsx","components/pages/create/nft/upload/containers/OptionInputContainer.jsx","components/pages/create/nft/upload/lines/PropertyInput.jsx","components/pages/create/nft/upload/UploadFileInput.jsx","business-logic/ipfs/upload.ts","components/ui/text/DarkBlueTitle.jsx","state/profile/slice.ts","components/ui/loaders/RoundLoader.jsx","components/ui/shadow/BlueShadowContainer.jsx","resources/lights.jpeg","components/pages/create/nft/CreateNftPage.jsx","business-logic/near2/near/api/nfts/mint.js","components/pages/explore/collection/ExploreCollectionsPage.jsx","hooks/redux.ts","hoc/withAccountId.jsx","hoc/profile/ProfileHistoryFetch.jsx","business-logic/near/get-utils.js","business-logic/near2/near/api/nfts/nft-converter.ts","business-logic/near2/near/api/market/api.ts","business-logic/near2/near/api/market/get-nfts-market.ts","business-logic/near2/near/api/nft-contracts.ts","business-logic/near2/near/api/nfts/api.ts","business-logic/near2/near/api/nfts/get-nfts.ts","state/profile/thunk.ts","components/ui/loaders/SmallNftLoader.jsx","components/nft-collection/NftCollectionContainer.jsx","components/ui/loaders/ImageLoader.jsx","components/nft-item/details/image/NftImage.jsx","components/nft-item/NftBoxContainer.jsx","components/ui/icons/near/NearSVG.jsx","components/nft-item/details/price/SmallNftPrice.jsx","components/nft-item/details/minted/NftMintedLink.jsx","components/nft-item/details/title/NftTitle.jsx","components/nft-item/details/collection/NftCollection.jsx","components/nft-item/details/verified/NftVerifiedStatus.jsx","components/nft-item/NftItem.jsx","components/nft-collection/NftsGrid.jsx","hoc/profile/ProfileNftsFetch.jsx","utils/css-utils.js","components/ui/text/DarkBlueMjolText.jsx","components/ui/buttons/MjolBlueGradientButton.jsx","components/pages/profile/navbar/ProfileNavigationBar.jsx","components/pages/profile/ProfilePage.jsx","hoc/profile/ProfilePageHoc.jsx","components/nft-item/preview/image/PreviewNftImage.jsx","components/ui/icons/ShareIcon.jsx","components/nft-item/preview/details/CollectionLink.jsx","components/ui/borders/Hr.jsx","components/ui/buttons/DropDownMjolBlueButton.jsx","components/nft-item/preview/details/NftPreviewTitle.jsx","state/transaction/state.ts","components/nft-item/preview/attributes/PreviewAttribute.jsx","utils/string.js","components/nft-item/preview/attributes/PreviewAttributes.jsx","components/ui/icons/IconText.jsx","components/nft-item/preview/details/NftPreviewInfo.jsx","components/pages/preview/nft/PreviewNftPage.jsx","state/preview/nft/slice.ts","components/nft-item/details/price/PreviewNftPrice.jsx","components/nft-item/preview/status/actions/withPriceContainer.jsx","components/ui/buttons/DarkBlueGradientButton.jsx","components/nft-item/preview/status/actions/buy/BuyNftContainer.jsx","state/transaction/nft/slice.ts","business-logic/near2/near/api/market/transaction.ts","state/transaction/nft/thunk.ts","components/ui/buttons/MjolGreenBlueButton.jsx","components/ui/modal/InputPriceModal.jsx","components/nft-item/preview/status/actions/sell/SellNftContainer.jsx","components/nft-item/preview/status/actions/unlist/UnlistNftContainer.jsx","components/nft-item/preview/status/actions/not-listed/NotListedNftContainer.jsx","components/nft-item/preview/status/actions/connect-wallet/ConnectWalletButton.jsx","components/nft-item/preview/status/actions/not-supported/NftContractNotSupported.jsx","hoc/preview/nft/NftStatusHoc.tsx","hooks/useNftMarketStatus.ts","hoc/preview/nft/PreviewNftPageHoc.tsx","state/preview/nft/thunk.ts","hoc/auth/Logout.jsx","components/filters/search/SearchInput.jsx","components/pages/explore/nft/NftFilters.jsx","components/pages/explore/nft/ExploreNftPage.jsx","state/explore/nfts/slice.ts","hoc/explore/nft/ExploreNftsPageHoc.jsx","state/explore/nfts/thunk.ts","launch/AppRouter.jsx","components/ui/navbar/buttons.js","components/pages/navbar/menu/TabDropDownMenu.jsx","resources/hammer.png","resources/label6.png","components/pages/navbar/Navbar.js","components/pages/navbar/NavbarContainer.js","launch/App.tsx","state/preview/reducer.ts","state/navbar/slice.ts","state/explore/reducer.ts","state/store.ts","index.tsx"],"names":["NetworkEnv","GreetingText","className","LandingPage","NotFoundPage","src","alt","CreateCollectionPage","GAS","BN","SM_DEPOSIT","YOCTO_NEAR","MJOL_MARKET_CONTRACT_ID","config","env","PRODUCTION","MAINNET","networkId","nodeUrl","contractName","walletUrl","helperUrl","explorerUrl","DEVELOPMENT","TESTNET","BETANET","LOCAL","keyPath","process","HOME","TEST","CI","masterAccount","CI_BETANET","Error","getConfig","near","Near","keyStore","keyStores","BrowserLocalStorageKeyStore","wallet","WalletConnection","getAccountId","Contract","account","viewMethods","changeMethods","signIn","requestSignIn","then","catch","signOut","viewFunction","contractId","methodName","args","functionCall","gas","attachedDeposit","walletCallbackUrl","mjolViewFunction","mjolFunctionCall","SingleCharLine","props","type","name","id","placeholder","text","minLength","maxLength","onChange","e","setState","target","value","SingleNumberLine","min","max","SingleLineContainer","required","MultiLineContainer","rows","defaultValue","OptionInputContainer","setCurCollection","myCollections","map","PropertyInput","UploadFileInput","state","stroke","fill","viewBox","d","strokeWidth","strokeLinecap","strokeLinejoin","htmlFor","accept","files","width","URL","createObjectURL","onClick","xmlns","description","image","traits","a","client","NFTStorage","token","store","makeNftLink","nftIpfsLink","startsWith","slice","PROFILE_TAB","DarkBlueTitle","title","RoundLoader","height","loop","animationData","lottieJson","play","style","BlueShadowContainer","children","LineAlert","role","CreateNftPage","concat","useState","curCollection","setTitle","setDescription","royalty","setRoyalty","file","setFile","isLoading","setIsLoading","alertText","setAlertText","propertiesNum","setPropertiesNum","fetchProperties","setFetchProperties","onSubmit","preventDefault","isSignedIn","length","storeNFT","res","console","log","ipfsMedia","data","href","ipfsRef","url","token_metadata","media","reference","copies","payout","toString","tokenMetadata","token_id","Date","getTime","token_owner_id","mintToCommonCollection","tmpNum","pop","ind","ExploreCollectionsPage","useAppDispatch","useDispatch","useAppSelector","useSelector","withAccountId","Component","accountId","initialState","tabs","ALL_NFTS","LISTED_NFTS","HISTORY","activeTab","fetching","nfts","history","profileSlice","createSlice","reducers","changeTab","action","payload","addNft","push","toggleFetching","resetNfts","profileReducer","reducer","ProfileHistoryFetch","useEffect","NftAPI","fetch","timeout","response","ok","error","statusText","status","json","isIPFS","require","getRealUrl","urlHash","storageLink","endsWith","cid","getNftMintedSiteInfo","nft","holder","split","nftLink","metadata","convertStandardNFT","listedNftKeys","mediaUrl","media_hash","Promise","resolve","tokenId","ownerId","owner_id","mediaURL","referenceURL","reference_hash","mintSite","price","undefined","reject","getMintbaseNFT","getJsonByURL","jsonNFT","Account","getConvertedNFT","emptyMarketData","tokens","has_next_batch","total_count","marketAPI","fetchTokens","from","limit","fetchUserListings","fetchNftPrice","tokenUID","token_uid","formatPrice","x","toLocaleString","useGrouping","utils","format","formatNearAmount","getNftPriceByTokenUID","payableToken","getNftPricesByUser","Map","listings","forEach","set","nft_contract_id","Object","fromEntries","getMarketNfts","marketNfts","resNFTs","marketNft","nftPromise","fetchNftContracts","nftAPI","balance","max_len_payout","getNFTsByContractAndAccount","account_id","from_index","getNFTsByContractAndTokenId","getNftPayouts","payouts","royalties","highestPayout","payoutKey","payoutVal","parseInt","addExtraContracts","curContracts","contract","includes","getNfts","nftContracts","SmallNftLoader","speed","backgroundColor","foregroundColor","y","rx","ry","NftCollectionContainer","ImageLoader","NftImage","path","loading","setLoading","onLoad","NftBoxContainer","NearSVG","clipPath","SmallNftPrice","isListed","NftMintedLink","mintedName","mintedLink","NftTitle","NftCollection","collectionName","collectionLink","to","NftVerifiedStatus","isVerified","color","NftItem","previewLink","collectionLogoLink","NftsGrid","loaders","Array","i","idx","ProfileNftsFetch","profile","dispatch","actions","contracts","contractNfts","promiseNft","fetchMyNfts","filter","classNames","classes","Boolean","join","DarkBlueMjolText","MjolBlueGradientButton","isActive","ProfileNavigationBar","onTabChange","navbar","item","ProfilePage","render","tab","PreviewNftImage","link","ShareIcon","cx","cy","r","x1","y1","x2","y2","CollectionLink","Hr","DropDownMjolBlueButton","buttonContent","initialVisible","visible","setVisible","ItemMarketStatus","NftPreviewTitle","PreviewAttribute","shrinkValue","string","chunkSize","sizeToSplit","shortenString","navigator","clipboard","writeText","place","delayShow","PreviewAttributes","attributes","attribute","IconText","icon","NftPreviewInfo","statusElement","ownerAttributes","element","PreviewNftPage","previewNftSlice","success","failure","setPayouts","entries","kv","reset","previewNftReducer","PreviewNftPrice","withPriceContainer","DarkBlueGradientButton","pending","marketNftTransactionSlice","commit","giveApprove","stringPrice","parseNearAmount","msg","JSON","stringify","buyNftWithPayouts","nearAmount","unlistNFT","MjolGreenBlueButton","InputPriceModal","hidden","setPrice","SellNftContainer","NotListedNftContainer","ConnectWalletButton","NftContractNotSupported","NftStatusHoc","LISTED","CAN_SELL","CAN_BUY","FREE","useNftMarketStatus","sellNft","NOT_SUPPORTED","useParams","preview","all","finally","p","fetchNft","Logout","logout","window","location","reload","SearchInput","isTyping","onCancel","onSearch","NftFilters","ExploreNftPage","exploreNftsSlice","exploreNftsReducer","ExploreNftsPageHoc","explore","promises","promise","AppRouter","exact","ProfilePageHoc","CloseMenuButton","Button","DropDownButton","isOpen","tabName","MenuButton","TabsDropDownMenu","isProfile","as","Fragment","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Panel","SmallNavBar","Navbar","exploreTabs","createTabs","create","profileTabs","singleTabs","single","imgLogo","imgLabel","Group","focus","NavbarContainer","App","previewReducer","combineReducers","navbarReducer","exploreReducer","rootReducer","configureStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e76248cc.chunk.js","sourcesContent":["export enum NetworkEnv {\n    MAINNET = \"mainnet\",\n    TESTNET = \"testnet\",\n    DEVELOPMENT = \"development\",\n    BETANET = \"betanet\",\n    PRODUCTION = \"production\",\n    LOCAL = \"local\",\n    TEST = \"test\",\n    CI = \"ci\",\n    CI_BETANET = \"ci-betanet\"\n}","import React from 'react';\n\nconst GreetingText = () => {\n    return (\n        <div className=\"max-w-7xl mx-auto w-1/2 space-y-14 h-screen\">\n            <div\n                className=\"text-3xl text-left md:text-6xl font-extrabold text-transparent bg-clip-text bg-gradient-to-br from-mjol-blue-base to-green-200 flex-end\">\n                Welcome to MjolNear\n            </div>\n            <div className=\"text-sm md:text-lg font-mono\">\n                The first Open NFT marketplace on Near blockchain.\n            </div>\n        </div>\n    );\n};\n\nexport default GreetingText;","import React from 'react';\nimport GreetingText from \"./GreetingText\";\n\nconst LandingPage = () => {\n    return (\n        <div className=\"px-8 py-8\">\n            <GreetingText/>\n        </div>\n    )\n};\n\nexport default LandingPage;","import React from 'react';\n\nconst NotFoundPage = () => {\n    return (\n        <img className=\"max-w-3xl mx-auto\"\n             src=\"https://cdn.dribbble.com/users/745025/screenshots/6723888/gif_404.gif\"\n             alt=\"not found\"\n        />\n    );\n};\n\nexport default NotFoundPage;","import React from 'react';\n\nconst CreateCollectionPage = () => {\n    return (\n        <div>\n            Create collection\n        </div>\n    );\n};\n\nexport default CreateCollectionPage;","import BN from \"bn.js\";\n\n// 0.0000000003 Ⓝ\nexport const GAS = new BN(\"300000000000000\");\n\n// 0.1 Ⓝ\nexport const SM_DEPOSIT = new BN(\"100000000000000000000000\")\n\n// one yocto Ⓝ\nexport const YOCTO_NEAR = new BN(\"1\");\n\n","export const MJOL_MARKET_CONTRACT_ID = 'market.mjol.near'","import {Contract, keyStores, Near, WalletConnection} from \"near-api-js\";\nimport {getConfig} from \"../enviroment/config\";\nimport {NetworkEnv} from \"../enviroment/network\";\n\nexport const network = NetworkEnv.MAINNET\nexport const config = getConfig(network)\n\nconst near = new Near({\n    keyStore: new keyStores.BrowserLocalStorageKeyStore(),\n    ...config,\n})\n\nexport const wallet = new WalletConnection(near, config.contractName)\n\n// Initializing our setup APIs by setup name and configuration\nexport const contract = new Contract(wallet.account(), config.contractName, {\n    // View methods are read only. They don't modify the state, but usually return some value.\n    viewMethods: ['get_nfts', 'get_user_nfts', 'get_nft_price'],\n    // Change methods can modify the state. But you don't receive the returned value when called.\n    changeMethods: ['buy_with_payouts', 'remove_from_market'],\n})\n\nexport const getAccountId = () => {\n    return wallet.getAccountId()\n}\n\nexport const signIn = () => {\n    wallet.requestSignIn(config.contractName)\n        .then()\n        .catch()\n}\n\nexport const signOut = () => {\n    wallet.signOut()\n}","import {NetworkEnv} from \"./network\";\nimport {NearConfig} from \"near-api-js/lib/near\";\nimport {MJOL_MARKET_CONTRACT_ID} from \"./contract-names\";\n\n\nexport interface Config extends NearConfig {\n    contractName: string,\n    explorerUrl?: string,\n    keyPath?: string\n}\n\nexport const getConfig = (env: NetworkEnv): Config => {\n    switch (env) {\n        case NetworkEnv.PRODUCTION:\n        case NetworkEnv.MAINNET:\n            return {\n                networkId: 'mainnet',\n                nodeUrl: 'https://rpc.mainnet.near.org',\n                contractName: MJOL_MARKET_CONTRACT_ID,\n                walletUrl: 'https://wallet.near.org',\n                helperUrl: 'https://helper.mainnet.near.org',\n                explorerUrl: 'https://explorer.mainnet.near.org',\n            };\n        case NetworkEnv.DEVELOPMENT:\n        case NetworkEnv.TESTNET:\n            return {\n                networkId: 'testnet',\n                nodeUrl: 'https://rpc.testnet.near.org',\n                contractName: MJOL_MARKET_CONTRACT_ID,\n                walletUrl: 'https://wallet.testnet.near.org',\n                helperUrl: 'https://helper.testnet.near.org',\n                explorerUrl: 'https://explorer.testnet.near.org',\n            };\n        case NetworkEnv.BETANET:\n            return {\n                networkId: 'betanet',\n                nodeUrl: 'https://rpc.betanet.near.org',\n                contractName: MJOL_MARKET_CONTRACT_ID,\n                walletUrl: 'https://wallet.betanet.near.org',\n                helperUrl: 'https://helper.betanet.near.org',\n                explorerUrl: 'https://explorer.betanet.near.org',\n            };\n        case NetworkEnv.LOCAL:\n            return {\n                networkId: 'local',\n                nodeUrl: 'http://localhost:3030',\n                keyPath: `${process.env.HOME}/.near/validator_key.json`,\n                walletUrl: 'http://localhost:4000/wallet',\n                contractName: MJOL_MARKET_CONTRACT_ID,\n            };\n        case NetworkEnv.TEST:\n        case NetworkEnv.CI:\n            return {\n                networkId: 'shared-test',\n                nodeUrl: 'https://rpc.ci-testnet.near.org',\n                contractName: MJOL_MARKET_CONTRACT_ID,\n                masterAccount: 'test.near',\n            };\n        case NetworkEnv.CI_BETANET:\n            return {\n                networkId: 'shared-test-staging',\n                nodeUrl: 'https://rpc.ci-betanet.near.org',\n                contractName: MJOL_MARKET_CONTRACT_ID,\n                masterAccount: 'test.near',\n            };\n        default:\n            throw Error(`Unconfigured environment '${env}'. Can be configured in src/config.js.`)\n    }\n}\n\n// Why do we need that?\n// module.exports = getConfig;\n","import BN from \"bn.js\";\nimport {wallet} from \"../setup/near\";\nimport {MJOL_MARKET_CONTRACT_ID} from \"../enviroment/contract-names\";\nimport {GAS, SM_DEPOSIT} from \"../constants\";\nimport {ContractId} from \"./types\";\n\nexport interface ViewFunctionOptions {\n    contractId: ContractId,\n    methodName: string,\n    args: object\n}\n\nexport interface FunctionCallOptions extends ViewFunctionOptions {\n    gas?: BN,\n    attachedDeposit?: BN,\n    walletCallbackUrl?: string\n}\n\nexport interface MjolViewFunctionOptions {\n    methodName: string,\n    args: object\n}\n\nexport interface MjolFunctionCallOptions extends MjolViewFunctionOptions {\n    gas?: BN,\n    attachedDeposit?: BN,\n    walletCallbackUrl?: string\n}\n\nexport function viewFunction<T = any>({contractId, methodName, args}: ViewFunctionOptions): Promise<T> {\n    return wallet.account().viewFunction(contractId, methodName, args)\n}\n\nexport const functionCall = ({\n    contractId,\n    methodName,\n    args,\n    gas,\n    attachedDeposit,\n    walletCallbackUrl\n}: FunctionCallOptions) => {\n    return wallet.account().functionCall({\n        contractId,\n        methodName,\n        args,\n        gas,\n        attachedDeposit,\n        walletCallbackUrl\n    })\n}\n\nexport function mjolViewFunction<T = any>({methodName, args}: MjolViewFunctionOptions): Promise<T> {\n    return viewFunction<T>({\n        contractId: MJOL_MARKET_CONTRACT_ID, methodName, args\n    })\n}\n\nexport const mjolFunctionCall = ({\n                                     methodName,\n                                     args,\n                                     gas = GAS,\n                                     attachedDeposit = SM_DEPOSIT,\n                                     walletCallbackUrl\n                                 }: MjolFunctionCallOptions) => {\n    return functionCall({\n        contractId: MJOL_MARKET_CONTRACT_ID,\n        methodName,\n        args,\n        gas,\n        attachedDeposit,\n        walletCallbackUrl\n    })\n}","const SingleCharLine = (props) => {\n    return (\n        <input\n            type={props.type}\n            name={props.id}\n            id={props.id}\n            className=\"focus:border-cyan-500 flex-1 block w-full rounded-none rounded-md sm:text-sm border-gray-300\"\n            placeholder={props.text}\n            minLength={props.minLength}\n            maxLength={props.maxLength}\n            onChange={(e) => props.setState(e.target.value)}\n        />\n    );\n};\n\nexport default SingleCharLine;","import React from \"react\";\n\nconst SingleNumberLine = (props) => {\n    return (\n        <input\n            type={props.type}\n            name={props.id}\n            id={props.id}\n            className=\"peer focus:ring-indigo-500 focus:border-cyan-500 flex-1 block w-full rounded-none rounded-md sm:text-sm border-gray-300\"\n            placeholder={props.text}\n            min={props.min}\n            max={props.max}\n            onChange={(e) => props.setState(e.target.value)}\n        />\n    );\n};\n\nexport default SingleNumberLine;","import React from \"react\";\nimport SingleCharLine from \"../lines/SingleCharLine\";\nimport SingleNumberLine from \"../lines/SingleNumberLine\";\n\n\nconst SingleLineContainer = (props) => {\n    return (\n        <div className=\"grid grid-cols-3 gap-6\">\n            <div className=\"sm:col-span-2 col-span-3\">\n                <label\n                    className=\"block font-bold text-sm text-gray-700\">\n                    {props.name}{props.required ? <b className=\"text-sm font-large text-red-500\">*</b>:<></>}\n                </label>\n                <div className=\"mt-1 flex rounded-md shadow-sm\">\n                    {props.type === 'text' ? (\n                        <SingleCharLine name={props.name} text={props.text} type={props.type}\n                                        minLength={props.minLength} maxLength={props.maxLength} id={props.id}\n                                        setState={props.setState}\n                        />\n                    ) : (\n                        <SingleNumberLine name={props.name} text={props.text} type={props.type} min={props.min}\n                                          max={props.max} id={props.id} setState={props.setState}\n                        />\n                    )}\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default SingleLineContainer;","import React from \"react\";\n\nconst MultiLineContainer = (props) => {\n    return (\n        <div>\n            <label className=\"block text-sm font-bold text-gray-700\">\n                {props.name}\n            </label>\n            <div className=\"mt-1\">\n                      <textarea\n                          id={props.id}\n                          name={props.id}\n                          rows={props.rows}\n                          className=\"shadow-sm focus:ring-indigo-500 focus:border-cyan-500 mt-1 block w-full sm:text-sm border border-gray-300 rounded-md\"\n                          placeholder=\"Brief description for your NFT\"\n                          defaultValue={''}\n                          maxLength={props.maxLength}\n                          onChange={(e) => props.setState(e.target.value)}\n                      />\n            </div>\n        </div>\n    )\n};\n\nexport default MultiLineContainer;","import React from \"react\";\n\nconst OptionInputContainer = (props) => {\n    return (\n        <div className=\"grid grid-cols-6 gap-6\">\n            <div className=\"col-span-6 sm:col-span-2\">\n                <label className=\"block text-sm font-bold text-gray-700\">\n                    {props.name}\n                </label>\n                <select\n                    id={props.id}\n                    name={props.id}\n                    className=\"mt-1 block w-full py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-cyan-500 sm:text-sm\"\n                    onChange={(e) => props.setCurCollection(e.target.value)}\n                >\n                    {props.myCollections.map(name => (\n                        <option key={name} value={name}>{name}</option>\n                    ))}\n                </select>\n                <p className=\"mt-2 text-sm text-gray-500\">If you want to mint NFT as part of your collection, you can\n                    <b className=\"cursor-pointer\"> create it</b>\n                </p>\n            </div>\n        </div>\n    )\n};\n\nexport default OptionInputContainer;","const PropertyInput = (props) => {\n    return (\n        <div className=\"col-span-6 sm:col-span-3\">\n            <label className=\"text-sm font-medium text-gray-700\">\n                {props.name}\n            </label>\n            <input\n                type={props.type}\n                name={props.id}\n                id={props.id}\n                maxLength={props.maxLength}\n                className=\"mt-1 focus:ring-indigo-500 focus:border-cyan-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\n            />\n        </div>\n    )\n};\n\nexport default PropertyInput;","import React from \"react\";\n\nconst UploadFileInput = (props) => {\n    return (\n        <div>\n            <label className=\"block text-sm font-bold text-gray-700\">\n                Upload artwork file<b className=\"text-sm font-large text-red-500\">*</b>\n            </label>\n            {props.state === null ? (\n                <div\n                    className=\"flex justify-center mt-1 px-6 pt-5 pb-6 border-2 border-gray-300 border-dashed rounded-md\">\n                        <div className=\"space-y-1 text-center\">\n                            <svg\n                                className=\"mx-auto h-12 w-12 text-gray-400\"\n                                stroke=\"currentColor\"\n                                fill=\"none\"\n                                viewBox=\"0 0 48 48\"\n                                aria-hidden=\"true\"\n                            >\n                                <path\n                                    d=\"M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02\"\n                                    strokeWidth={2}\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                />\n                            </svg>\n                            <div className=\"flex text-sm text-gray-600\">\n                                <label\n                                    htmlFor=\"file-upload\"\n                                    className=\"relative cursor-pointer bg-white rounded-md font-medium text-blue-500 hover:text-indigo-500 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-indigo-500\"\n                                >\n                                    <span>Upload a file</span>\n                                    <input id=\"file-upload\" name=\"file-upload\" type=\"file\" accept=\"image/gif, image/jpeg, image/png\"\n                                           className=\"sr-only\" onChange={(e) => props.setState(e.target.files[0])}/>\n                                </label>\n                                <p className=\"pl-1\">or drag and drop</p>\n                            </div>\n                            <p className=\"text-xs text-gray-500\">PNG, JPG, GIF up to 10MB</p>\n                        </div>\n                </div>\n            ):(\n                <div className=\"flex justify-start mt-1 px-6 pt-5 pb-6 border-2 border-gray-300 border-dashed rounded-md\">\n                    <div className=\"relative\">\n                    <img width=\"100px\" src={URL.createObjectURL(props.state)} alt=\"nft image\"/>\n                    <button className=\"absolute top-0 right-0 -mx-2 -my-2 bg-gray-900 text-white rounded-full hover:bg-gray-500 cursor-pointer\"\n                            onClick={() => props.setState(null)}>\n                        <svg className=\"h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"\n                             stroke=\"currentColor\" aria-hidden=\"true\">\n                            <path d=\"M6 18L18 6M6 6l12 12\"/>\n                        </svg>\n                    </button>\n                    </div>\n                </div>\n\n            )}\n        </div>\n    )\n};\n\nexport default UploadFileInput;","import {NFTStorage} from 'nft.storage'\n\nexport async function storeNFT(name: any, description: any, image: any, traits: any) {\n    const client = new NFTStorage({\n        token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkaWQ6ZXRocjoweDYzZDFBZDhCMWIzMjQyQjFjMkUwNjE2NzcyOUNmMGEwYmIyNDE1OTUiLCJpc3MiOiJuZnQtc3RvcmFnZSIsImlhdCI6MTY0MDExNjI4NTY3OSwibmFtZSI6InRldHMgZm9yIG9wZW4gbmZ0In0.gU_buy_gF4XUwptAU7Ck5_TSrfhZNLva5h2uWAusHNo'\n    })\n\n    return await client.store({\n        name,\n        description,\n        image,\n        traits\n    })\n}\n\nexport function makeNftLink(nftIpfsLink: string) {\n    if (nftIpfsLink.startsWith('ipfs://')) {\n        return 'https://ipfs.io/ipfs/' + nftIpfsLink.slice(7)\n    }\n    return \"\"\n}\n","import React from 'react';\n\nconst DarkBlueTitle = ({title}) => {\n    return (\n        <div\n            className=\"text-center font-extrabold text-transparent bg-clip-text\n                       bg-gradient-to-br from-teal-900 to-mjol-blue-base\n                       text-5xl md:text-6xl lg:text-7xl\"\n        >\n            {title}\n        </div>\n    );\n};\n\nexport default DarkBlueTitle;","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport {Nft} from \"../../business-logic/models/nft\";\n\nexport enum PROFILE_TAB {\n    ALL_NFTS = \"All NFTs\",\n    LISTED_NFTS = \"Listed NFTs\",\n    HISTORY = \"My History\"\n}\n\nexport interface ProfileState {\n    tabs: Array<PROFILE_TAB>,\n    activeTab: PROFILE_TAB,\n    fetching: boolean,\n    nfts: Array<Nft>,\n    history: []\n}\n\nconst initialState: ProfileState = {\n    tabs: [PROFILE_TAB.ALL_NFTS, PROFILE_TAB.LISTED_NFTS, PROFILE_TAB.HISTORY],\n    activeTab: PROFILE_TAB.ALL_NFTS,\n    fetching: true,\n    nfts: [],\n    history: []\n}\n\nexport const profileSlice = createSlice({\n    name: \"profile\",\n    initialState,\n    reducers: {\n        changeTab: (state, action: PayloadAction<PROFILE_TAB>) => {\n            state.activeTab = action.payload\n        },\n        addNft: (state, action: PayloadAction<any>) => {\n            state.nfts.push(action.payload)\n        },\n        toggleFetching: (state, action: PayloadAction<boolean>) => {\n            state.fetching = action.payload\n        },\n        resetNfts: (state) => {\n            state.nfts = []\n            state.fetching = true\n        }\n    }\n})\n\nexport const profileReducer = profileSlice.reducer","import Lottie from \"react-lottie-player\";\nimport lottieJson from \"../../../resources/loading.json\";\nimport React from \"react\";\n\nconst RoundLoader = ({width = 200, height = 200}) => {\n    return (\n        <div className=\"flex h-screen bg-light_white justify-center\">\n            <div className=\"my-auto\">\n                <Lottie\n                    loop\n                    animationData={lottieJson}\n                    play\n                    style={{width, height}}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default RoundLoader;","import React from 'react';\nimport Background from \"../background/Background\";\n\nconst BlueShadowContainer = ({children}) => {\n    return (\n        // <Background>\n            <div className=\"shadow-mjol-base-blue-drop-xl pt-10\"\n            >\n                {children}\n            </div>\n        // </Background>\n    );\n};\n\nexport default BlueShadowContainer;","export default __webpack_public_path__ + \"static/media/lights.c9c5e86e.jpeg\";","import React, {useState} from 'react';\nimport {mintToCommonCollection} from \"../../../../business-logic/near2/near/api/nfts/mint\";\nimport SingleLineContainer from \"./upload/containers/SingleLineContainer\";\nimport MultiLineContainer from \"./upload/containers/MultiLineContainer\";\nimport OptionInputContainer from \"./upload/containers/OptionInputContainer\";\nimport PropertyInput from \"./upload/lines/PropertyInput\";\nimport UploadFileInput from \"./upload/UploadFileInput\";\nimport {makeNftLink, storeNFT} from \"../../../../business-logic/ipfs/upload\";\nimport DarkBlueTitle from \"../../../ui/text/DarkBlueTitle\";\nimport RoundLoader from \"../../../ui/loaders/RoundLoader\";\nimport BlueShadowContainer from \"../../../ui/shadow/BlueShadowContainer\";\nimport {getAccountId, wallet} from \"../../../../business-logic/near2/near/setup/near\";\n\n\nconst LineAlert = ({state, setState}) => {\n    return (\n        <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative\" role=\"alert\">\n            <span className=\"block sm:inline\">{state}</span>\n            <span className=\"absolute top-0 bottom-0 right-0 px-4 py-3\">\n                <svg className=\"fill-current h-6 w-6 text-red-500\" role=\"button\"\n                     xmlns=\"http://www.w3.org/2000/svg\"\n                     viewBox=\"0 0 20 20\"\n                     onClick={() => setState(\"\")}>\n                    <title>Close</title>\n                    <path d=\"M14.348 14.849a1.2 1.2 0 0 1-1.697 0L10 11.819l-2.651 3.029a1.2 1.2 0 1\n                    1-1.697-1.697l2.758-3.15-2.759-3.152a1.2 1.2 0 1 1 1.697-1.697L10 8.183l2.651-3.031a1.2 1.2 0 1 1\n                    1.697 1.697l-2.758 3.152 2.758 3.15a1.2 1.2 0 0 1 0 1.698z\"\n                    />\n                </svg>\n            </span>\n        </div>\n    )\n};\n\nconst CreateNftPage = () => {\n    const MIN_TITLE_LEN = 3;\n    const MAX_TITLE_LEN = 30;\n    const MAX_DESC_LEN = 120;\n    const MIN_ROYALTY = 0;\n    const MAX_ROYALTY = 50;\n    const MIN_TRAITS_LEN = 1;\n    const MAX_TRAITS_LEN = 20;\n\n\n    let myCollections = [] //['Collection#1', 'Collection#2', 'Collection#3'];\n    myCollections = ['None'].concat(myCollections);\n\n    const [curCollection, setCurCollection] = useState('None');\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [royalty, setRoyalty] = useState(0);\n    const [file, setFile] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const [alertText, setAlertText] = useState(\"\");\n\n\n    const [propertiesNum, setPropertiesNum] = useState([1]);\n    const [fetchProperties, setFetchProperties] = useState(false);\n    const addProperty = () => {\n        setPropertiesNum(propertiesNum.concat(propertiesNum[propertiesNum.length - 1] + 1));\n        setFetchProperties(!fetchProperties);\n    };\n    const delProperty = () => {\n        if (propertiesNum.length !== 1) {\n            const tmpNum = propertiesNum;\n            tmpNum.pop();\n            setPropertiesNum(tmpNum);\n            setFetchProperties(!fetchProperties);\n        }\n    };\n\n    const submitForm = (e) => {\n        e.preventDefault();\n        setAlertText(\"\");\n        if (!wallet.isSignedIn()) {\n            return\n        }\n        if (!(title.length <= MAX_TITLE_LEN && title.length >= MIN_TITLE_LEN)) {\n            setAlertText(`Title length must be between ${MIN_TITLE_LEN} and ${MAX_TITLE_LEN} characters`);\n            return\n        }\n        if (!(description.length <= MAX_DESC_LEN)) {\n            setAlertText(`Description length must be less than ${MAX_DESC_LEN} characters`);\n            return\n        }\n        if (!(royalty <= MAX_ROYALTY && royalty >= MIN_ROYALTY)) {\n            setAlertText(`Royalty must be less than ${MAX_ROYALTY}`);\n            return\n        }\n        if (file === null) {\n            setAlertText(`Please upload your NFT file`);\n            return\n        }\n\n        if (curCollection === 'None') {\n            setIsLoading(true);\n            storeNFT(title,\n                description,\n                file,\n                {}).then(res => {\n                console.log(res);\n                const ipfsMedia = makeNftLink(res.data.image.href);\n                const ipfsRef = makeNftLink(res.url);\n                let token_metadata = {\n                    title: title,\n                    description: description,\n                    media: ipfsMedia,\n                    reference: ipfsRef,\n                    copies: 1\n                };\n                let payout = null;\n                if (royalty !== 0) {\n                    payout = {\n                        payout: {}\n                    };\n                    payout[\"payout\"][getAccountId()] = (100 * royalty).toString();\n                }\n                mintToCommonCollection(token_metadata, payout);\n                setIsLoading(false);\n            }).catch((e) => {\n                    setAlertText(`Error: Can't upload file to ipfs, try again or contact to our support`);\n                    setIsLoading(false);\n                    console.log(e);\n                }\n            )\n        } else {\n            setAlertText('Only common collection available now');\n        }\n\n    };\n\n\n    return (\n        <>\n            {isLoading ? (\n                <RoundLoader/>\n            ) : (\n                <div className=\"bg-mjol-white\">\n                    <div className=\"bg-white\">\n                        <BlueShadowContainer>\n                            <div className=\"pb-10 px-4 space-y-8\">\n                                <DarkBlueTitle title=\"Create NFT\"/>\n                            </div>\n                        </BlueShadowContainer>\n                    </div>\n                    <div className=\"max-w-7xl py-10 mx-auto px-4 sm:px-6\">\n                        <form onSubmit={submitForm}>\n                            <div className=\"shadow rounded-md overflow-hidden\">\n                                <div className=\"px-4 py-5 bg-white space-y-6 p-6\">\n                                    <SingleLineContainer name={'Title'}\n                                                         required={true}\n                                                         text={'My NFT'}\n                                                         type={'text'}\n                                                         minLength={MIN_TITLE_LEN}\n                                                         maxLength={MAX_TITLE_LEN}\n                                                         id={'mint-title'}\n                                                         setState={setTitle}\n                                    />\n                                    <MultiLineContainer name={'Description'}\n                                                        text={'Brief description for your NFT'}\n                                                        maxLength={MAX_DESC_LEN}\n                                                        rows={3}\n                                                        id={'mint-desc'}\n                                                        setState={setDescription}\n                                    />\n                                    <SingleLineContainer name={'Royalty'}\n                                                         text={'Royalties on secondary sales(%), number from 0-50'}\n                                                         type={'number'}\n                                                         min={MIN_ROYALTY}\n                                                         max={MAX_ROYALTY}\n                                                         id={'mint-royalty'}\n                                                         setState={setRoyalty}\n                                    />\n                                    <OptionInputContainer name={'Collection'}\n                                                          myCollections={myCollections}\n                                                          id={'mint-collection'}\n                                                          curCollection={curCollection}\n                                                          setCurCollection={setCurCollection}\n                                    />\n                                    {curCollection !== 'None' ? (\n                                        <div className=\"grid grid-cols-6 gap-6\">\n                                            <label className=\"col-span-6 text-sm font-medium text-gray-700\">\n                                                Properties:\n                                                <button\n                                                    type=\"button\"\n                                                    onClick={addProperty}\n                                                    className=\"ml-5 bg-white py-2 px-3 border border-gray-300 rounded-md shadow-sm text-sm leading-4 font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                                                >\n                                                    +\n                                                </button>\n                                                <button\n                                                    type=\"button\"\n                                                    onClick={delProperty}\n                                                    className=\"ml-5 bg-white py-2 px-3 border border-gray-300 rounded-md shadow-sm text-sm leading-4 font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                                                >\n                                                    -\n                                                </button>\n                                            </label>\n                                            {propertiesNum.map(ind => (\n                                                <>\n                                                    <PropertyInput name={'Key #' + ind}\n                                                                   type={'text'}\n                                                                   minLength={MIN_TRAITS_LEN}\n                                                                   maxLength={MAX_TRAITS_LEN}\n                                                                   id={'mint-key-' + ind}\n                                                    />\n                                                    <PropertyInput name={'Value #' + ind}\n                                                                   type={'text'}\n                                                                   minLength={MIN_TRAITS_LEN}\n                                                                   maxLength={MAX_TRAITS_LEN}\n                                                                   id={'mint-value-' + ind}\n                                                    />\n                                                </>\n                                            ))}\n                                        </div>\n                                    ) : (\n                                        <></>\n                                    )}\n                                    <UploadFileInput state={file} setState={setFile}/>\n                                    {alertText !== \"\" ? (\n                                        <LineAlert state={alertText} setState={setAlertText}/>\n                                    ) : (\n                                        <></>\n                                    )}\n                                </div>\n                                <div className=\"px-4 py-3 bg-gray-50 text-left sm:px-6\">\n                                    <button\n                                        type=\"submit\"\n                                        className=\"inline-flex justify-center py-2 px-6 font-bold text-lg hover:text-gray-900 font-large rounded-md text-white bg-gradient-to-br from-mjol-blue-base to-green-200 hover:from-green-200 hover:to-mjol-blue-base\"\n                                    >\n                                        Mint\n                                    </button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            )\n            }\n        </>\n    )\n};\n\nexport default CreateNftPage;","import {GAS, SM_DEPOSIT} from \"../../constants\";\nimport {getAccountId} from \"../../setup/near\";\nimport {functionCall} from \"../rpc\";\n\nexport function mintToCommonCollection(tokenMetadata, payout) {\n    const commonContactId = 'mjol.near';\n    const tokenId = 'token-' + new Date().getTime();\n\n    const args = {\n        token_id: tokenId,\n        token_owner_id: getAccountId(),\n        token_metadata: tokenMetadata,\n    };\n    if (payout !== null) {\n        args[\"payout\"] = payout\n    }\n    return functionCall({\n        contractId: commonContactId,\n        methodName: 'nft_mint',\n        args,\n        gas: GAS,\n        attachedDeposit: SM_DEPOSIT\n    })\n}","import React from 'react';\n\nconst ExploreCollectionsPage = () => {\n    return (\n        <div>\n            Explore collections\n        </div>\n    );\n};\n\nexport default ExploreCollectionsPage;","import {useDispatch, TypedUseSelectorHook, useSelector} from \"react-redux\";\nimport {AppDispatch, RootState} from \"../state/store\";\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;","import React from \"react\";\nimport {wallet} from \"../business-logic/near2/near/setup/near\";\n\nconst withAccountId = (Component) => (props) => {\n    return <Component {...props} accountId={wallet.getAccountId()}/>\n};\n\nexport default withAccountId;","import React, {useEffect} from 'react';\n\nconst ProfileHistoryFetch = ({accountId}) => {\n\n    useEffect(() => {\n\n    }, [accountId])\n\n    return (\n        <div>\n            HISTORY\n        </div>\n    );\n};\n\nexport default ProfileHistoryFetch;","export class NftAPI {\n\n    static async getJsonByURL(url) {\n        try {\n            const response = await fetch(url, {timeout: 30000});\n            if (!response.ok) {\n                return {error: response.statusText + ' (' + response.status + ')'}\n            }\n            try {\n                return await response.json();\n            } catch (err) {\n                return {error: 'Unable to parse json response'}\n            }\n        } catch (error) {\n            return {error}\n        }\n    }\n}","import {NftAPI} from \"../../../../near/get-utils\";\nimport {viewFunction} from \"../rpc\";\nimport {Nft} from \"../../../../models/nft\";\n\nconst isIPFS = require('is-ipfs')\n\nfunction getRealUrl(url: string, urlHash?: string, contractId?: string) {\n    let storageLink = 'https://ipfs.fleek.co/ipfs/';\n\n    if (contractId && contractId.endsWith('mintbase1.near')) {\n        storageLink = 'https://arweave.net/';\n    }\n\n    if (url) {\n        if (url.startsWith(\"http\")) {\n            return url;\n        } else if (isIPFS.cid(url)) {\n            return storageLink + url;\n        }\n    }\n    if (urlHash && isIPFS.cid(urlHash)) {\n        return storageLink + urlHash;\n    }\n    return null\n}\n\nfunction getNftMintedSiteInfo(nft: any, contractId: string) {\n    if (contractId === 'x.paras.near') {\n        const holder = nft.token_id.split(':')[0];\n        return {\n            name: 'Paras',\n            nftLink: `https://paras.id/token/x.paras.near::${holder}/${nft.token_id}`\n        }\n    }\n    if (contractId.endsWith('mintbase1.near')) {\n        return {\n            name: 'Mintbase',\n            nftLink: `https://www.mintbase.io/thing/${nft.metadata.reference}:${contractId}`\n        }\n    }\n    // if (contractId === 'pluminite.near') {\n    //     return new MintSite(\n    //         'Pluminite',\n    //         `https://pluminite.com/#/gem/${nft.token_id}`\n    //     )\n    // }\n\n    if (contractId.endsWith('mjol.near')) {\n        return {\n            name: 'MjolNear',\n            nftLink: `https://mjolnear.com/nft/${contractId}/${nft.token_id}`\n        }\n    }\n    return {\n        name: 'Non-verified contract',\n        nftLink: ''\n    }\n}\n\n\n// Input example:\n//\n// token_id: '56178:34',\n// owner_id: 'turk.near',\n// metadata: {\n//   title: 'Scent of a Cloud #34',\n//   description: null,\n//   media: 'bafybeidotqecqjq37mab2o4tlqevevpn5kgjhgeblj7zlscxt6g2rxrkau',\n//   media_hash: null,\n//   copies: 111,\n//   issued_at: '1638389142491715689',\n//   expires_at: null,\n//   starts_at: null,\n//   updated_at: null,\n//   extra: null,\n//   reference: 'bafybeicq6hg6azxaymzay7bi3cu2ozjcd7fclmqy56dzg5o5nttuzaklka',\n//   reference_hash: null\n// },\n// approved_account_ids: {}\nfunction convertStandardNFT(contractId: string, nft: any, listedNftKeys: any): Promise<Nft> {\n    const metadata = nft.metadata;\n    const mediaUrl = getRealUrl(metadata.media, metadata.media_hash, contractId);\n    if (!mediaUrl) {\n        return Promise.reject(\"Standard NFT has no media URL\")\n    }\n    return Promise.resolve({\n        contractId,\n        tokenId: nft.token_id || nft.id,\n        ownerId: nft.owner_id,\n        title: metadata.title,\n        description: metadata.description,\n        copies: metadata.copies,\n        mediaURL: mediaUrl,\n        referenceURL: getRealUrl(metadata.reference, metadata.reference_hash, contractId),\n        mintSite: getNftMintedSiteInfo(nft, contractId),\n        price: listedNftKeys[contractId + ':' + nft.token_id] === undefined\n            ? null\n            : listedNftKeys[contractId + ':' + nft.token_id]\n    })\n}\n\n// nfts example\n// id: 68,\n// owner_id: { Account: 'turk.near' },\n// approvals: {},\n// metadata: {\n//   title: null,\n//   description: null,\n//   media: null,\n//   media_hash: null,\n//   copies: 5,\n//   issued_at: null,\n//   expires_at: null,\n//   starts_at: null,\n//   updated_at: null,\n//   extra: null,\n//   reference: 'MIILJWlP432tEAhhhXTDwGeEMM35XxOmDKy2YFRy96Y',\n//   reference_hash: null\n// },\n// royalty: { split_between: [Object], percentage: [Object] },\n// split_owners: null,\n// minter: 'kiora.near',\n// loan: null,\n// composeable_stats: { local_depth: 0, cross_contract_children: 0 },\n// origin_key: null\n// -----------------------------------------\n// JSON example:\n// category: 'membership',\n// description: 'This token represents Proof of Attendance (PoA) for a single NEAR account at the MetaBUIDL Open House. The bearer of this token was one of the first 100 accounts that registered for the event.',\n// copies: 10,\n// media_hash: 'Zty1W1Xe8pp3sO6nBjJNIGgOfFV2E_xm25Hfm3rb1Dk',\n// lock: null,\n// visibility: 'safe',\n// youtube_url: null,\n// animation_url: null,\n// animation_hash: null,\n// document: null,\n// document_hash: null,\n// royalty: null,\n// royalty_perc: 0.1,\n// split_revenue: null,\n// tags: [ 'nearedu', 'metabuidl', 'hackathon', 'metaverse' ],\n// media: 'https://arweave.net/Zty1W1Xe8pp3sO6nBjJNIGgOfFV2E_xm25Hfm3rb1Dk',\n// extra: [\n// {\n//   trait_type: 'Start Date',\n//   value: 1630521000,\n//   display_type: 'date'\n// },\n// { trait_type: 'End Date', value: 1630521000, display_type: 'date' },\n// { trait_type: 'website', value: 'https://near.university/' }\n// ],\n// title: 'NEAR University Metaverse',\n// store: 'nuniversity.mintbase1.near',\n// external_url: 'https://near.university/',\n// type: 'NEP171'\nasync function getMintbaseNFT(contractId: string, nft: any, listedNftKeys: any): Promise<Nft> {\n    const metadata = nft.metadata;\n    const url = await viewFunction({\n            contractId,\n            methodName: 'nft_token_uri',\n            args: {\n                token_id: nft.id.toString()\n            }\n        }\n    )\n    const jsonNFT = await NftAPI.getJsonByURL(url)\n    const mediaUrl = getRealUrl(jsonNFT.media, jsonNFT.media_hash, contractId)\n    if (!mediaUrl) {\n        return Promise.reject(\"Mintbase NFT has no media URL\")\n    }\n    return Promise.resolve({\n        contractId,\n        tokenId: nft.id.toString(),\n        ownerId: nft.owner_id.Account,\n        title: jsonNFT.title,\n        description: jsonNFT.description,\n        copies: metadata.copies,\n        mediaURL: mediaUrl,\n        referenceURL: getRealUrl(nft.metadata.reference, nft.metadata.reference_hash, contractId),\n        mintSite: getNftMintedSiteInfo(nft, contractId),\n        price: listedNftKeys[contractId + ':' + nft.id] === undefined\n            ? null\n            : listedNftKeys[contractId + ':' + nft.id]\n    })\n}\n\nexport async function getConvertedNFT(contractId: string, nft: any, listedNftKeys: any) {\n    if (contractId.endsWith('mintbase1.near')) {\n        return getMintbaseNFT(contractId, nft, listedNftKeys)\n    }\n    return convertStandardNFT(contractId, nft, listedNftKeys)\n}","import {mjolViewFunction} from \"../rpc\";\nimport {AccountId, ContractId, NumberAmount, TokenId, TokenUID} from \"../types\";\n\nexport type UserListings = Array<[TokenUID, NumberAmount]>\n\nexport interface MarketToken {\n    approval_id: number,\n    nft_contract_id: ContractId,\n    owner_id: AccountId,\n    price: number,\n    token_id: TokenId\n}\n\nexport interface MarketData {\n    tokens: MarketToken[],\n    has_next_batch: boolean,\n    total_count: number\n}\n\nexport interface PayableToken {\n    tokenUID: string,\n    price: number | null\n}\n\nconst emptyMarketData: MarketData = {\n    tokens: [],\n    has_next_batch: false,\n    total_count: 0\n}\n\n\nexport const marketAPI = {\n    /**\n     * Fetches NFTs listed on market.<br>\n     * If an error occurred returns empty array.\n     *\n     * @param from  start index for fetching\n     * @param limit maximum amount of fetched tokens\n     */\n    fetchTokens: (from: number, limit: number) =>\n        mjolViewFunction<MarketData>({\n                methodName: 'get_nfts',\n                args: {\n                    from,\n                    limit\n                }\n            }\n        ).catch(e => {\n            console.log(\"Get transaction NFTs error\", e);\n            return emptyMarketData\n        }),\n\n    /**\n     * Fetches currently listed nft prices\n     *\n     * @param accountId NEAR account\n     */\n    fetchUserListings: (accountId: AccountId) =>\n        mjolViewFunction<MarketToken[]>({\n            methodName: 'get_user_nfts',\n            args: {\n                owner_id: accountId\n            }\n        }),\n\n    /**\n     * Retrieves NFT price if listed on market, otherwise returns null\n     *\n     * @param contractId\n     * @param tokenId\n     */\n    fetchNftPrice: async (contractId: ContractId, tokenId: TokenId): Promise<PayableToken> => {\n        const tokenUID = `${contractId}:${tokenId}`\n        const price = await mjolViewFunction<number | null>({\n            methodName: 'get_nft_price',\n            args: {\n                token_uid: tokenUID\n            }\n        })\n        return {tokenUID, price}\n    }\n}","import {utils} from 'near-api-js'\nimport {getConvertedNFT} from \"../nfts/nft-converter\";\nimport {viewFunction} from \"../rpc\";\nimport {ContractId, TokenId} from \"../types\";\nimport {marketAPI} from \"./api\";\n\nfunction formatPrice(x: number) {\n    const price = x.toLocaleString('fullwide', {useGrouping: false});\n    return utils.format.formatNearAmount(price)\n}\n\nexport async function getNftPriceByTokenUID(contractId: ContractId, tokenId: TokenId) {\n    return marketAPI.fetchNftPrice(contractId, tokenId)\n        .then(payableToken => (\n            {\n                [payableToken.tokenUID]: payableToken.price ? formatPrice(payableToken.price) : null\n            }\n        )).catch(e => {\n            console.log(`getNftPriceByTokenUID error: ${e}`)\n            return {}\n        })\n}\n\nexport async function getNftPricesByUser(accountId: string) {\n    const map = new Map<string, string>()\n    return marketAPI.fetchUserListings(accountId)\n        .then(listings => {\n                listings.forEach(nft => map.set(`${nft.nft_contract_id}:${nft.token_id}`, formatPrice(nft.price)))\n                return Object.fromEntries(map)\n            }\n        ).catch(e => {\n            console.log(\"Get user NFT prices error\", e);\n            return {}\n        })\n}\n\n\n// export const fetchMarketNfts = (from: number, limit: number) => {\n//     getMarketNftsPrices(from, limit)\n//         .then(marketTokens =>\n//             console.log('x')\n//         )\n// }\n\nexport async function getMarketNfts(from = 0, limit = 50) {\n    const marketNfts = await marketAPI.fetchTokens(from, limit);\n    let resNFTs = [];\n\n    for (let marketNft of marketNfts.tokens) {\n\n        const contractId = marketNft.nft_contract_id\n        const tokenId = marketNft.token_id\n        const price = marketNft.price\n\n        const nftPromise = viewFunction({\n            contractId,\n            methodName: 'nft_token',\n            args: {\n                token_id: tokenId\n            }\n        }).then(response => getConvertedNFT(\n            contractId,\n            response,\n            {\n                [`${contractId}:${tokenId}`]: formatPrice(price)\n            }\n        ))\n\n        resNFTs.push(nftPromise)\n    }\n\n    return resNFTs\n}\n\n","export const fetchNftContracts = async (accountId: string): Promise<string[]> => {\n    const response = await fetch(`https://helper.mainnet.near.org/account/${accountId}/likelyNFts`)\n    if (!response.ok) {\n        return []\n    }\n    return response\n        .json()\n        .catch(() => [])\n}","import {viewFunction} from \"../rpc\";\nimport {AccountId, ContractId, StringAmount, TokenId} from \"../types\";\n\nexport interface Payouts {\n    payout: Record<AccountId, StringAmount>\n}\n\nexport const nftAPI = {\n    /**\n     * Fetches information about NFT.\n     * Currently, supports any type of responses.\n     *\n     * @param contractId NEAR contract where NFT is stored.\n     * @param tokenId NFT token\n     */\n    fetchByContractAndToken: (contractId: ContractId, tokenId: TokenId) => viewFunction(\n        {\n            contractId,\n            methodName: 'nft_token',\n            args: {\n                token_id: tokenId\n            }\n        }),\n\n    /**\n     * Fetches standard NFT payouts.\n     * @see [Standard for a Multiple-Recipient-Payout mechanic on NFT Contracts (NEP-199)]{@link https://nomicon.io/Standards/NonFungibleToken/Payout.html}\n     *\n     * @param contractId NEAR contract where NFT is stored.\n     * @param tokenId NFT token\n     */\n    fetchPayouts: (contractId: ContractId, tokenId: TokenId) => viewFunction<Payouts>(\n        {\n            contractId,\n            methodName: 'nft_payout',\n            args: {\n                token_id: tokenId,\n                balance: '100000000',\n                max_len_payout: 10\n            }\n        })\n}","import {getConvertedNFT} from \"./nft-converter\";\nimport {getNftPriceByTokenUID, getNftPricesByUser} from \"../market/get-nfts-market\";\nimport {viewFunction} from \"../rpc\";\nimport {fetchNftContracts} from \"../nft-contracts\";\nimport {nftAPI} from \"./api\";\n\n\nconst getNFTsByContractAndAccount = (\n    contractId: string,\n    accountId: string,\n    limit = 20,\n    from = 0\n): Promise<any[]> => {\n    return viewFunction({\n        contractId,\n        methodName: 'nft_tokens_for_owner',\n        args: {\n            account_id: accountId,\n            from_index: from.toString(),\n            limit: limit\n        }\n    })\n}\n\n\nexport async function getNFTsByContractAndTokenId(contractId: string, tokenId: string) {\n    const nft = await nftAPI.fetchByContractAndToken(contractId, tokenId)\n    const listedNftKeys = await getNftPriceByTokenUID(contractId, tokenId);\n    return getConvertedNFT(contractId, nft, listedNftKeys)\n}\n\nexport async function getNftPayouts(contractId: string, tokenId: string) {\n    const TREASURY_PERCENT = 2;\n    return nftAPI.fetchPayouts(contractId, tokenId).then(payouts => {\n        let royalties: Record<string, number> = {'treasury': TREASURY_PERCENT};\n        let highestPayout = null;\n        for (let payoutKey in payouts['payout']) {\n            const payoutVal = parseInt(payouts['payout'][payoutKey]) / 1000000;\n            if (!highestPayout || highestPayout[1] < payoutVal) {\n                highestPayout = [payoutKey, payoutVal]\n            }\n            royalties[payoutKey] = payoutVal\n        }\n        if (highestPayout) {\n            delete royalties[highestPayout[0]]\n        }\n        delete royalties['undefined']\n\n        return royalties\n    })\n}\n\nfunction addExtraContracts(curContracts: string[]) {\n    const extraContracts = ['mjol.near'];\n    for (let contract of extraContracts) {\n        if (!curContracts.includes(contract)) {\n            curContracts.push('mjol.near');\n        }\n    }\n    return curContracts\n}\n\nexport async function getNfts(accountId: string) {\n\n    let nftContracts = await fetchNftContracts(accountId)\n    nftContracts = addExtraContracts(nftContracts)\n\n    const listedNftKeys = await getNftPricesByUser(accountId);\n    return nftContracts.map(contractId =>\n        getNFTsByContractAndAccount(contractId, accountId)\n            .then(nfts =>\n                nfts.map((nft: any) =>\n                    getConvertedNFT(contractId, nft, listedNftKeys)\n                )\n            )\n    )\n}\n\n\n","import {getNfts} from \"../../business-logic/near2/near/api/nfts/get-nfts\";\n\nimport {AppDispatch} from \"../store\";\nimport {profileSlice} from \"./slice\";\n\nexport const fetchMyNfts = (accountId: string) => async (dispatch: AppDispatch) => {\n    dispatch(profileSlice.actions.toggleFetching(false))\n    getNfts(accountId)\n        .then(contracts => contracts\n            .forEach(contractNfts =>\n                contractNfts.then(nfts =>\n                    nfts.forEach(promiseNft =>\n                        promiseNft.then(nft => dispatch(profileSlice.actions.addNft(nft)))\n                    )\n                )\n            )\n        )\n}","import React from 'react';\nimport ContentLoader from \"react-content-loader\";\n\nconst SmallNftLoader = ({width, height, speed = 1.5}) => {\n\n    return (\n        <div className=\"rounded-xl ring-1 ring-gray-200 overflow-hidden\">\n            <ContentLoader\n                speed={speed}\n                width={width}\n                height={height}\n                viewBox={`0 0 ${width} ${height}`}\n                backgroundColor=\"#dfe1e2\"\n                foregroundColor=\"#f5f5f5\"\n            >\n                <rect x=\"0\" y=\"0\" width=\"280\" height=\"280\"/>\n                <rect x=\"20\" y=\"290\" rx=\"5\" ry=\"5\" width=\"240\" height=\"17\"/>\n                <rect x=\"20\" y=\"318\" rx=\"5\" ry=\"5\" width=\"240\" height=\"15\"/>\n                <rect x=\"20\" y=\"367\" rx=\"5\" ry=\"5\" width=\"240\" height=\"17\"/>\n            </ContentLoader>\n        </div>\n    )\n};\n\nexport default SmallNftLoader;","import React from 'react';\n\nconst NftCollectionContainer = ({children}) => {\n    return (\n        <div className=\"grid gap-8 lg:gap-8 xl:gap-10 justify-center auto-rows-min\n                        grid-cols-1\n                        xxs:grid-cols-1nft-280\n                        sm:grid-cols-2nft-280\n                        lg:grid-cols-3nft-280\n                        xl:grid-cols-4nft-280\"\n        >\n            {children}\n        </div>\n    );\n};\n\nexport default NftCollectionContainer;","import React from 'react';\n\nimport lottieJson from \"../../../resources/loading.json\";\nimport Lottie from \"react-lottie-player\";\n\nconst ImageLoader = ({width = 40, height = 40}) => {\n    return <Lottie\n        loop\n        animationData={lottieJson}\n        play\n        style={{width, height}}\n    />\n};\n\nexport default ImageLoader;","import React, {useState} from 'react';\nimport ImageLoader from \"../../../ui/loaders/ImageLoader\";\n\nconst NftImage = ({path}) => {\n\n    const [loading, setLoading] = useState(true)\n\n    return (\n        <div className=\"aspect-w-1 aspect-h-1 justify-center\">\n            <img src={path}\n                 alt=\"media not supported\"\n                 className={\"object-contain \" + (loading ? \"hidden\" : \"\")}\n                 onLoad={() => setLoading(false)}\n            />\n            {loading &&\n                <div className=\"flex items-center justify-center\">\n                    <ImageLoader/>\n                </div>\n            }\n        </div>\n    );\n};\n\nexport default NftImage;","import React from 'react';\n\nconst NftBoxContainer = ({children}) => {\n    return (\n        <div className=\"group flex flex-col overflow-hidden justify-between\n                        rounded-xl bg-white ring-1 ring-blue-200\n                        select-none\n                        shadow-mjol-blue-all-xs\n                        transform duration-300 ease-border-timing\n                        hover:shadow-mjol-blue-all-md hover:ring-blue-400\"\n        >\n            {children}\n        </div>\n    );\n};\n\nexport default NftBoxContainer;","import React from 'react';\n\nconst NearSVG = () => {\n    return (\n        <svg className=\"mx-2 h\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <g clipPath=\"url(#clip0)\">\n                <path className=\"fill-current\"\n                      d=\"M19.1736 1.21319L14.2154 8.57143C13.8725 9.07253 14.5318 9.67912 15.0066 9.25714L19.8857 5.01099C20.0175 4.90549 20.2022 4.98462 20.2022 5.16923V18.4352C20.2022 18.6198 19.9648 18.6989 19.8593 18.567L5.09008 0.896703C4.61535 0.316484 3.92964 0 3.1648 0H2.63733C1.2659 0 0.131836 1.13407 0.131836 2.53187V21.2044C0.131836 22.6022 1.2659 23.7363 2.6637 23.7363C3.53403 23.7363 4.35162 23.2879 4.82634 22.5231L9.78458 15.1648C10.1274 14.6637 9.4681 14.0571 8.99337 14.4791L4.11425 18.6989C3.98239 18.8044 3.79777 18.7253 3.79777 18.5407V5.3011C3.79777 5.11648 4.03513 5.03736 4.14063 5.16923L18.9099 22.8396C19.3846 23.4198 20.0967 23.7363 20.8351 23.7363H21.3626C22.7604 23.7363 23.8945 22.6022 23.8945 21.2044V2.53187C23.8945 1.13407 22.7604 0 21.3626 0C20.4659 0 19.6483 0.448352 19.1736 1.21319V1.21319Z\"/>\n            </g>\n        </svg>\n\n    );\n};\n\nexport default NearSVG;","import React from 'react';\n\nimport NearSVG from \"../../../ui/icons/near/NearSVG\";\n\nconst SmallNftPrice = ({price, isListed}) => {\n    return (\n        <div className=\"flex items-center\">\n            <p className=\"text-mjol-cyan-base font-extrabold text-xl\">\n                {isListed ? price : \"Not listed\"}\n            </p>\n            {isListed && <NearSVG/>}\n        </div>\n    );\n};\n\nexport default SmallNftPrice;","import React from 'react';\n\nconst NftMintedLink = ({mintedName, mintedLink}) => {\n    return (\n        <a className=\"text-mjol-purple-dark font-semibold hover:text-mjol-purple-base\"\n           href={mintedLink}\n           target=\"_blank\"\n        >\n            Minted on {mintedName}\n        </a>\n    );\n};\n\nexport default NftMintedLink;","import React from 'react';\n\nconst NftTitle = ({title}) => {\n    return (\n        <div className=\"font-extrabold text-mjol-purple-dark truncate text-lg\">\n            {title}\n        </div>\n    );\n};\n\nexport default NftTitle;","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nconst NftCollection = ({collectionName, collectionLink}) => {\n    return (\n        <Link className=\"text-sm font-medium truncate text-mjol-purple-dark-t hover:underline\"\n              to={collectionLink}\n        >\n            {collectionName}\n        </Link>\n    );\n};\n\nexport default NftCollection;","import React from 'react';\nimport {BsFillCheckCircleFill} from 'react-icons/bs'\n\nconst NftVerifiedStatus = ({isVerified = true}) => {\n    return isVerified\n        ? <BsFillCheckCircleFill color=\"#18b3cc\"/>\n        : <></>\n};\n\nexport default NftVerifiedStatus;","import React from 'react';\nimport NftImage from \"./details/image/NftImage\";\nimport NftBoxContainer from \"./NftBoxContainer\";\nimport SmallNftPrice from \"./details/price/SmallNftPrice\";\nimport NftMintedLink from \"./details/minted/NftMintedLink\";\nimport NftTitle from \"./details/title/NftTitle\";\nimport NftCollection from \"./details/collection/NftCollection\";\n\nimport NftVerifiedStatus from \"./details/verified/NftVerifiedStatus\";\nimport {Link} from \"react-router-dom\";\n\nconst NftItem = ({nft}) => {\n    const previewLink = `/nft/${nft.contractId}/${nft.tokenId}`\n    const isListed = nft.price !== null\n    return (\n        <NftBoxContainer>\n            <Link to={previewLink} className=\"pb-1\">\n                <NftImage path={nft.mediaURL}/>\n            </Link>\n            <div className=\"px-5\">\n                <Link to={previewLink}>\n                    <NftTitle title={nft.title}/>\n                </Link>\n                <NftCollection collectionLogoLink=\"MOCK\"\n                               collectionLink=\"MOCK\"\n                               collectionName=\"MOCK\"/>\n                <div className=\"grid place-items-end\">\n                    <div className=\"inline-flex space-x-1 text-tiny-4 items-center\">\n                        <NftMintedLink mintedName={nft.mintSite.name}\n                                       mintedLink={nft.mintSite.nftLink}/>\n                        {nft.mintSite.name === 'Non-verified contract' ? (\n                            <></>\n                        ) : (<NftVerifiedStatus/>)\n                        }\n                    </div>\n                </div>\n                <hr className=\"ring-1 ring-mjol-purple-dark border-none\"/>\n                <div className=\"py-2\">\n                    <SmallNftPrice price={nft.price} isListed={isListed}/>\n                </div>\n            </div>\n        </NftBoxContainer>\n    );\n};\n\nexport default NftItem;","import SmallNftLoader from \"../ui/loaders/SmallNftLoader\";\nimport NftCollectionContainer from \"./NftCollectionContainer\";\nimport NftItem from \"../nft-item/NftItem\";\nimport React from \"react\";\n\nconst NftsGrid = ({nfts, fetching}) => {\n    const loaders = Array(12)\n        .fill(0)\n        .map((i, idx) =>\n            <SmallNftLoader key={idx} width={280} height={397}/>\n        )\n\n    return (\n        <div className=\"p-5 md:p-10\">\n            <NftCollectionContainer>\n                {fetching\n                    ? loaders\n                    : nfts.map(nft =>\n                        <NftItem key={nft.tokenId + nft.contractId} nft={nft}/>\n                    )\n                }\n            </NftCollectionContainer>\n        </div>\n    );\n};\n\nexport default NftsGrid;\n","import React, {useEffect} from 'react';\nimport {useAppDispatch, useAppSelector} from \"../../hooks/redux\";\nimport {PROFILE_TAB, profileSlice} from \"../../state/profile/slice\";\nimport {fetchMyNfts} from \"../../state/profile/thunk\";\nimport NftsGrid from \"../../components/nft-collection/NftsGrid\";\n\nconst ProfileNftsFetch = ({accountId}) => {\n    const {nfts, fetching, activeTab} = useAppSelector(state => state.profile)\n    const dispatch = useAppDispatch()\n\n    useEffect(() => {\n        dispatch(fetchMyNfts(accountId))\n        return () => dispatch(profileSlice.actions.resetNfts())\n    }, [accountId])\n\n    return (\n        <NftsGrid fetching={fetching}\n                  nfts={activeTab === PROFILE_TAB.LISTED_NFTS\n                      ? nfts.filter(nft => nft.price !== null)\n                      : nfts\n                  }\n        />\n    );\n};\n\nexport default ProfileNftsFetch;","export default function classNames(...classes) {\n    return classes.filter(Boolean).join(' ')\n}","import React from 'react';\n\nconst DarkBlueMjolText = ({text}) => {\n    return (\n        <div className=\"text-center font-extrabold text-transparent\n                        bg-clip-text bg-gradient-to-bl from-blue-500 to-blue-800\"\n        >\n            {text}\n        </div>\n    );\n};\n\nexport default DarkBlueMjolText;","import React from 'react';\nimport classNames from \"../../../utils/css-utils\";\nimport DarkBlueMjolText from \"../text/DarkBlueMjolText\";\n\nconst MjolBlueGradientButton = ({title, onClick, isActive = true}) => {\n\n    return (\n        <button onClick={onClick}\n                className={\n                    classNames(isActive\n                            ? \"from-blue-500 to-blue-800\"\n                            : \"hover:shadow-mjol-blue-button hover:ring-1 hover:ring-inset hover:ring-blue-400\"\n                        , \"bg-gradient-to-l from-transparent to-transparent rounded-3xl group px-10 py-2 transform duration-200\"\n                    )\n                }\n        >\n            <div>\n                {isActive\n                    ? <div className=\"text-white font-extrabold\">{title}</div>\n                    : <DarkBlueMjolText text={title}/>\n                }\n            </div>\n        </button>\n    );\n};\n\nexport default MjolBlueGradientButton;","import React from 'react';\nimport MjolBlueGradientButton from \"../../../ui/buttons/MjolBlueGradientButton\";\nimport DarkBlueTitle from \"../../../ui/text/DarkBlueTitle\";\nimport BlueShadowContainer from \"../../../ui/shadow/BlueShadowContainer\";\n\nconst ProfileNavigationBar = ({onTabChange, activeTab, tabs}) => {\n\n    const navbar = tabs.map(item =>\n        <MjolBlueGradientButton key={item}\n                                title={item}\n                                isActive={item === activeTab}\n                                onClick={() => onTabChange(item)}\n        />)\n\n    return (\n        <BlueShadowContainer>\n            <div className=\"pb-10 space-y-10\">\n                <DarkBlueTitle title=\"My NFTs\"/>\n                <div className=\"text-center\">\n                    <div className=\"inline-flex flex-col gap-2 sm:flex-row sm:gap-5 md:text-lg\"\n                    >\n                        {navbar}\n                    </div>\n                </div>\n            </div>\n        </BlueShadowContainer>\n    );\n};\n\nexport default ProfileNavigationBar;","import React from 'react';\nimport ProfileNavigationBar from \"./navbar/ProfileNavigationBar\";\n\nconst ProfilePage = ({tabs, activeTab, onTabChange, children}) => {\n    return (\n        <div className=\"space-y-8 pb-4 min-h-screen\">\n            <ProfileNavigationBar onTabChange={onTabChange}\n                                  activeTab={activeTab}\n                                  tabs={tabs}/>\n\n            {children}\n        </div>\n    );\n};\n\nexport default ProfilePage;","import React from 'react';\nimport {useAppDispatch, useAppSelector} from \"../../hooks/redux\";\nimport withAccountId from \"../withAccountId\";\nimport {PROFILE_TAB, profileSlice} from \"../../state/profile/slice\";\nimport ProfileHistoryFetch from \"./ProfileHistoryFetch\";\nimport ProfileNftsFetch from \"./ProfileNftsFetch\";\nimport ProfilePage from \"../../components/pages/profile/ProfilePage\";\n\nconst ProfileFetch = ({accountId}) => {\n    const {activeTab, tabs} = useAppSelector(state => state.profile)\n    const dispatch = useAppDispatch()\n\n    const render = (children) =>\n        <ProfilePage tabs={tabs}\n                     activeTab={activeTab}\n                     onTabChange={tab => dispatch(profileSlice.actions.changeTab(tab))}>\n            {children}\n        </ProfilePage>\n\n    switch (activeTab) {\n        case PROFILE_TAB.ALL_NFTS:\n        case PROFILE_TAB.LISTED_NFTS:\n            return render(<ProfileNftsFetch accountId={accountId}/>)\n        case PROFILE_TAB.HISTORY:\n            return render(<ProfileHistoryFetch accountId={accountId}/>)\n    }\n};\n\nexport default withAccountId(ProfileFetch);","import React from 'react';\n\nconst PreviewNftImage = ({link}) => {\n    return (\n        <div className=\"justify-self-center md:justify-self-end w-full max-w-2xl\">\n            <img src={link}\n                 alt=\"media not supported\"\n                 className=\"w-full max-h-xl object-contain\"\n            />\n        </div>\n    );\n};\n\nexport default PreviewNftImage;","import React from 'react';\n\nconst ShareIcon = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"30\" viewBox=\"0 0 24 24\" fill=\"none\"\n             stroke=\"currentColor\"\n             strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"tw-mr-1\" color=\"black\">\n            <circle cx=\"18\" cy=\"5\" r=\"3\"/>\n            <circle cx=\"6\" cy=\"12\" r=\"3\"/>\n            <circle cx=\"18\" cy=\"19\" r=\"3\"/>\n            <line x1=\"8.59\" y1=\"13.51\" x2=\"15.42\" y2=\"17.49\"/>\n            <line x1=\"15.41\" y1=\"6.51\" x2=\"8.59\" y2=\"10.49\"/>\n        </svg>\n    );\n};\n\nexport default ShareIcon;\n","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport ShareIcon from \"../../../ui/icons/ShareIcon\";\n\nconst CollectionLink = ({name, link}) => {\n    return (\n        <div className=\"flex flex-row justify-between\">\n            <div\n                className=\"text-md md:text-lg font-bold text-mjol-purple-dark-t hover:underline text-center\">\n                <Link to={link}>{name}</Link>\n            </div>\n            <ShareIcon/>\n        </div>\n    );\n};\n\nexport default CollectionLink;","import React from 'react';\n\nconst Hr = ({color = \"bg-black\"}) => {\n    return <div className={color + \" h-px\"}/>\n};\n\nexport default Hr;","import {ChevronUpIcon} from '@heroicons/react/solid'\nimport React, {useState} from \"react\";\nimport classNames from \"../../../utils/css-utils\";\nimport Hr from \"../borders/Hr\";\n\nexport default function DropDownMjolBlueButton({buttonContent, children, initialVisible = false}) {\n\n    const [visible, setVisible] = useState(initialVisible)\n\n    return (\n        <div>\n            <button onClick={() => setVisible(!visible)}\n                    className={\n                        classNames(visible\n                                ? \"rounded-t-lg\"\n                                : \"rounded-lg\",\n                            \"group flex justify-between p-5 w-full text-md font-semibold text-left bg-blue-100\"\n                        )\n                    }\n            >\n                {buttonContent}\n                <ChevronUpIcon\n                    className={\n                        classNames(visible\n                                ? \"\"\n                                : \"rotate-180\",\n                            \"transform duration-200 w-6 h-6 text-gray-500 group-hover:text-black\"\n                        )\n                    }\n                />\n            </button>\n            {visible &&\n                <div>\n                    <div className=\"px-2 bg-blue-100\">\n                        <Hr color=\"bg-gray-600\"/>\n                    </div>\n                    {children}\n                </div>\n            }\n        </div>\n    )\n}","import React from 'react';\n\nconst NftPreviewTitle = ({title}) => {\n    return (\n        <div className=\"font-extrabold text-mjol-purple-dark text-lg md:text-xl\">\n            {title}\n        </div>\n    );\n};\n\nexport default NftPreviewTitle;","export enum ItemMarketStatus {\n    // Item is owned by current user and listed on transaction.\n    LISTED = \"LISTED\",\n\n    // Item is owned by current user and not listed on transaction.\n    CAN_SELL = \"CAN_SELL\",\n\n    // Item is owned by another user and listed on transaction\n    CAN_BUY = \"CAN_BUY\",\n\n    // Item is owned by another user and not listed on transaction.\n    FREE = \"FREE\",\n\n    // Item contract is not supported\n    NOT_SUPPORTED = \"NOT_SUPPORTED\",\n}\n\n\nexport interface TransactionStatus {\n    pending: boolean | undefined,\n    success: boolean | undefined\n}","import React from 'react';\nimport {shortenString} from \"../../../../utils/string\";\nimport ReactTooltip from 'react-tooltip';\n\nconst PreviewAttribute = ({name, value}) => {\n    let shrinkValue = shortenString(value)\n    return (\n        <div className=\"flex flex-row justify-between\">\n            <div className=\"font-semibold\">{name}</div>\n            <p className=\"cursor-pointer\"\n               data-tip={value}\n               onClick={() => navigator.clipboard.writeText(value)}\n            >\n                {shrinkValue}\n            </p>\n            <ReactTooltip className='text-sm' type='dark' place='bottom' delayShow={200}/>\n        </div>\n    );\n};\n\nexport default PreviewAttribute;","export const shortenString = (string, chunkSize = 5, sizeToSplit = 15) => {\n    if (string.length > sizeToSplit) {\n        return string.slice(0, chunkSize) + '..' + string.slice(-chunkSize)\n    }\n    return string\n}\n","import React from 'react';\nimport PreviewAttribute from \"./PreviewAttribute\";\n\nconst PreviewAttributes = ({attributes}) => {\n    return (\n        <div>\n            {attributes.length === 0\n                ? <div>Not found</div>\n                : attributes.map(attribute =>\n                    <PreviewAttribute key={attribute.name}\n                                      name={attribute.name}\n                                      value={attribute.value}\n                    />\n                )}\n        </div>\n    );\n};\n\nexport default PreviewAttributes;","import React from 'react';\n\nconst IconText = ({icon, text}) => {\n    return (\n        <div className=\"gap-2 flex flex-row items-center\">\n            {icon}\n            {text}\n        </div>\n    );\n};\n\nexport default IconText;","import CollectionLink from \"./CollectionLink\";\nimport DropDownMjolBlueButton from \"../../../ui/buttons/DropDownMjolBlueButton\";\nimport NftPreviewTitle from \"./NftPreviewTitle\";\nimport PreviewAttributes from \"../attributes/PreviewAttributes\";\nimport IconText from \"../../../ui/icons/IconText\";\nimport {BsList} from 'react-icons/bs';\nimport {MdAccountBalanceWallet as MdAcc} from 'react-icons/md'\nimport {GrMoney} from 'react-icons/gr'\nimport {GiBuyCard} from 'react-icons/gi'\nimport {BiDna} from 'react-icons/bi'\n\n\nconst NftPreviewInfo = ({nft, payouts, statusElement}) => {\n\n    const ownerAttributes = [\n        {name: \"Owner ID\", value: nft.ownerId || \"Not found\"},\n        {name: \"Token ID\", value: nft.tokenId || \"Not found\"},\n        {name: \"Contract\", value: nft.contractId || \"Not found\"}\n    ]\n\n    const tabs = [\n        {name: \"Description\", element: nft.description || \"Not found\", icon: <BsList/>},\n        {name: \"Attributes\", element: <PreviewAttributes attributes={ownerAttributes}/>, icon: <MdAcc/>},\n        {name: \"Royalties\", element: <PreviewAttributes attributes={payouts}/>, icon: <GrMoney/>},\n        {name: \"History\", element: \"Not found\", icon: <GiBuyCard/>},\n        {name: \"Traits\", element: \"Not found\", icon: <BiDna/>}\n    ]\n\n\n    return (\n        <div className=\"space-y-5 md:max-w-xl\">\n            <div>\n                <NftPreviewTitle title={nft.title}/>\n                <CollectionLink name=\"MOCK\" link=\"\"/>\n            </div>\n            {statusElement}\n            <div className=\"space-y-3\">\n                {tabs.map(tab => (\n                    <DropDownMjolBlueButton key={tab.name}\n                                            buttonContent={\n                                                <IconText icon={tab.icon}\n                                                          text={tab.name}\n                                                />\n                                            }>\n                        <div className=\"rounded-b-lg w-full bg-blue-100 text-black font-medium text-sm px-5 py-2\">\n                            {tab.element}\n                        </div>\n                    </DropDownMjolBlueButton>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default NftPreviewInfo;","import React from 'react';\n\nimport PreviewNftImage from \"../../../nft-item/preview/image/PreviewNftImage\";\nimport NftPreviewInfo from \"../../../nft-item/preview/details/NftPreviewInfo\";\n\nconst PreviewNftPage = ({nft, payouts, statusElement}) => {\n    return (\n        <div className=\"grid md:grid-cols-2 gap-8 min-h-screen bg-mjol-white p-5 xs:p-10 md:items-start\">\n            <PreviewNftImage link={nft.mediaURL}/>\n            <NftPreviewInfo nft={nft}\n                            payouts={payouts}\n                            statusElement={statusElement}\n            />\n        </div>\n    );\n};\n\nexport default PreviewNftPage;","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport {Nft} from \"../../../business-logic/models/nft\";\n\nexport interface PreviewNftState {\n    fetching: boolean,\n    success?: boolean,\n    nft?: Nft,\n    payouts: Array<any>\n}\n\n\nconst initialState: PreviewNftState = {\n    payouts: [],\n    fetching: true,\n}\n\nexport const previewNftSlice = createSlice({\n    name: \"preview-nft\",\n    initialState,\n    reducers: {\n        success: (state, action: PayloadAction<Nft>) => {\n            state.nft = action.payload\n        },\n        failure: (state) => {\n            state.nft = undefined\n        },\n        toggleFetching: (state, action: PayloadAction<boolean>) => {\n            state.fetching = action.payload\n        },\n        setPayouts: (state, action) => {\n            state.payouts = Object.entries(action.payload).map(kv => {\n                const [name, royalty] = kv\n                return {name, value: `${royalty}%`}\n            })\n        },\n        reset: () => initialState\n    }\n})\n\nexport const previewNftReducer = previewNftSlice.reducer","import React from 'react';\nimport DarkBlueMjolText from \"../../../ui/text/DarkBlueMjolText\";\nimport NearSVG from \"../../../ui/icons/near/NearSVG\";\n\nconst PreviewNftPrice = ({price}) => {\n    return (\n        <div className=\"flex items-center text-xl\">\n            <DarkBlueMjolText text={price}/>\n            <NearSVG/>\n        </div>\n    );\n};\n\nexport default PreviewNftPrice;","import React from 'react';\nimport PreviewNftPrice from \"../../../details/price/PreviewNftPrice\";\n\nconst withPriceContainer = (Component) => ({price, ...props}) => {\n    return (\n        <div className=\"rounded-lg px-5 py-2 space-y-2 bg-blue-100\">\n            <PreviewNftPrice price={price}/>\n            <Component {...props}/>\n        </div>\n    );\n};\n\nexport default withPriceContainer;","import React from 'react';\n\nconst DarkBlueGradientButton = ({title, ...props}) => {\n    return (\n        <button {...props}\n                className=\"w-full text-white font-extrabold\n                           bg-gradient-to-l from-blue-500 to-blue-800 rounded-lg px-10 py-2\n                           hover:from-blue-600\n                           hover:to-blue-800\n                           hover:shadow-mjol-gray-xs\"\n        >\n            {title}\n        </button>\n    )\n}\n\nexport default DarkBlueGradientButton;","import React from 'react';\nimport withPriceContainer from \"../withPriceContainer\";\nimport DarkBlueGradientButton from \"../../../../../ui/buttons/DarkBlueGradientButton\";\n\nconst BuyNftContainer = (props) => {\n    return <DarkBlueGradientButton title=\"Buy NFT\" {...props}/>;\n};\n\nexport default withPriceContainer(BuyNftContainer);","import {TransactionStatus} from \"../state\";\nimport {createSlice} from \"@reduxjs/toolkit\";\n\nconst initialState: TransactionStatus = {\n    pending: undefined,\n    success: undefined\n}\n\nexport const marketNftTransactionSlice = createSlice({\n    name: 'market-nft-transaction',\n    initialState,\n    reducers: {\n        commit: (state) => {\n            state.pending = true\n        },\n        success: (state) => {\n            state.success = true\n            state.pending = false\n        },\n        failure: (state) => {\n            state.success = false\n            state.pending = false\n        },\n        reset: () => initialState\n    }\n})\n\nexport const marketNftTransactionReducer = marketNftTransactionSlice.reducer","import {utils} from \"near-api-js\";\nimport {GAS, SM_DEPOSIT, YOCTO_NEAR} from \"../../constants\";\nimport {functionCall, mjolFunctionCall} from \"../rpc\";\nimport BN from \"bn.js\";\nimport {MJOL_MARKET_CONTRACT_ID} from \"../../enviroment/contract-names\";\n\n\nexport function giveApprove(contractId: string, tokenId: string, stringPrice: string) {\n    const price = utils.format.parseNearAmount(stringPrice.toString());\n    return functionCall({\n        contractId,\n        methodName: 'nft_approve',\n        args: {\n            token_id: tokenId,\n            account_id: MJOL_MARKET_CONTRACT_ID,\n            msg: JSON.stringify({price})\n        },\n        gas: GAS,\n        attachedDeposit: SM_DEPOSIT\n    })\n}\n\nexport function buyNftWithPayouts(contractId: string, tokenId: string, price: string) {\n    const nearAmount = utils.format.parseNearAmount(price) || \"0\";\n    return mjolFunctionCall({\n        methodName: 'buy_with_payouts',\n        args: {\n            nft_contract_id: contractId,\n            token_id: tokenId\n        },\n        gas: GAS,\n        attachedDeposit: new BN(nearAmount)\n    })\n}\n\nexport function unlistNFT(contractId: string, tokenId: string) {\n    return mjolFunctionCall({\n        methodName: 'remove_from_market',\n        args: {\n            nft_contract_id: contractId,\n            token_id: tokenId\n        },\n        gas: GAS,\n        attachedDeposit: YOCTO_NEAR\n    })\n}","import {AppDispatch} from \"../../store\";\nimport {marketNftTransactionSlice} from \"./slice\";\nimport {buyNftWithPayouts, giveApprove, unlistNFT} from \"../../../business-logic/near2/near/api/market/transaction\";\n\nexport const sellNft = (contractId: string, tokenId: string, price: string) =>\n    async (dispatch: AppDispatch) => {\n        dispatch(marketNftTransactionSlice.actions.commit())\n        giveApprove(contractId, tokenId, price)\n            .then(() => dispatch(marketNftTransactionSlice.actions.success()))\n            .catch(() => dispatch(marketNftTransactionSlice.actions.failure()))\n    }\n\nexport const buyNft = (contractId: string, tokenId: string, price: string) =>\n    async (dispatch: AppDispatch) => {\n        dispatch(marketNftTransactionSlice.actions.commit())\n        buyNftWithPayouts(contractId, tokenId, price)\n            .then(() => dispatch(marketNftTransactionSlice.actions.success()))\n            .catch(() => dispatch(marketNftTransactionSlice.actions.failure()))\n    }\n\n\nexport const unlistNft = (contractId: string, tokenId: string) =>\n    async (dispatch: AppDispatch) => {\n        dispatch(marketNftTransactionSlice.actions.commit())\n        unlistNFT(contractId, tokenId)\n            .then(() => dispatch(marketNftTransactionSlice.actions.success()))\n            .catch(() => dispatch(marketNftTransactionSlice.actions.failure()))\n    }\n","import React from 'react';\n\nconst MjolGreenBlueButton = ({children, ...props}) => {\n    return (\n        <button {...props} className=\"px-4 py-2 rounded-lg w-full\n                           bg-gradient-to-r from-mjol-blue-base to-green-200\n                           text-gray-900 text-mono font-semibold\n                           text-md md:text-lg\n                           hover:to-mjol-blue-base hover:from-green-200\n                           \">\n            {children}\n        </button>\n    );\n};\n\nexport default MjolGreenBlueButton;","import React, {useState} from 'react';\nimport MjolGreenBlueButton from \"../buttons/MjolGreenBlueButton\";\n\nconst InputPriceModal = ({hidden, setVisible, onClick}) => {\n\n    const [price, setPrice] = useState('')\n\n    return (\n        <div>\n            {hidden\n                ? <></>\n                : <div className=\"fixed inset-0 bg-gray-600 bg-opacity-90 overflow-y-auto\n                                   h-full w-full grid place-items-center\"\n                >\n                    <div className=\"w-1/2 grid grid-rows-2 gap-4 px-2 py-4 rounded-lg bg-mjol-white\">\n                        <input className=\"rounded-lg p-2\"\n                               type=\"number\"\n                               placeholder=\"Price you want your NFT to be sold\"\n                               value={price}\n                               onChange={e => setPrice(e.target.value)}\n                        />\n                        <MjolGreenBlueButton onClick={() => onClick(price)}>\n                            Sell\n                        </MjolGreenBlueButton>\n                        <MjolGreenBlueButton onClick={() => setVisible(false)}>\n                            Close popup\n                        </MjolGreenBlueButton>\n                    </div>\n                </div>\n            }\n        </div>\n    );\n};\n\nexport default InputPriceModal;","import React, {useState} from 'react';\nimport DarkBlueGradientButton from \"../../../../../ui/buttons/DarkBlueGradientButton\";\nimport InputPriceModal from \"../../../../../ui/modal/InputPriceModal\";\n\n\nconst SellNftContainer = ({onClick}) => {\n\n    const [visible, setVisible] = useState(false)\n\n    return (\n        <div>\n            <DarkBlueGradientButton title=\"Sell NFT\" onClick={() => setVisible(true)}/>\n            <InputPriceModal hidden={!visible} setVisible={setVisible} onClick={onClick}/>\n        </div>\n    );\n};\n\nexport default SellNftContainer;","import React from 'react';\nimport withPriceContainer from \"../withPriceContainer\";\nimport DarkBlueGradientButton from \"../../../../../ui/buttons/DarkBlueGradientButton\";\n\nconst UnlistNftContainer = (props) => {\n    return <DarkBlueGradientButton title=\"Unlist NFT\" {...props}/>;\n};\n\nexport default withPriceContainer(UnlistNftContainer);","import React from 'react';\n\nconst NotListedNftContainer = () => {\n    return (\n        <div className=\"text-center rounded-lg bg-gray-900 p-2 font-medium text-md md:text-lg text-blue-300\">\n            Nft not listed on market\n        </div>\n    );\n};\n\nexport default NotListedNftContainer;","import React from 'react';\nimport DarkBlueGradientButton from \"../../../../../ui/buttons/DarkBlueGradientButton\";\n\nconst ConnectWalletButton = ({onClick}) => {\n    return <DarkBlueGradientButton title=\"Connect to NEAR\" onClick={onClick}/>\n};\n\nexport default ConnectWalletButton","import React from 'react';\n\nconst NftContractNotSupported = () => {\n    return (\n        <div className=\"text-center rounded-2xl bg-gray-900 p-2 font-medium text-md md:text-lg text-blue-300\">\n            Nft contract not supported\n            <div className=\"text-xs text-blue-900\">\n                See here for more information about supported NFTs.\n            </div>\n        </div>\n    );\n};\n\nexport default NftContractNotSupported;","import React from 'react';\nimport {useAppDispatch} from \"../../../hooks/redux\";\nimport {ItemMarketStatus} from \"../../../state/transaction/state\";\nimport BuyNftContainer from \"../../../components/nft-item/preview/status/actions/buy/BuyNftContainer\";\nimport {useNftMarketStatus} from \"../../../hooks/useNftMarketStatus\";\nimport {buyNft, sellNft, unlistNft} from \"../../../state/transaction/nft/thunk\";\nimport SellNftContainer from \"../../../components/nft-item/preview/status/actions/sell/SellNftContainer\";\nimport UnlistNftContainer from \"../../../components/nft-item/preview/status/actions/unlist/UnlistNftContainer\";\nimport NotListedNftContainer\n    from \"../../../components/nft-item/preview/status/actions/not-listed/NotListedNftContainer\";\nimport {Nft} from \"../../../business-logic/models/nft\";\nimport {signIn} from \"../../../business-logic/near2/near/setup/near\";\nimport ConnectWalletButton\n    from \"../../../components/nft-item/preview/status/actions/connect-wallet/ConnectWalletButton\";\nimport NftContractNotSupported\n    from \"../../../components/nft-item/preview/status/actions/not-supported/NftContractNotSupported\";\n\ninterface PropTypes {\n    accountId: string,\n    nft: Nft\n}\n\nconst NftStatusHoc: React.FC<PropTypes> = ({accountId, nft}) => {\n\n    if (!accountId) {\n        return <ConnectWalletButton onClick={signIn}/>\n    }\n\n    const status = useNftMarketStatus(accountId, nft)\n    const dispatch = useAppDispatch()\n\n    const buy = () => {\n        dispatch(buyNft(nft.contractId, nft.tokenId, nft.price || ''))\n    }\n\n    const sell = (price: string) => {\n        dispatch(sellNft(nft.contractId, nft.tokenId, price))\n    }\n\n    const unlist = () => {\n        dispatch(unlistNft(nft.contractId, nft.tokenId))\n    }\n\n    switch (status) {\n        case ItemMarketStatus.CAN_BUY:\n            return <BuyNftContainer price={nft.price} onClick={buy}/>\n        case ItemMarketStatus.CAN_SELL:\n            return <SellNftContainer onClick={sell}/>\n        case ItemMarketStatus.LISTED:\n            return <UnlistNftContainer price={nft.price} onClick={unlist}/>\n        case ItemMarketStatus.FREE:\n            return <NotListedNftContainer/>\n        case ItemMarketStatus.NOT_SUPPORTED:\n            return <NftContractNotSupported/>\n\n    }\n};\n\nexport default NftStatusHoc;","import {ItemMarketStatus} from \"../state/transaction/state\";\nimport {Nft} from \"../business-logic/models/nft\";\n\nexport const useNftMarketStatus = (accountId: string, nft: Nft): ItemMarketStatus => {\n\n    const isListed = nft.price !== null\n\n    return (accountId === nft.ownerId) ?\n        isListed\n            ? ItemMarketStatus.LISTED\n            : ItemMarketStatus.CAN_SELL\n        : isListed\n            ? ItemMarketStatus.CAN_BUY\n            : ItemMarketStatus.FREE\n}","import React, {useEffect, useState} from 'react';\nimport PreviewNftPage from \"../../../components/pages/preview/nft/PreviewNftPage\";\nimport {useAppDispatch, useAppSelector} from \"../../../hooks/redux\";\nimport {fetchNft} from \"../../../state/preview/nft/thunk\";\nimport withAccountId from \"../../withAccountId\";\nimport RoundLoader from \"../../../components/ui/loaders/RoundLoader\";\nimport NotFoundPage from \"../../../components/pages/not-found/NotFoundPage\";\nimport {previewNftSlice} from \"../../../state/preview/nft/slice\";\nimport {useParams} from \"react-router\";\nimport NftStatusHoc from \"./NftStatusHoc\";\nimport useDelayUnmount from \"../../../hooks/useDelayUnmount\";\n\ninterface PropTypes {\n    accountId: string\n}\n\ntype ParamTypes = {\n    contractId: string,\n    tokenId: string\n}\n\nconst PreviewNftPageHoc: React.FC<PropTypes> = ({accountId}) => {\n    const {contractId, tokenId} = useParams<ParamTypes>()\n\n    if (!contractId || !tokenId) {\n        return <NotFoundPage/>\n    }\n\n    const {nft, fetching, payouts} = useAppSelector(state => state.preview.nft)\n    const dispatch = useAppDispatch()\n\n    useEffect((): any => {\n        dispatch(fetchNft(contractId, tokenId))\n        return () => dispatch(previewNftSlice.actions.reset())\n    }, [accountId])\n\n    if (fetching) {\n        return <RoundLoader/>\n    }\n\n    if (!nft) {\n        return <NotFoundPage/>\n    }\n\n    return (\n        <PreviewNftPage nft={nft}\n                        payouts={payouts}\n                        statusElement={\n                            <NftStatusHoc nft={nft}\n                                          accountId={accountId}\n                            />\n                        }\n        />)\n};\n\nexport default withAccountId(PreviewNftPageHoc);\n","import {AppDispatch} from \"../../store\";\nimport {previewNftSlice} from \"./slice\";\nimport {getNftPayouts, getNFTsByContractAndTokenId} from \"../../../business-logic/near2/near/api/nfts/get-nfts\";\n\nexport const fetchNft = (contractId: string, tokenId: string) =>\n    async (dispatch: AppDispatch) => {\n\n        dispatch(previewNftSlice.actions.toggleFetching(true))\n\n        Promise.all([\n                getNFTsByContractAndTokenId(contractId, tokenId)\n                    .then(nft => dispatch(previewNftSlice.actions.success(nft)))\n                    .catch(() => dispatch(previewNftSlice.actions.failure()))\n                    .finally(() => dispatch(previewNftSlice.actions.toggleFetching(false))),\n\n                getNftPayouts(contractId, tokenId)\n                    .then(p => dispatch(previewNftSlice.actions.setPayouts(p)))\n            ]\n        ).then()\n        // ).finally(() => dispatch(previewNftSlice.actions.toggleFetching(false)))\n    }","import React, {useEffect} from 'react';\nimport {Navigate} from 'react-router-dom'\n\nconst Logout = ({logout}) => {\n\n    useEffect(() => {\n        logout()\n        window.location.reload()\n    })\n\n    return <Navigate to=\"/\"/>\n};\n\nexport default Logout;","import React from 'react';\nimport {FaSearch} from 'react-icons/fa'\n\nconst SearchInput = ({placeholder, isTyping, onCancel, onSearch}) => {\n    return (\n        <div className=\"flex text-xs xs:text-md\">\n            <input className=\"rounded-l-3xl w-full sm:w-88\n                              focus:outline-0 outline-none py-2 px-5 ring-1 ring-inset ring-blue-100\"\n                   placeholder={placeholder}\n                   type=\"search\"\n            />\n            <div className=\"rounded-r-3xl px-5 bg-gradient-to-b from-blue-400 to-blue-900 grid place-items-center cursor-pointer\">\n                <FaSearch color=\"white\"/>\n            </div>\n        </div>\n    );\n};\n\nexport default SearchInput;","import React from 'react';\nimport BlueShadowContainer from \"../../../ui/shadow/BlueShadowContainer\";\nimport DarkBlueTitle from \"../../../ui/text/DarkBlueTitle\";\nimport SearchInput from \"../../../filters/search/SearchInput\";\nimport ToggleFilter from \"../../../filters/toggle/ToggleFilter\";\n\nconst NftFilters = () => {\n    return (\n        <BlueShadowContainer>\n            <div className=\"pb-10 px-4 space-y-8\">\n                <DarkBlueTitle title=\"Explore NFTs\"/>\n                <div className=\"flex justify-center\">\n                    <SearchInput placeholder=\"Search by NFT name\"/>\n                </div>\n            </div>\n        </BlueShadowContainer>\n    );\n};\n\nexport default NftFilters;","import React from 'react';\nimport NftFilters from \"./NftFilters\";\nimport NftsGrid from \"../../../nft-collection/NftsGrid\";\n\nconst ExploreNftPage = ({nfts, fetching}) => {\n    return (\n        <div className=\"space-y-6\">\n            <NftFilters/>\n            <NftsGrid nfts={nfts} fetching={fetching}/>\n        </div>\n    );\n};\n\nexport default ExploreNftPage;","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport {Nft} from \"../../../business-logic/models/nft\";\n\nexport interface ExploreNftsState {\n    nfts: Array<Nft>,\n    fetching: boolean,\n}\n\nconst initialState: ExploreNftsState = {\n    nfts: [],\n    fetching: true\n}\n\nexport const exploreNftsSlice = createSlice({\n    name: \"explore-nfts\",\n    initialState,\n    reducers: {\n        addNft: (state, action: PayloadAction<Nft>) => {\n            state.nfts.push(action.payload)\n        },\n        toggleFetching: (state, action: PayloadAction<boolean>) => {\n            state.fetching = action.payload\n        },\n        reset: () => initialState\n    }\n})\n\nexport const exploreNftsReducer = exploreNftsSlice.reducer;","import React, {useEffect} from 'react';\nimport ExploreNftsPage from \"../../../components/pages/explore/nft/ExploreNftPage\";\nimport {useAppDispatch, useAppSelector} from \"../../../hooks/redux\";\n\nimport {exploreNftsSlice} from \"../../../state/explore/nfts/slice\";\nimport {fetchMarketNfts} from \"../../../state/explore/nfts/thunk\";\n\nconst ExploreNftsPageHoc = () => {\n\n    const {nfts, fetching} = useAppSelector(state => state.explore.nfts)\n    const dispatch = useAppDispatch()\n\n    useEffect(() => {\n        dispatch(fetchMarketNfts())\n        return () => dispatch(exploreNftsSlice.actions.reset())\n    }, [])\n\n    return <ExploreNftsPage nfts={nfts} fetching={fetching}/>\n};\n\nexport default ExploreNftsPageHoc;","import {AppDispatch} from \"../../store\";\nimport {exploreNftsSlice} from \"./slice\";\nimport {getMarketNfts} from \"../../../business-logic/near2/near/api/market/get-nfts-market\";\n\nexport const fetchMarketNfts = (from: number, limit: number) =>\n    async (dispatch: AppDispatch) => {\n        dispatch(exploreNftsSlice.actions.toggleFetching(true))\n        getMarketNfts(from, limit)\n            .then(promises => {\n                    promises.forEach(promise =>\n                        promise.then(nft => dispatch(exploreNftsSlice.actions.addNft(nft)))\n                    )\n                    dispatch(exploreNftsSlice.actions.toggleFetching(false))\n                }\n            )\n    }","import React from 'react';\nimport {Route, Routes} from \"react-router\";\nimport LandingPage from \"../components/pages/landing/LandingPage\";\nimport NotFoundPage from \"../components/pages/not-found/NotFoundPage\";\nimport CreateCollectionPage from \"../components/pages/create/collection/CreateCollectionPage\";\nimport CreateNftPage from \"../components/pages/create/nft/CreateNftPage\";\nimport ExploreCollectionsPage from \"../components/pages/explore/collection/ExploreCollectionsPage\";\nimport ProfilePageHoc from \"../hoc/profile/ProfilePageHoc\";\nimport PreviewNftHoc from \"../hoc/preview/nft/PreviewNftPageHoc\";\nimport Logout from \"../hoc/auth/Logout\";\nimport ExploreNftsPageHoc from \"../hoc/explore/nft/ExploreNftsPageHoc\";\nimport {signOut} from \"../business-logic/near2/near/setup/near\";\n\n\nconst AppRouter = () => {\n    return (\n        <Routes>\n            <Route path=\"/\" exact element={<LandingPage/>} key=\"1\"/>\n            <Route path=\"/logout\" exact element={<Logout logout={signOut}/>}/>\n            <Route path=\"/nfts\" exact element={<ExploreNftsPageHoc/>} key=\"2\"/>\n            <Route path=\"/nft/:contractId/:tokenId\" exact element={<PreviewNftHoc/>} key=\"30\"/>\n            <Route path=\"/collections\" element={<ExploreCollectionsPage/>} key=\"3\"/>\n            <Route path=\"/create-nft\" element={<CreateNftPage/>} key=\"4\"/>\n            <Route path=\"/create-collection\" element={<CreateCollectionPage/>} key=\"5\"/>\n            <Route path=\"/profile/nfts\" element={<ProfilePageHoc/>} key=\"6\"/>\n            {/*<Route path=\"/profile-collection\" element={<ProfileNftCollectionsPage/>} key=\"11\"/>*/}\n            <Route path=\"*\" element={<NotFoundPage/>} key=\"12\"/>\n        </Routes>\n    );\n};\n\nexport default AppRouter;\n\n\n\n","import {Popover} from \"@headlessui/react\";\nimport {MenuIcon, XIcon} from \"@heroicons/react/outline\";\nimport React from \"react\";\nimport classNames from \"../../../utils/css-utils\";\nimport {ChevronDownIcon} from \"@heroicons/react/solid\";\n\nexport const CloseMenuButton = () => {\n    return (\n        <Popover.Button\n            className=\"bg-white rounded-md p-2 inline-flex nfts-center justify-center text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500\">\n            <span className=\"sr-only\">Close menu</span>\n            <XIcon className=\"h-6 w-6\" aria-hidden=\"true\"/>\n        </Popover.Button>\n    );\n};\n\nexport const DropDownButton = ({isOpen, tabName}) => {\n    return (\n        <Popover.Button\n            className={classNames(\n                isOpen ? 'text-gray-900' : 'text-cyan-700',\n                'group bg-light_white rounded-md inline-flex items-center ' +\n                'text-lg font-extrabold hover:text-gray-900 focus:outline-none ' +\n                'focus:bg-light_white'\n            )}\n        >\n            {tabName}\n            <ChevronDownIcon\n                className={classNames(\n                    isOpen ? 'text-gray-900' : 'text-cyan-700',\n                    'ml-2 h-5 w-5 group-hover:text-gray-900'\n                )}\n                aria-hidden=\"true\"\n            />\n        </Popover.Button>\n    );\n};\n\nexport const MenuButton = () => {\n    return (\n        <Popover.Button\n            className=\"bg-white rounded-md p-2 inline-flex nfts-center justify-center text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500\">\n            <span className=\"sr-only\">Open menu</span>\n            <MenuIcon className=\"h-6 w-6\" aria-hidden=\"true\"/>\n        </Popover.Button>\n    );\n};\n","import {Popover, Transition} from \"@headlessui/react\";\nimport {DropDownButton} from \"../../../ui/navbar/buttons\";\nimport React, {Fragment} from \"react\";\nimport classNames from \"../../../../utils/css-utils\";\nimport {Link} from \"react-router-dom\";\n\nexport const TabsDropDownMenu = ({name, tabs, isProfile}) => {\n    return (\n        <Popover className=\"relative\">\n            {({isOpen}) => (\n                <div key={name}>\n                    <DropDownButton isOpen={isOpen} tabName={name}/>\n                    <Transition\n                        as={Fragment}\n                        enter=\"transition ease-out duration-200\"\n                        enterFrom=\"opacity-0 translate-y-1\"\n                        enterTo=\"opacity-100 translate-y-0\"\n                        leave=\"transition ease-in duration-150\"\n                        leaveFrom=\"opacity-100 translate-y-0\"\n                        leaveTo=\"opacity-0 translate-y-1\"\n                    >\n                        <Popover.Panel\n                            className={classNames(\n                                isProfile ? '-ml-20' : '-ml-4',\n                                \"absolute z-10 -ml-4 mt-3 transform px-2\"\n                            )}>\n                            <div className=\"rounded-lg shadow-lg ring-1 ring-black ring-opacity-5 overflow-hidden\">\n                                <div className=\"relative grid gap-6 bg-white px-5 py-6 sm:gap-8 sm:p-8\">\n                                    {tabs.map(({path, name}) => (\n                                        <Link key={name} to={path}>\n                                            <div\n                                                className=\"cursor-pointer -m-3 p-3 flex items-start rounded-lg hover:bg-gray-100\"\n                                            >\n                                                <p className=\"text-medium font-medium text-gray-900\">{name}</p>\n                                            </div>\n                                        </Link>\n                                    ))}\n                                </div>\n                            </div>\n                        </Popover.Panel>\n                    </Transition>\n                </div>\n            )}\n        </Popover>\n    )\n}","export default __webpack_public_path__ + \"static/media/hammer.743d332f.png\";","export default __webpack_public_path__ + \"static/media/label6.5b6747ff.png\";","import React, {Fragment} from 'react'\nimport {Popover, Transition} from '@headlessui/react'\nimport classNames from \"../../../utils/css-utils\";\nimport {CloseMenuButton, MenuButton} from \"../../ui/navbar/buttons\";\nimport {Link} from \"react-router-dom\";\nimport {TabsDropDownMenu} from \"./menu/TabDropDownMenu\";\nimport imgLogo from \"../../../resources/hammer.png\"\nimport imgLabel from \"../../../resources/label6.png\"\nimport {signIn, wallet} from \"../../../business-logic/near2/near/setup/near\";\n\n\nfunction SmallNavBar({tabs}) {\n    return (\n        <div className=\"grid grid-cols-2 gap-y-4 gap-x-8\">\n            {tabs.map(({path, name}) => (\n                <>\n                    {name === \"Launchpad\" || name === \"Docs\" ? (\n                        <div\n                            className=\"cursor-not-allowed text-base font-medium text-gray-900 hover:text-gray-500\">\n                            {name}\n                        </div>\n                    ) : (\n                        <Link to={path} key={name}>\n                            <div\n                                className=\"cursor-pointer text-base font-medium text-gray-900 hover:text-gray-500\">\n                                {name}\n                            </div>\n                        </Link>\n                    )}\n                </>\n            ))}\n        </div>\n    )\n}\n\nexport default function Navbar({tabs}) {\n    const exploreTabs = tabs.explore\n    const createTabs = tabs.create\n    const profileTabs = tabs.profile\n    const singleTabs = tabs.single\n\n    return (\n        <Popover className=\"bg-white\">\n            <div className=\"max-w-7xl mx-auto px-4 sm:px-6\">\n                <div\n                    className=\"flex justify-between items-center py-6 md:justify-start md:space-x-10\">\n                    <div className=\"flex justify-start lg:w-0 lg:flex-1\">\n                        <Link to=\"/\">\n                            <img\n                                className=\"inline-block h-8 w-auto sm:h-10\"\n                                src={imgLogo}\n                                alt=\"\"\n                            />\n                            <img\n                                className=\"inline-block h-8 w-auto sm:h-10\"\n                                src={imgLabel}\n                                alt=\"\"\n                            />\n                        </Link>\n                    </div>\n                    <div className=\"-mr-2 -my-2 md:hidden\">\n                        <MenuButton/>\n                    </div>\n                    <Popover.Group as=\"nav\" className=\"hidden md:flex space-x-10\">\n                        <TabsDropDownMenu key=\"Explore\" name=\"Explore\" tabs={exploreTabs} isProfile={false}/>\n                        <TabsDropDownMenu key=\"Create\" name=\"Create\" tabs={createTabs} isProfile={false}/>\n                        {singleTabs.map(({name, path}) => (\n                            <div\n                                className={classNames(\n                                    name === \"Launchpad\" || name === \"Docs\" ? 'cursor-not-allowed' : 'cursor-pointer',\n                                    \"text-lg font-extrabold text-cyan-700 hover:text-gray-900\"\n                                )}>\n                                {name}\n                            </div>\n                        ))}\n                    </Popover.Group>\n                    {wallet.isSignedIn() ? (\n                        <div className=\"hidden md:flex items-center justify-end md:flex-1 lg:w-0\">\n                            <TabsDropDownMenu name=\"Profile\" tabs={profileTabs} isProfile={true}/>\n                        </div>\n                    ) : (\n                        <div className=\"hidden md:flex items-center justify-end md:flex-1 lg:w-0\">\n                            <Link to=\"/\"\n                                  onClick={signIn}\n                                  className=\"inline-flex justify-center py-1.5 px-4 font-bold text-lg font-large rounded-md text-white bg-gradient-to-br from-mjol-blue-base to-green-200 hover:from-green-200 hover:to-mjol-blue-base\"\n                            >\n                                Sign in\n                            </Link>\n                        </div>\n                    )}\n                </div>\n            </div>\n\n            <Transition\n                as={Fragment}\n                enter=\"duration-200 ease-out\"\n                enterFrom=\"opacity-0 scale-95\"\n                enterTo=\"opacity-100 scale-100\"\n                leave=\"duration-100 ease-in\"\n                leaveFrom=\"opacity-100 scale-100\"\n                leaveTo=\"opacity-0 scale-95\"\n            >\n                <Popover.Panel focus\n                               className=\"absolute top-0 inset-x-0 p-2 transition transform origin-top-right md:hidden\">\n                    <div\n                        className=\"rounded-lg shadow-lg ring-1 ring-black ring-opacity-5 bg-white divide-y-2 divide-gray-50\">\n                        <div className=\"pt-5 pb-6 px-5\">\n                            <div className=\"flex items-center justify-between\">\n                                <div>\n                                    <Link to=\"/\">\n                                        <img\n                                            className=\"h-8 w-auto\"\n                                            src={imgLogo}\n                                            alt=\"logo\"/>\n                                    </Link>\n                                </div>\n                                <div className=\"-mr-2\">\n                                    <CloseMenuButton/>\n                                </div>\n                            </div>\n                        </div>\n                        <div key=\"Explore\" className=\"py-6 px-5 space-y-6\">\n                            <div className=\"text-cyan-700\">Explore:</div>\n                            <SmallNavBar tabs={exploreTabs}/>\n                        </div>\n                        <div key=\"Create\" className=\"py-6 px-5 space-y-6\">\n                            <div className=\"text-cyan-700\">Create:</div>\n                            <SmallNavBar tabs={createTabs}/>\n                        </div>\n                        <div className=\"py-6 px-5 space-y-6\">\n                            <SmallNavBar tabs={singleTabs}/>\n                            {wallet.isSignedIn() ? (\n                                <>\n                                    <div className=\"grid grid-cols-2 gap-y-4 gap-x-8\">\n                                        {profileTabs.filter(item => item.name !== 'Sign out').map(({name, path}) => (\n                                            <Link to={path} key={name}>\n                                                <div\n                                                    className=\"cursor-pointer text-base font-medium text-gray-900 hover:text-gray-500\"\n                                                >\n                                                    {name}\n                                                </div>\n                                            </Link>\n                                        ))}\n                                        <Link to=\"/signOut\"\n                                              className=\"cursor-pointer col-span-2 text-center font-medium text-gray-500 hover:text-gray-700\"\n                                        >\n                                            Log out\n                                        </Link>\n                                    </div>\n                                </>\n                            ) : (\n                                <div>\n                                    <Link to=\"/\"\n                                          onClick={signIn}\n                                          className=\"cursor-pointer w-full py-2 flex items-center justify-center font-bold text-lg font-large rounded-md text-white bg-gradient-to-br from-mjol-blue-base to-green-200 hover:from-green-200 hover:to-mjol-blue-base\"\n                                    >\n                                        Sign in\n                                    </Link>\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                </Popover.Panel>\n            </Transition>\n        </Popover>\n    )\n}","import Navbar from \"./Navbar\";\n\nimport React from 'react';\nimport {useAppSelector} from \"../../../hooks/redux\";\n\nconst NavbarContainer = () => {\n    const tabs = useAppSelector(state => state.navbar.tabs)\n\n    return <Navbar tabs={tabs}/>;\n};\n\nexport default NavbarContainer;","import React from 'react'\nimport AppRouter from \"./AppRouter\";\nimport NavbarContainer from \"../components/pages/navbar/NavbarContainer\";\n\nexport default function App() {\n    return (\n        <div>\n            <NavbarContainer/>\n            <AppRouter/>\n            {/*<FooterPage/>*/}\n        </div>\n    )\n}","import {combineReducers} from \"redux\";\nimport {previewNftReducer} from \"./nft/slice\";\n\nexport const previewReducer = combineReducers({\n    nft: previewNftReducer\n})","import {createSlice} from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    tabs: {\n        explore: [\n            {name: 'NFTs', path: '/nfts'},\n            {name: 'Collections', path: '/collections'},\n        ],\n        create: [\n            {name: 'NFT', path: '/create-nft'},\n            {name: 'Collection', path: '/create-collection'}\n        ],\n        profile: [\n            {name: 'My NFTs', path: '/profile/nfts'},\n            {name: 'My Collections', path: '/profile/collections'},\n            {name: 'Sign out', path: '/logout'}\n        ],\n        single: [\n            {name: 'Launchpad', path: '/launchpad'},\n            {name: 'Docs', path: '/docs'}\n        ]\n    }\n}\n\nexport const navbarSlice = createSlice({\n    name: \"navbar\",\n    initialState,\n    reducers: {}\n})\n\nexport const navbarReducer = navbarSlice.reducer","import {combineReducers} from \"redux\";\nimport {exploreNftsReducer} from \"./nfts/slice\";\n\nexport const exploreReducer = combineReducers({\n    nfts: exploreNftsReducer\n})","import {configureStore} from \"@reduxjs/toolkit\";\nimport {combineReducers} from \"redux\";\nimport {profileReducer} from \"./profile/slice\";\nimport {previewReducer} from \"./preview/reducer\";\nimport {navbarReducer} from \"./navbar/slice\";\nimport {exploreReducer} from \"./explore/reducer\";\n\n\nexport const rootReducer = combineReducers({\n    navbar: navbarReducer,\n    profile: profileReducer,\n    preview: previewReducer,\n    explore: exploreReducer\n})\n\nexport const setupStore = () => {\n    return configureStore({\n        reducer: rootReducer\n    })\n}\n\nexport type RootState = ReturnType<typeof rootReducer>\nexport type AppStore = ReturnType<typeof setupStore>\nexport type AppDispatch = AppStore['dispatch']","import './index.css';\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport App from \"./launch/App\";\nimport {setupStore} from \"./state/store\";\n\nconst store = setupStore()\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n)"],"sourceRoot":""}