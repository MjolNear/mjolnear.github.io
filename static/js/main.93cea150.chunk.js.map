{"version":3,"sources":["business-logic/near2/near/enviroment/network.ts","components/pages/landing/GreetingText.jsx","components/pages/landing/LandingPage.jsx","components/pages/not-found/NotFoundPage.jsx","components/pages/create/collection/CreateCollectionPage.jsx","business-logic/near2/near/constants.ts","business-logic/near2/near/enviroment/config.ts","business-logic/near2/near/setup/near.ts","components/pages/create/nft/upload/lines/SingleCharLine.jsx","components/pages/create/nft/upload/lines/SingleNumberLine.jsx","components/pages/create/nft/upload/containers/SingleLineContainer.jsx","components/pages/create/nft/upload/containers/MultiLineContainer.jsx","components/pages/create/nft/upload/containers/OptionInputContainer.jsx","components/pages/create/nft/upload/lines/PropertyInput.jsx","components/pages/create/nft/upload/UploadFileInput.jsx","business-logic/ipfs/upload.ts","components/ui/text/DarkBlueTitle.jsx","state/profile/slice.ts","components/ui/loaders/RoundLoader.jsx","components/ui/shadow/BlueShadowContainer.jsx","components/pages/create/nft/CreateNftPage.jsx","business-logic/near/contract-nft.js","components/pages/explore/collection/ExploreCollectionsPage.jsx","hooks/redux.ts","hoc/withAccountId.jsx","hoc/profile/ProfileHistoryFetch.jsx","business-logic/near/get-utils.js","business-logic/models/nft.ts","business-logic/near/nft-converter.js","business-logic/near/get-nfts-market.js","business-logic/near/get-nfts.js","state/profile/thunk.ts","components/ui/loaders/SmallNftLoader.jsx","components/nft-collection/NftCollectionContainer.jsx","components/nft-item/details/image/NftImage.jsx","components/nft-item/NftBoxContainer.jsx","components/ui/icons/near/NearSVG.jsx","components/nft-item/details/price/SmallNftPrice.jsx","components/nft-item/details/minted/NftMintedLink.jsx","components/nft-item/details/title/NftTitle.jsx","components/nft-item/details/collection/NftCollection.jsx","components/nft-item/details/verified/NftVerifiedStatus.jsx","components/nft-item/NftItem.jsx","components/nft-collection/NftsGrid.jsx","hoc/profile/ProfileNftsFetch.jsx","utils/css-utils.js","components/ui/text/DarkBlueMjolText.jsx","components/ui/buttons/MjolBlueGradientButton.jsx","components/pages/profile/navbar/ProfileNavigationBar.jsx","components/pages/profile/ProfilePage.jsx","hoc/profile/ProfilePageHoc.jsx","components/nft-item/preview/image/PreviewNftImage.jsx","components/ui/icons/ShareIcon.jsx","components/nft-item/preview/details/CollectionLink.jsx","components/ui/borders/Hr.jsx","components/ui/buttons/DropDownMjolBlueButton.jsx","components/nft-item/preview/details/NftPreviewTitle.jsx","state/transaction/state.ts","components/nft-item/preview/attributes/PreviewAttribute.jsx","utils/string.js","components/nft-item/preview/attributes/PreviewAttributes.jsx","components/ui/icons/IconText.jsx","components/nft-item/preview/details/NftPreviewInfo.jsx","components/pages/preview/nft/PreviewNftPage.jsx","state/preview/nft/slice.ts","components/nft-item/details/price/PreviewNftPrice.jsx","components/nft-item/preview/status/actions/withPriceContainer.jsx","components/ui/buttons/DarkBlueGradientButton.jsx","components/nft-item/preview/status/actions/BuyNftContainer.jsx","state/transaction/nft/slice.ts","business-logic/near2/near/api/market/transaction.js","state/transaction/nft/thunk.ts","components/ui/buttons/MjolGreenBlueButton.jsx","components/ui/modal/InputPriceModal.jsx","components/nft-item/preview/status/actions/SellNftContainer.jsx","components/nft-item/preview/status/actions/UnlistNftContainer.jsx","components/nft-item/preview/status/NotListedNftContainer.jsx","hoc/preview/nft/NftStatusHoc.tsx","hooks/useNftMarketStatus.ts","hoc/preview/nft/PreviewNftPageHoc.tsx","state/preview/nft/thunk.ts","hoc/auth/Logout.jsx","components/filters/search/SearchInput.jsx","components/pages/explore/nft/NftFilters.jsx","components/pages/explore/nft/ExploreNftPage.jsx","state/explore/nfts/slice.ts","hoc/explore/nft/ExploreNftsPageHoc.jsx","state/explore/nfts/thunk.ts","launch/AppRouter.jsx","components/ui/navbar/buttons.js","components/pages/navbar/menu/TabDropDownMenu.jsx","resources/hammer.png","resources/label6.png","components/pages/navbar/Navbar.js","components/pages/navbar/NavbarContainer.js","launch/App.tsx","state/preview/reducer.ts","state/navbar/slice.ts","state/explore/reducer.ts","state/store.ts","index.tsx"],"names":["NetworkEnv","GreetingText","className","LandingPage","NotFoundPage","src","alt","CreateCollectionPage","GAS","SM_DEPOSIT","utils","format","parseNearAmount","CONTRACT_NAME","config","env","PRODUCTION","MAINNET","networkId","nodeUrl","contractName","walletUrl","helperUrl","explorerUrl","DEVELOPMENT","TESTNET","BETANET","LOCAL","keyPath","process","HOME","TEST","CI","masterAccount","CI_BETANET","Error","getConfig","near","Near","keyStore","keyStores","BrowserLocalStorageKeyStore","wallet","WalletConnection","contract","Contract","account","viewMethods","changeMethods","getAccountId","signIn","requestSignIn","then","catch","signOut","SingleCharLine","props","type","name","id","placeholder","text","minLength","maxLength","onChange","e","setState","target","value","SingleNumberLine","min","max","SingleLineContainer","required","MultiLineContainer","rows","defaultValue","OptionInputContainer","setCurCollection","myCollections","map","PropertyInput","UploadFileInput","state","stroke","fill","viewBox","d","strokeWidth","strokeLinecap","strokeLinejoin","htmlFor","accept","files","width","URL","createObjectURL","onClick","xmlns","description","image","traits","a","client","NFTStorage","token","store","makeNftLink","nftIpfsLink","startsWith","slice","PROFILE_TAB","DarkBlueTitle","title","RoundLoader","loop","animationData","lottieJson","play","style","height","BlueShadowContainer","children","LineAlert","role","CreateNftPage","concat","useState","curCollection","setTitle","setDescription","royalty","setRoyalty","file","setFile","isLoading","setIsLoading","alertText","setAlertText","propertiesNum","setPropertiesNum","fetchProperties","setFetchProperties","onSubmit","preventDefault","isSignedIn","length","storeNFT","res","console","log","ipfsMedia","data","href","ipfsRef","url","token_metadata","media","reference","copies","payout","toString","token_id","Date","getTime","token_owner_id","functionCall","mintToCommonCollection","tmpNum","pop","ind","ExploreCollectionsPage","useAppDispatch","useDispatch","useAppSelector","useSelector","withAccountId","Component","accountId","initialState","tabs","ALL_NFTS","LISTED_NFTS","HISTORY","activeTab","fetching","success","undefined","nfts","history","profileSlice","createSlice","reducers","changeTab","action","payload","addNft","push","startFetching","failure","resetNfts","profileReducer","reducer","ProfileHistoryFetch","useEffect","nearApi","require","NftAPI","fetch","timeout","response","ok","error","statusText","status","json","endsWith","provider","providers","JsonRpcProvider","Account","network","getNetwork","accountURL","getJsonByURL","NftCollection","collection","this","MintSite","nftLink","NFT","contractId","tokenId","ownerId","mediaURL","referenceURL","mintSite","price","isIPFS","getRealUrl","urlHash","storageLink","cid","getNftMintedSiteInfo","nft","holder","split","metadata","convertStandardNFT","listedNftKeys","mediaUrl","media_hash","owner_id","reference_hash","getMintbaseNFT","viewFunction","jsonNFT","getConvertedNFT","formatPrice","x","toLocaleString","useGrouping","formatNearAmount","getNftPriceByTokenUID","nft_uid","get_nft_price","getNftPricesByUser","get_user_nfts","vec","pairIdAndPrice","getMarketNftsPrices","from","limit","get_nfts","getMarketNfts","buildAccountInfo","marketNfts","resNFTs","marketNft","nft_contract_id","nftPromise","getNFTsByContractAndAccount","allNfts","curNfts","account_id","from_index","getNFTsByContractAndTokenId","getNftPayouts","balance","max_len_payout","payouts","royalties","highestPayout","payoutKey","payoutVal","parseInt","addExtraContracts","curContracts","includes","getNfts","buildContractInfo","nftContracts","nftInfoPromise","SmallNftLoader","speed","foregroundColor","backgroundColor","y","rx","ry","NftCollectionContainer","NftImage","path","NftBoxContainer","NearSVG","clipPath","SmallNftPrice","isListed","place","delayShow","NftMintedLink","mintedName","mintedLink","NftTitle","collectionName","collectionLink","to","NftVerifiedStatus","isVerified","color","NftItem","previewLink","collectionLogoLink","NftsGrid","loaders","Array","i","idx","getKey","ProfileNftsFetch","profile","dispatch","actions","fetchMyNfts","filter","classNames","classes","Boolean","join","DarkBlueMjolText","MjolBlueGradientButton","isActive","ProfileNavigationBar","onTabChange","navbar","item","ProfilePage","render","tab","PreviewNftImage","link","ShareIcon","cx","cy","r","x1","y1","x2","y2","CollectionLink","Hr","DropDownMjolBlueButton","buttonContent","initialVisible","visible","setVisible","ItemMarketStatus","NftPreviewTitle","PreviewAttribute","shrinkValue","string","chunkSize","sizeToSplit","shortenString","navigator","clipboard","writeText","PreviewAttributes","attributes","attribute","IconText","icon","NftPreviewInfo","statusElement","ownerAttributes","element","PreviewNftPage","previewNftSlice","fetchPayouts","Object","entries","kv","reset","previewNftReducer","PreviewNftPrice","withPriceContainer","DarkBlueGradientButton","pending","marketNftTransactionSlice","commit","giveApprove","nearAmount","msg","JSON","stringify","buyNftWithPayouts","buy_with_payouts","unlistNFT","remove_from_market","MjolGreenBlueButton","InputPriceModal","hidden","setPrice","SellNftContainer","NotListedNftContainer","NftStatusHoc","LISTED","CAN_SELL","CAN_BUY","FREE","useNftMarketStatus","sellNft","useParams","preview","fetchNft","Logout","logout","SearchInput","isTyping","onCancel","onSearch","NftFilters","ExploreNftPage","exploreNftsSlice","exploreNftsReducer","ExploreNftsPageHoc","explore","finally","AppRouter","exact","ProfilePageHoc","CloseMenuButton","Button","DropDownButton","isOpen","tabName","MenuButton","TabsDropDownMenu","isProfile","as","Fragment","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Panel","SmallNavBar","Navbar","exploreTabs","createTabs","create","profileTabs","singleTabs","single","imgLogo","imgLabel","Group","focus","NavbarContainer","App","previewReducer","combineReducers","navbarReducer","exploreReducer","rootReducer","configureStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.93cea150.chunk.js","sourcesContent":["export enum NetworkEnv {\n    MAINNET = \"mainnet\",\n    TESTNET = \"testnet\",\n    DEVELOPMENT = \"development\",\n    BETANET = \"betanet\",\n    PRODUCTION = \"production\",\n    LOCAL = \"local\",\n    TEST = \"test\",\n    CI = \"ci\",\n    CI_BETANET = \"ci-betanet\"\n}","import React from 'react';\n\nconst GreetingText = () => {\n    return (\n        <div className=\"max-w-7xl mx-auto w-1/2 space-y-14 h-screen\">\n            <div\n                className=\"text-3xl text-left md:text-6xl font-extrabold text-transparent bg-clip-text bg-gradient-to-br from-mjol-blue-base to-green-200 flex-end\">\n                Welcome to MjolNear\n            </div>\n            <div className=\"text-sm md:text-lg font-mono\">\n                The first Open NFT marketplace on Near blockchain.\n            </div>\n        </div>\n    );\n};\n\nexport default GreetingText;","import React from 'react';\nimport GreetingText from \"./GreetingText\";\n\nconst LandingPage = () => {\n    return (\n        <div className=\"px-8 py-8\">\n            <GreetingText/>\n        </div>\n    )\n};\n\nexport default LandingPage;","import React from 'react';\n\nconst NotFoundPage = () => {\n    return (\n        <img className=\"max-w-3xl mx-auto\"\n             src=\"https://cdn.dribbble.com/users/745025/screenshots/6723888/gif_404.gif\"\n             alt=\"not found\"\n        />\n    );\n};\n\nexport default NotFoundPage;","import React from 'react';\n\nconst CreateCollectionPage = () => {\n    return (\n        <div>\n            Create collection\n        </div>\n    );\n};\n\nexport default CreateCollectionPage;","import {utils} from \"near-api-js\";\n\nexport const GAS = \"300000000000000\";\nexport const SM_DEPOSIT = utils.format.parseNearAmount('0.1');\nexport const YOCTO_NEAR = '1';\n","import {NetworkEnv} from \"./network\";\nimport {NearConfig} from \"near-api-js/lib/near\";\nconst CONTRACT_NAME = 'market.mjol.near';\n\nexport interface Config extends NearConfig {\n    contractName: string,\n    explorerUrl?: string,\n    keyPath?: string\n}\n\nexport const getConfig = (env: NetworkEnv): Config => {\n    switch (env) {\n        case NetworkEnv.PRODUCTION:\n        case NetworkEnv.MAINNET:\n            return {\n                networkId: 'mainnet',\n                nodeUrl: 'https://rpc.mainnet.near.org',\n                contractName: CONTRACT_NAME,\n                walletUrl: 'https://wallet.near.org',\n                helperUrl: 'https://helper.mainnet.near.org',\n                explorerUrl: 'https://explorer.mainnet.near.org',\n            };\n        case NetworkEnv.DEVELOPMENT:\n        case NetworkEnv.TESTNET:\n            return {\n                networkId: 'testnet',\n                nodeUrl: 'https://rpc.testnet.near.org',\n                contractName: CONTRACT_NAME,\n                walletUrl: 'https://wallet.testnet.near.org',\n                helperUrl: 'https://helper.testnet.near.org',\n                explorerUrl: 'https://explorer.testnet.near.org',\n            };\n        case NetworkEnv.BETANET:\n            return {\n                networkId: 'betanet',\n                nodeUrl: 'https://rpc.betanet.near.org',\n                contractName: CONTRACT_NAME,\n                walletUrl: 'https://wallet.betanet.near.org',\n                helperUrl: 'https://helper.betanet.near.org',\n                explorerUrl: 'https://explorer.betanet.near.org',\n            };\n        case NetworkEnv.LOCAL:\n            return {\n                networkId: 'local',\n                nodeUrl: 'http://localhost:3030',\n                keyPath: `${process.env.HOME}/.near/validator_key.json`,\n                walletUrl: 'http://localhost:4000/wallet',\n                contractName: CONTRACT_NAME,\n            };\n        case NetworkEnv.TEST:\n        case NetworkEnv.CI:\n            return {\n                networkId: 'shared-test',\n                nodeUrl: 'https://rpc.ci-testnet.near.org',\n                contractName: CONTRACT_NAME,\n                masterAccount: 'test.near',\n            };\n        case NetworkEnv.CI_BETANET:\n            return {\n                networkId: 'shared-test-staging',\n                nodeUrl: 'https://rpc.ci-betanet.near.org',\n                contractName: CONTRACT_NAME,\n                masterAccount: 'test.near',\n            };\n        default:\n            throw Error(`Unconfigured environment '${env}'. Can be configured in src/config.js.`)\n    }\n}\n\n// Why do we need that?\n// module.exports = getConfig;\n","import {Contract, keyStores, Near, WalletConnection} from \"near-api-js\";\nimport {getConfig} from \"../enviroment/config\";\nimport {NetworkEnv} from \"../enviroment/network\";\n\nexport const network = NetworkEnv.MAINNET\nexport const config = getConfig(network)\n\nconst near = new Near({\n    keyStore: new keyStores.BrowserLocalStorageKeyStore(),\n    ...config,\n})\n\nexport const wallet = new WalletConnection(near, config.contractName)\n\n// Initializing our setup APIs by setup name and configuration\nexport const contract = new Contract(wallet.account(), config.contractName, {\n    // View methods are read only. They don't modify the state, but usually return some value.\n    viewMethods: ['get_nfts', 'get_user_nfts', 'get_nft_price'],\n    // Change methods can modify the state. But you don't receive the returned value when called.\n    changeMethods: ['buy_with_payouts', 'remove_from_market'],\n})\n\nexport const getAccountId = () => {\n    return wallet.getAccountId()\n}\n\nexport const signIn = () => {\n    wallet.requestSignIn(config.contractName)\n        .then()\n        .catch()\n}\n\nexport const signOut = () => {\n    wallet.signOut()\n}","const SingleCharLine = (props) => {\n    return (\n        <input\n            type={props.type}\n            name={props.id}\n            id={props.id}\n            className=\"focus:border-cyan-500 flex-1 block w-full rounded-none rounded-md sm:text-sm border-gray-300\"\n            placeholder={props.text}\n            minLength={props.minLength}\n            maxLength={props.maxLength}\n            onChange={(e) => props.setState(e.target.value)}\n        />\n    );\n};\n\nexport default SingleCharLine;","import React from \"react\";\n\nconst SingleNumberLine = (props) => {\n    return (\n        <input\n            type={props.type}\n            name={props.id}\n            id={props.id}\n            className=\"peer focus:ring-indigo-500 focus:border-cyan-500 flex-1 block w-full rounded-none rounded-md sm:text-sm border-gray-300\"\n            placeholder={props.text}\n            min={props.min}\n            max={props.max}\n            onChange={(e) => props.setState(e.target.value)}\n        />\n    );\n};\n\nexport default SingleNumberLine;","import React from \"react\";\nimport SingleCharLine from \"../lines/SingleCharLine\";\nimport SingleNumberLine from \"../lines/SingleNumberLine\";\n\n\nconst SingleLineContainer = (props) => {\n    return (\n        <div className=\"grid grid-cols-3 gap-6\">\n            <div className=\"sm:col-span-2 col-span-3\">\n                <label\n                    className=\"block font-bold text-sm text-gray-700\">\n                    {props.name}{props.required ? <b className=\"text-sm font-large text-red-500\">*</b>:<></>}\n                </label>\n                <div className=\"mt-1 flex rounded-md shadow-sm\">\n                    {props.type === 'text' ? (\n                        <SingleCharLine name={props.name} text={props.text} type={props.type}\n                                        minLength={props.minLength} maxLength={props.maxLength} id={props.id}\n                                        setState={props.setState}\n                        />\n                    ) : (\n                        <SingleNumberLine name={props.name} text={props.text} type={props.type} min={props.min}\n                                          max={props.max} id={props.id} setState={props.setState}\n                        />\n                    )}\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default SingleLineContainer;","import React from \"react\";\n\nconst MultiLineContainer = (props) => {\n    return (\n        <div>\n            <label className=\"block text-sm font-bold text-gray-700\">\n                {props.name}\n            </label>\n            <div className=\"mt-1\">\n                      <textarea\n                          id={props.id}\n                          name={props.id}\n                          rows={props.rows}\n                          className=\"shadow-sm focus:ring-indigo-500 focus:border-cyan-500 mt-1 block w-full sm:text-sm border border-gray-300 rounded-md\"\n                          placeholder=\"Brief description for your NFT\"\n                          defaultValue={''}\n                          maxLength={props.maxLength}\n                          onChange={(e) => props.setState(e.target.value)}\n                      />\n            </div>\n        </div>\n    )\n};\n\nexport default MultiLineContainer;","import React from \"react\";\n\nconst OptionInputContainer = (props) => {\n    return (\n        <div className=\"grid grid-cols-6 gap-6\">\n            <div className=\"col-span-6 sm:col-span-2\">\n                <label className=\"block text-sm font-bold text-gray-700\">\n                    {props.name}\n                </label>\n                <select\n                    id={props.id}\n                    name={props.id}\n                    className=\"mt-1 block w-full py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-cyan-500 sm:text-sm\"\n                    onChange={(e) => props.setCurCollection(e.target.value)}\n                >\n                    {props.myCollections.map(name => (\n                        <option key={name} value={name}>{name}</option>\n                    ))}\n                </select>\n                <p className=\"mt-2 text-sm text-gray-500\">If you want to mint NFT as part of your collection, you can\n                    <b className=\"cursor-pointer\"> create it</b>\n                </p>\n            </div>\n        </div>\n    )\n};\n\nexport default OptionInputContainer;","const PropertyInput = (props) => {\n    return (\n        <div className=\"col-span-6 sm:col-span-3\">\n            <label className=\"text-sm font-medium text-gray-700\">\n                {props.name}\n            </label>\n            <input\n                type={props.type}\n                name={props.id}\n                id={props.id}\n                maxLength={props.maxLength}\n                className=\"mt-1 focus:ring-indigo-500 focus:border-cyan-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\n            />\n        </div>\n    )\n};\n\nexport default PropertyInput;","import React from \"react\";\n\nconst UploadFileInput = (props) => {\n    return (\n        <div>\n            <label className=\"block text-sm font-bold text-gray-700\">\n                Upload artwork file<b className=\"text-sm font-large text-red-500\">*</b>\n            </label>\n            {props.state === null ? (\n                <div\n                    className=\"flex justify-center mt-1 px-6 pt-5 pb-6 border-2 border-gray-300 border-dashed rounded-md\">\n                        <div className=\"space-y-1 text-center\">\n                            <svg\n                                className=\"mx-auto h-12 w-12 text-gray-400\"\n                                stroke=\"currentColor\"\n                                fill=\"none\"\n                                viewBox=\"0 0 48 48\"\n                                aria-hidden=\"true\"\n                            >\n                                <path\n                                    d=\"M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02\"\n                                    strokeWidth={2}\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                />\n                            </svg>\n                            <div className=\"flex text-sm text-gray-600\">\n                                <label\n                                    htmlFor=\"file-upload\"\n                                    className=\"relative cursor-pointer bg-white rounded-md font-medium text-blue-500 hover:text-indigo-500 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-indigo-500\"\n                                >\n                                    <span>Upload a file</span>\n                                    <input id=\"file-upload\" name=\"file-upload\" type=\"file\" accept=\"image/gif, image/jpeg, image/png\"\n                                           className=\"sr-only\" onChange={(e) => props.setState(e.target.files[0])}/>\n                                </label>\n                                <p className=\"pl-1\">or drag and drop</p>\n                            </div>\n                            <p className=\"text-xs text-gray-500\">PNG, JPG, GIF up to 10MB</p>\n                        </div>\n                </div>\n            ):(\n                <div className=\"flex justify-start mt-1 px-6 pt-5 pb-6 border-2 border-gray-300 border-dashed rounded-md\">\n                    <div className=\"relative\">\n                    <img width=\"100px\" src={URL.createObjectURL(props.state)} alt=\"nft image\"/>\n                    <button className=\"absolute top-0 right-0 -mx-2 -my-2 bg-gray-900 text-white rounded-full hover:bg-gray-500 cursor-pointer\"\n                            onClick={() => props.setState(null)}>\n                        <svg className=\"h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"\n                             stroke=\"currentColor\" aria-hidden=\"true\">\n                            <path d=\"M6 18L18 6M6 6l12 12\"/>\n                        </svg>\n                    </button>\n                    </div>\n                </div>\n\n            )}\n        </div>\n    )\n};\n\nexport default UploadFileInput;","import {NFTStorage} from 'nft.storage'\n\nexport async function storeNFT(name: any, description: any, image: any, traits: any) {\n    const client = new NFTStorage({\n        token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkaWQ6ZXRocjoweDYzZDFBZDhCMWIzMjQyQjFjMkUwNjE2NzcyOUNmMGEwYmIyNDE1OTUiLCJpc3MiOiJuZnQtc3RvcmFnZSIsImlhdCI6MTY0MDExNjI4NTY3OSwibmFtZSI6InRldHMgZm9yIG9wZW4gbmZ0In0.gU_buy_gF4XUwptAU7Ck5_TSrfhZNLva5h2uWAusHNo'\n    })\n\n    return await client.store({\n        name,\n        description,\n        image,\n        traits\n    })\n}\n\nexport function makeNftLink(nftIpfsLink: string) {\n    if (nftIpfsLink.startsWith('ipfs://')) {\n        return 'https://ipfs.io/ipfs/' + nftIpfsLink.slice(7)\n    }\n    return \"\"\n}\n","import React from 'react';\n\nconst DarkBlueTitle = ({title}) => {\n    return (\n        <div\n            className=\"text-center font-extrabold text-transparent bg-clip-text\n                       bg-gradient-to-br from-teal-900 to-mjol-blue-base\n                       text-5xl md:text-6xl lg:text-7xl\"\n        >\n            {title}\n        </div>\n    );\n};\n\nexport default DarkBlueTitle;","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport {NFT} from \"../../business-logic/models/nft\";\n\nexport enum PROFILE_TAB {\n    ALL_NFTS = \"All NFTs\",\n    LISTED_NFTS = \"Listed NFTs\",\n    HISTORY = \"My History\"\n}\n\nexport interface ProfileState {\n    tabs: Array<PROFILE_TAB>,\n    activeTab: PROFILE_TAB,\n    fetching: boolean,\n    success: boolean | undefined,\n    nfts: Array<NFT>,\n    history: []\n}\n\nconst initialState: ProfileState = {\n    tabs: [PROFILE_TAB.ALL_NFTS, PROFILE_TAB.LISTED_NFTS, PROFILE_TAB.HISTORY],\n    activeTab: PROFILE_TAB.ALL_NFTS,\n    fetching: true,\n    success: undefined,\n    nfts: [],\n    history: []\n}\n\nexport const profileSlice = createSlice({\n    name: \"profile\",\n    initialState,\n    reducers: {\n        changeTab: (state, action: PayloadAction<PROFILE_TAB>) => {\n            state.activeTab = action.payload\n        },\n        addNft: (state, action: PayloadAction<NFT | null>) => {\n            if (action.payload) {\n                state.nfts.push(action.payload)\n            }\n        },\n        startFetching: (state) => {\n            state.fetching = true\n        },\n        success: (state) => {\n            state.success = true\n            state.fetching = false\n        },\n        failure: (state) => {\n            state.success = false\n            state.fetching = false\n        },\n        resetNfts: (state) => {\n            state.nfts = []\n            state.fetching = true\n            state.success = undefined\n        }\n    }\n})\n\nexport const profileReducer = profileSlice.reducer","import Lottie from \"react-lottie-player\";\nimport lottieJson from \"../../../resources/loading.json\";\nimport React from \"react\";\n\nconst RoundLoader = () => {\n    return (\n        <div className=\"flex h-screen bg-light_white justify-center\">\n            <div className=\"my-auto\">\n                <Lottie\n                    loop\n                    animationData={lottieJson}\n                    play\n                    style={{width: 200, height: 200}}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default RoundLoader;","import React from 'react';\n\nconst BlueShadowContainer = ({children}) => {\n    return (\n        <div className=\"bg-white shadow-mjol-base-blue-xl pt-4\">\n            {children}\n        </div>\n    );\n};\n\nexport default BlueShadowContainer;","import React, {useState} from 'react';\nimport {mintToCommonCollection} from \"../../../../business-logic/near/contract-nft\";\nimport SingleLineContainer from \"./upload/containers/SingleLineContainer\";\nimport MultiLineContainer from \"./upload/containers/MultiLineContainer\";\nimport OptionInputContainer from \"./upload/containers/OptionInputContainer\";\nimport PropertyInput from \"./upload/lines/PropertyInput\";\nimport UploadFileInput from \"./upload/UploadFileInput\";\nimport {makeNftLink, storeNFT} from \"../../../../business-logic/ipfs/upload\";\nimport DarkBlueTitle from \"../../../ui/text/DarkBlueTitle\";\nimport RoundLoader from \"../../../ui/loaders/RoundLoader\";\nimport BlueShadowContainer from \"../../../ui/shadow/BlueShadowContainer\";\nimport {getAccountId, wallet} from \"../../../../business-logic/near2/near/setup/near\";\n\n\nconst LineAlert = ({state, setState}) => {\n    return (\n        <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative\" role=\"alert\">\n            <span className=\"block sm:inline\">{state}</span>\n            <span className=\"absolute top-0 bottom-0 right-0 px-4 py-3\">\n                <svg className=\"fill-current h-6 w-6 text-red-500\" role=\"button\"\n                     xmlns=\"http://www.w3.org/2000/svg\"\n                     viewBox=\"0 0 20 20\"\n                     onClick={() => setState(\"\")}>\n                    <title>Close</title>\n                    <path d=\"M14.348 14.849a1.2 1.2 0 0 1-1.697 0L10 11.819l-2.651 3.029a1.2 1.2 0 1\n                    1-1.697-1.697l2.758-3.15-2.759-3.152a1.2 1.2 0 1 1 1.697-1.697L10 8.183l2.651-3.031a1.2 1.2 0 1 1\n                    1.697 1.697l-2.758 3.152 2.758 3.15a1.2 1.2 0 0 1 0 1.698z\"\n                    />\n                </svg>\n            </span>\n        </div>\n    )\n};\n\nconst CreateNftPage = () => {\n    const MIN_TITLE_LEN = 3;\n    const MAX_TITLE_LEN = 30;\n    const MAX_DESC_LEN = 120;\n    const MIN_ROYALTY = 0;\n    const MAX_ROYALTY = 50;\n    const MIN_TRAITS_LEN = 1;\n    const MAX_TRAITS_LEN = 20;\n\n\n    let myCollections = [] //['Collection#1', 'Collection#2', 'Collection#3'];\n    myCollections = ['None'].concat(myCollections);\n\n    const [curCollection, setCurCollection] = useState('None');\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [royalty, setRoyalty] = useState(0);\n    const [file, setFile] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const [alertText, setAlertText] = useState(\"\");\n\n\n    const [propertiesNum, setPropertiesNum] = useState([1]);\n    const [fetchProperties, setFetchProperties] = useState(false);\n    const addProperty = () => {\n        setPropertiesNum(propertiesNum.concat(propertiesNum[propertiesNum.length - 1] + 1));\n        setFetchProperties(!fetchProperties);\n    };\n    const delProperty = () => {\n        if (propertiesNum.length !== 1) {\n            const tmpNum = propertiesNum;\n            tmpNum.pop();\n            setPropertiesNum(tmpNum);\n            setFetchProperties(!fetchProperties);\n        }\n    };\n\n    const submitForm = (e) => {\n        e.preventDefault();\n        setAlertText(\"\");\n        if (!wallet.isSignedIn()) {\n            return\n        }\n        if (!(title.length <= MAX_TITLE_LEN && title.length >= MIN_TITLE_LEN)) {\n            setAlertText(`Title length must be between ${MIN_TITLE_LEN} and ${MAX_TITLE_LEN} characters`);\n            return\n        }\n        if (!(description.length <= MAX_DESC_LEN)) {\n            setAlertText(`Description length must be less than ${MAX_DESC_LEN} characters`);\n            return\n        }\n        if (!(royalty <= MAX_ROYALTY && royalty >= MIN_ROYALTY)) {\n            setAlertText(`Royalty must be less than ${MAX_ROYALTY}`);\n            return\n        }\n        if (file === null) {\n            setAlertText(`Please upload your NFT file`);\n            return\n        }\n\n        if (curCollection === 'None') {\n            setIsLoading(true);\n            storeNFT(title,\n                description,\n                file,\n                {}).then(res => {\n                console.log(res);\n                const ipfsMedia = makeNftLink(res.data.image.href);\n                const ipfsRef = makeNftLink(res.url);\n                let token_metadata = {\n                    title: title,\n                    description: description,\n                    media: ipfsMedia,\n                    reference: ipfsRef,\n                    copies: 1\n                };\n                let payout = null;\n                if (royalty !== 0) {\n                    payout = {\n                        payout: {}\n                    };\n                    payout[\"payout\"][getAccountId()] = (100 * royalty).toString();\n                }\n                mintToCommonCollection(token_metadata, payout);\n                setIsLoading(false);\n            }).catch((e) => {\n                    setAlertText(`Error: Can't upload file to ipfs, try again or contact to our support`);\n                    setIsLoading(false);\n                    console.log(e);\n                }\n            )\n        } else {\n            setAlertText('Only common collection available now');\n        }\n\n    };\n\n\n    return (\n        <>\n            {isLoading ? (\n                <RoundLoader/>\n            ) : (\n                <div className=\"bg-mjol-white\">\n                    <BlueShadowContainer>\n                        <div className=\"pb-10 px-4 space-y-8\">\n                            <DarkBlueTitle title=\"Create NFT\"/>\n                        </div>\n                    </BlueShadowContainer>\n                    <div className=\"max-w-7xl py-10 mx-auto px-4 sm:px-6\">\n                        <form onSubmit={submitForm}>\n                            <div className=\"shadow rounded-md overflow-hidden\">\n                                <div className=\"px-4 py-5 bg-white space-y-6 p-6\">\n                                    <SingleLineContainer name={'Title'}\n                                                         required={true}\n                                                         text={'My NFT'}\n                                                         type={'text'}\n                                                         minLength={MIN_TITLE_LEN}\n                                                         maxLength={MAX_TITLE_LEN}\n                                                         id={'mint-title'}\n                                                         setState={setTitle}\n                                    />\n                                    <MultiLineContainer name={'Description'}\n                                                        text={'Brief description for your NFT'}\n                                                        maxLength={MAX_DESC_LEN}\n                                                        rows={3}\n                                                        id={'mint-desc'}\n                                                        setState={setDescription}\n                                    />\n                                    <SingleLineContainer name={'Royalty'}\n                                                         text={'Royalties on secondary sales(%), number from 0-50'}\n                                                         type={'number'}\n                                                         min={MIN_ROYALTY}\n                                                         max={MAX_ROYALTY}\n                                                         id={'mint-royalty'}\n                                                         setState={setRoyalty}\n                                    />\n                                    <OptionInputContainer name={'Collection'}\n                                                          myCollections={myCollections}\n                                                          id={'mint-collection'}\n                                                          curCollection={curCollection}\n                                                          setCurCollection={setCurCollection}\n                                    />\n                                    {curCollection !== 'None' ? (\n                                        <div className=\"grid grid-cols-6 gap-6\">\n                                            <label className=\"col-span-6 text-sm font-medium text-gray-700\">\n                                                Properties:\n                                                <button\n                                                    type=\"button\"\n                                                    onClick={addProperty}\n                                                    className=\"ml-5 bg-white py-2 px-3 border border-gray-300 rounded-md shadow-sm text-sm leading-4 font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                                                >\n                                                    +\n                                                </button>\n                                                <button\n                                                    type=\"button\"\n                                                    onClick={delProperty}\n                                                    className=\"ml-5 bg-white py-2 px-3 border border-gray-300 rounded-md shadow-sm text-sm leading-4 font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                                                >\n                                                    -\n                                                </button>\n                                            </label>\n                                            {propertiesNum.map(ind => (\n                                                <>\n                                                    <PropertyInput name={'Key #' + ind}\n                                                                   type={'text'}\n                                                                   minLength={MIN_TRAITS_LEN}\n                                                                   maxLength={MAX_TRAITS_LEN}\n                                                                   id={'mint-key-' + ind}\n                                                    />\n                                                    <PropertyInput name={'Value #' + ind}\n                                                                   type={'text'}\n                                                                   minLength={MIN_TRAITS_LEN}\n                                                                   maxLength={MAX_TRAITS_LEN}\n                                                                   id={'mint-value-' + ind}\n                                                    />\n                                                </>\n                                            ))}\n                                        </div>\n                                    ) : (\n                                        <></>\n                                    )}\n                                    <UploadFileInput state={file} setState={setFile}/>\n                                    {alertText !== \"\" ? (\n                                        <LineAlert state={alertText} setState={setAlertText}/>\n                                    ) : (\n                                        <></>\n                                    )}\n                                </div>\n                                <div className=\"px-4 py-3 bg-gray-50 text-left sm:px-6\">\n                                    <button\n                                        type=\"submit\"\n                                        className=\"inline-flex justify-center py-2 px-6 font-bold text-lg hover:text-gray-900 font-large rounded-md text-white bg-gradient-to-br from-mjol-blue-base to-green-200 hover:from-green-200 hover:to-mjol-blue-base\"\n                                    >\n                                        Mint\n                                    </button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            )\n            }\n        </>\n    )\n};\n\nexport default CreateNftPage;","import {GAS, SM_DEPOSIT} from \"../near2/near/constants\";\nimport {wallet, getAccountId} from \"../near2/near/setup/near\";\n\nexport function mintToCommonCollection(token_metadata, payout) {\n    const common_contract_id = 'mjol.near';\n    const token_id = 'token-' + new Date().getTime();\n\n    const data = {\n        token_id: token_id,\n        token_owner_id: getAccountId(),\n        token_metadata: token_metadata,\n    };\n    if (payout !== null) {\n        data[\"payout\"] = payout\n    }\n    wallet.account().functionCall(\n        common_contract_id,\n        'nft_mint',\n        data,\n        GAS,\n        SM_DEPOSIT\n    )\n}","import React from 'react';\n\nconst ExploreCollectionsPage = () => {\n    return (\n        <div>\n            Explore collections\n        </div>\n    );\n};\n\nexport default ExploreCollectionsPage;","import {useDispatch, TypedUseSelectorHook, useSelector} from \"react-redux\";\nimport {AppDispatch, RootState} from \"../state/store\";\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;","import React from \"react\";\nimport {wallet} from \"../business-logic/near2/near/setup/near\";\n\nconst withAccountId = (Component) => (props) => {\n    return <Component {...props} accountId={wallet.getAccountId()}/>\n};\n\nexport default withAccountId;","import React, {useEffect} from 'react';\n\nconst ProfileHistoryFetch = ({accountId}) => {\n\n    useEffect(() => {\n\n    }, [accountId])\n\n    return (\n        <div>\n            HISTORY\n        </div>\n    );\n};\n\nexport default ProfileHistoryFetch;","const nearApi = require(\"near-api-js\");\n\nexport class NftAPI {\n\n    static async getJsonByURL(url) {\n        try {\n            const response = await fetch(url, {timeout: 30000});\n            if (!response.ok) {\n                return {error: response.statusText + ' (' + response.status + ')'}\n            }\n            try {\n                return await response.json();\n            } catch (err) {\n                return {error: 'Unable to parse json response'}\n            }\n        } catch (error) {\n            return {error}\n        }\n    }\n\n    static getNetwork(accountId) {\n        return accountId.endsWith('.near')\n            ? 'mainnet'\n            : 'testnet';\n    }\n\n    static buildAccountInfo(accountId) {\n        const network = 'mainnet'\n        const provider = new nearApi.providers.JsonRpcProvider(`https://rpc.${network}.near.org`);\n        return new nearApi.Account(\n            {provider: provider}\n        )\n    }\n\n    static async buildContractInfo(accountId) {\n        const network = NftAPI.getNetwork(accountId)\n        const accountURL = `https://helper.${network}.near.org/account/${accountId}/likelyNFTs`;\n        return await NftAPI.getJsonByURL(accountURL)\n    }\n}","export class NftCollection {\n    collection: string\n\n    constructor(collection: string = \"\") {\n        this.collection = collection\n    }\n}\n\nexport class MintSite {\n    name: string\n    nftLink: string\n\n    constructor(name: string = \"\", nftLink: string = \"\") {\n        this.name = name\n        this.nftLink = nftLink\n    }\n}\n\n\nexport class NFT {\n\n    contractId: string\n    tokenId: string\n    ownerId: string\n    title: string\n    description: string\n    copies: number\n    mediaURL: string\n    referenceURL : string | undefined\n    mintSite: MintSite | undefined\n    price: string | undefined\n\n\n    constructor(\n        contractId: string,\n        tokenId: string,\n        ownerId: string,\n        title: string,\n        description: string,\n        copies: number,\n        mediaURL: string,\n        referenceURL?: string,\n        mintSite?: MintSite,\n        price?: string\n    ) {\n        // NFT setup id\n        this.contractId = contractId;\n\n        // NFT token id\n        this.tokenId = tokenId;\n\n        // NFT owner id\n        this.ownerId = ownerId;\n\n        // NFT title\n        this.title = title;\n\n        // NFT description\n        this.description = description;\n\n        // Amount of NFT copies\n        this.copies = copies;\n\n        // Link to nfts media url.\n        this.mediaURL = mediaURL;\n\n        // Link to JSON file with extra information about NFT, like\n        // traits, history etc.\n        this.referenceURL = referenceURL;\n\n        // Contains information about mint on external transaction.\n        this.mintSite = mintSite;\n\n        // Listed NFT transaction price,\n        // `null` if NFT not listed\n        this.price = price;\n    }\n\n    isListed() {\n        return this.price !== null\n    }\n\n    // Returns primary key for NFT,\n    // 'contractId/tokenId'\n    getKey() {\n        return this.contractId + '/' + this.tokenId\n    }\n\n    // Returns traits for NFT,\n    // If traits not provided returns `null`\n    getTraits() {\n        //async GET json from this.reference_url\n        return null\n    }\n\n    // Returns information about NFT collection\n    getCollectionInfo() {\n        if ('mjol.near') {\n            return new NftCollection('Standard collection')\n        }\n\n        // async GET json from this.referenceURL\n        return new NftCollection()\n    }\n\n}","import {NftAPI} from \"./get-utils\";\nimport {MintSite, NFT} from \"../models/nft\";\n\nconst isIPFS = require('is-ipfs');\n\n\nfunction getRealUrl(url, urlHash, contractId) {\n    let storageLink = 'https://ipfs.fleek.co/ipfs/';\n\n    if (contractId.endsWith('mintbase1.near')) {\n        storageLink = 'https://arweave.net/';\n    }\n\n    if (url) {\n        if (url.startsWith(\"http\")) {\n            return url;\n        } else if (isIPFS.cid(url)) {\n            return storageLink + url;\n        }\n    }\n    if (urlHash && isIPFS.cid(urlHash)) {\n        return storageLink + urlHash;\n    }\n    return null;\n}\n\nfunction getNftMintedSiteInfo(nft, contractId) {\n    if (contractId === 'x.paras.near') {\n        const holder = nft.token_id.split(':')[0];\n        return new MintSite(\n            'Paras',\n            `https://paras.id/token/x.paras.near::${holder}/${nft.token_id}`\n        )\n    }\n    if (contractId.endsWith('mintbase1.near')) {\n        return new MintSite(\n            'Mintbase',\n            `https://www.mintbase.io/thing/${nft.metadata.reference}:${contractId}`\n        )\n\n    }\n    // if (contractId === 'pluminite.near') {\n    //     return new MintSite(\n    //         'Pluminite',\n    //         `https://pluminite.com/#/gem/${nft.token_id}`\n    //     )\n    // }\n    if (contractId.endsWith('mjol.near')) {\n        return new MintSite(\n            'MjolNear',\n            `https://mjolnear.com/nft/${contractId}/${nft.token_id}`\n        )\n    }\n    return new MintSite('Non-verified contract', '');\n}\n\n\n// Input example:\n//\n// token_id: '56178:34',\n// owner_id: 'turk.near',\n// metadata: {\n//   title: 'Scent of a Cloud #34',\n//   description: null,\n//   media: 'bafybeidotqecqjq37mab2o4tlqevevpn5kgjhgeblj7zlscxt6g2rxrkau',\n//   media_hash: null,\n//   copies: 111,\n//   issued_at: '1638389142491715689',\n//   expires_at: null,\n//   starts_at: null,\n//   updated_at: null,\n//   extra: null,\n//   reference: 'bafybeicq6hg6azxaymzay7bi3cu2ozjcd7fclmqy56dzg5o5nttuzaklka',\n//   reference_hash: null\n// },\n// approved_account_ids: {}\nfunction convertStandardNFT(contractId, nft, listedNftKeys) {\n    const metadata = nft.metadata;\n    const mediaUrl =  getRealUrl(metadata.media, metadata.media_hash, contractId);\n    if (!mediaUrl){\n        return null\n    }\n    return new NFT(\n        contractId,\n        nft.token_id || nft.id,\n        nft.owner_id,\n        metadata.title,\n        metadata.description,\n        metadata.copies,\n        mediaUrl,\n        getRealUrl(metadata.reference, metadata.reference_hash, contractId),\n        getNftMintedSiteInfo(nft, contractId),\n        listedNftKeys[contractId + ':' + nft.token_id] === undefined\n            ? null\n            : listedNftKeys[contractId + ':' + nft.token_id]\n    )\n}\n\n// nfts example\n// id: 68,\n// owner_id: { Account: 'turk.near' },\n// approvals: {},\n// metadata: {\n//   title: null,\n//   description: null,\n//   media: null,\n//   media_hash: null,\n//   copies: 5,\n//   issued_at: null,\n//   expires_at: null,\n//   starts_at: null,\n//   updated_at: null,\n//   extra: null,\n//   reference: 'MIILJWlP432tEAhhhXTDwGeEMM35XxOmDKy2YFRy96Y',\n//   reference_hash: null\n// },\n// royalty: { split_between: [Object], percentage: [Object] },\n// split_owners: null,\n// minter: 'kiora.near',\n// loan: null,\n// composeable_stats: { local_depth: 0, cross_contract_children: 0 },\n// origin_key: null\n// -----------------------------------------\n// JSON example:\n// category: 'membership',\n// description: 'This token represents Proof of Attendance (PoA) for a single NEAR account at the MetaBUIDL Open House. The bearer of this token was one of the first 100 accounts that registered for the event.',\n// copies: 10,\n// media_hash: 'Zty1W1Xe8pp3sO6nBjJNIGgOfFV2E_xm25Hfm3rb1Dk',\n// lock: null,\n// visibility: 'safe',\n// youtube_url: null,\n// animation_url: null,\n// animation_hash: null,\n// document: null,\n// document_hash: null,\n// royalty: null,\n// royalty_perc: 0.1,\n// split_revenue: null,\n// tags: [ 'nearedu', 'metabuidl', 'hackathon', 'metaverse' ],\n// media: 'https://arweave.net/Zty1W1Xe8pp3sO6nBjJNIGgOfFV2E_xm25Hfm3rb1Dk',\n// extra: [\n// {\n//   trait_type: 'Start Date',\n//   value: 1630521000,\n//   display_type: 'date'\n// },\n// { trait_type: 'End Date', value: 1630521000, display_type: 'date' },\n// { trait_type: 'website', value: 'https://near.university/' }\n// ],\n// title: 'NEAR University Metaverse',\n// store: 'nuniversity.mintbase1.near',\n// external_url: 'https://near.university/',\n// type: 'NEP171'\nasync function getMintbaseNFT(account, contractId, nft, listedNftKeys) {\n    const metadata = nft.metadata;\n    const url = await account.viewFunction(\n        contractId,\n        'nft_token_uri',\n        {\n            token_id: nft.id.toString()\n        }\n    )\n    const jsonNFT = await NftAPI.getJsonByURL(url)\n    const mediaUrl = getRealUrl(jsonNFT.media, jsonNFT.media_hash, contractId)\n    if (!mediaUrl){\n        return null\n    }\n    return new NFT(\n        contractId,\n        nft.id.toString(),\n        nft.owner_id.Account,\n        jsonNFT.title,\n        jsonNFT.description,\n        metadata.copies,\n        mediaUrl,\n        getRealUrl(nft.metadata.reference, nft.metadata.reference_hash, contractId),\n        getNftMintedSiteInfo(nft, contractId),\n        listedNftKeys[contractId + ':' + nft.id] === undefined\n            ? null\n            : listedNftKeys[contractId + ':' + nft.id]\n    )\n}\n\nexport async function getConvertedNFT(account, contractId, nft, listedNftKeys) {\n    if (contractId.endsWith('mintbase1.near')) {\n        return getMintbaseNFT(account, contractId, nft, listedNftKeys)\n    }\n    return convertStandardNFT(contractId, nft, listedNftKeys)\n}","import {utils} from 'near-api-js'\nimport {getConvertedNFT} from \"./nft-converter\";\nimport {NftAPI} from \"./get-utils\";\nimport {contract} from '../near2/near/setup/near'\n\n\nfunction formatPrice(x) {\n    const price = x.toLocaleString('fullwide', {useGrouping: false});\n    return utils.format.formatNearAmount(price)\n}\n\nexport async function getNftPriceByTokenUID(contractId, tokenId) {\n    const nft_uid = contractId + \":\" + tokenId;\n    try {\n        return contract.get_nft_price({\n            nft_uid: nft_uid,\n        }).then((price) => {\n                if (price === 0){\n                    return {}\n                }\n                return {[nft_uid] : formatPrice(price)}\n            }\n        ).catch((e) => {\n            console.log(\"Get NFT price error\", e);\n            return {}\n        });\n    } catch (e) {\n        console.log(\"Connection Error when get NFT price\", e);\n        return {}\n    }\n}\n\nexport async function getNftPricesByUser(accountId) {\n    let res = {};\n    try {\n        return contract.get_user_nfts({\n            owner_id: accountId,\n        }).then((vec) => {\n                for (let pairIdAndPrice of vec) {\n                    res[pairIdAndPrice[0]] = formatPrice(pairIdAndPrice[1])\n                }\n                return res\n            }\n        ).catch((e) => {\n            console.log(\"Get user NFT prices error\", e);\n            return res\n        });\n    } catch (e) {\n        console.log(\"Connection Error when get user NFT prices\", e);\n        return res\n    }\n}\n\nasync function getMarketNftsPrices(account, from, limit) {\n    let res = [];\n    try {\n        return contract.get_nfts({\n            from: from,\n            limit: limit\n        }).catch((e) => {\n            console.log(\"Get transaction NFTs error\", e);\n            return res\n        })\n    } catch (e) {\n        console.log(\"Connection Error when get transaction NFTs\", e);\n        return res\n    }\n}\n\nasync function getNFT(account, contractId, tokenId, price) {\n    const response = await account.viewFunction(contractId, 'nft_token', {\n        token_id: tokenId\n    })\n    return getConvertedNFT(\n        account,\n        contractId,\n        response,\n        {\n            [contractId + \":\" + tokenId]: formatPrice(price)\n        }\n    )\n}\n\nexport async function getMarketNfts(accountId, from = 0, limit = 10) {\n    const account = NftAPI.buildAccountInfo(accountId)\n    const marketNfts = await getMarketNftsPrices(account, from, limit);\n    let resNFTs = [];\n    for (let marketNft of marketNfts) {\n\n        const contractId = marketNft.nft_contract_id\n        const tokenId = marketNft.token_id\n        const price = marketNft.price\n\n        const response = await account.viewFunction(contractId, 'nft_token', {\n            token_id: tokenId\n        })\n\n        const nftPromise = getConvertedNFT(\n            account,\n            contractId,\n            response,\n            {\n                [contractId + \":\" + tokenId]: formatPrice(price)\n            }\n        )\n        resNFTs.push(nftPromise)\n    }\n    return resNFTs\n}\n\n","import {getConvertedNFT} from \"./nft-converter\";\nimport {NftAPI} from \"./get-utils\";\nimport {getNftPriceByTokenUID, getNftPricesByUser} from \"./get-nfts-market\";\n\n\nasync function getNFTsByContractAndAccount(account, contractId, accountId) {\n    const limit = 20;\n    let allNfts = [], curNfts = [];\n    do {\n        try {\n            curNfts = await account.viewFunction(contractId, 'nft_tokens_for_owner', {\n                account_id: accountId,\n                from_index: allNfts.length.toString(),\n                limit: limit\n            });\n        } catch (e) {\n            console.log(\"No more NFT for user.\");\n            break\n        }\n        allNfts = allNfts.concat(curNfts);\n    } while (curNfts.length >= limit);\n\n    return allNfts;\n}\n\n\nexport async function getNFTsByContractAndTokenId(accountId, contractId, tokenId) {\n    const account = NftAPI.buildAccountInfo(accountId)\n    const nft = await account.viewFunction(contractId, 'nft_token', {\n        token_id: tokenId\n    });\n    const listedNftKeys = await getNftPriceByTokenUID(contractId, tokenId);\n    return getConvertedNFT(account, contractId, nft, listedNftKeys)\n}\n\nexport async function getNftPayouts(accountId, contractId, tokenId) {\n    const account = NftAPI.buildAccountInfo(accountId)\n    const TREASURY_PERCENT = 2;\n    try {\n        return account.viewFunction(contractId, 'nft_payout', {\n            token_id: tokenId,\n            balance: '100000000',\n            max_len_payout: 10\n        }).then(payouts => {\n            let royalties = {'treasury': TREASURY_PERCENT};\n            let highestPayout = null;\n            for (let payoutKey in payouts['payout']) {\n                const payoutVal = parseInt(payouts['payout'][payoutKey]) / 1000000;\n                if (!highestPayout || highestPayout[1] < payoutVal) {\n                    highestPayout = [payoutKey, payoutVal]\n                }\n                royalties[payoutKey] = payoutVal\n            }\n            delete royalties[highestPayout[0]]\n            delete royalties['undefined']\n\n            return royalties\n        })\n    } catch (e) {\n        console.log(e);\n    }\n    return null\n}\n\nfunction addExtraContracts(curContracts) {\n    const extraContracts = ['mjol.near'];\n    for (let contract of extraContracts) {\n        if (!curContracts.includes(contract)) {\n            curContracts.push('mjol.near');\n        }\n    }\n    return curContracts\n}\n\nexport async function getNfts(accountId) {\n    const account = NftAPI.buildAccountInfo(accountId)\n\n    let nftContracts = await NftAPI.buildContractInfo(accountId)\n    nftContracts = addExtraContracts(nftContracts)\n    console.log(nftContracts)\n\n\n    if (nftContracts.error) {\n        console.log(\"Account error found\");\n        return []\n    }\n    const listedNftKeys = await getNftPricesByUser(accountId);\n    let resNFTs = [];\n    for (let contractId of nftContracts) {\n        const nfts = await getNFTsByContractAndAccount(account, contractId, accountId);\n        for (let nft of nfts) {\n            const nftInfoPromise = getConvertedNFT(account, contractId, nft, listedNftKeys)\n            resNFTs.push(nftInfoPromise)\n        }\n    }\n\n    return resNFTs\n}\n","import {getNfts} from \"../../business-logic/near/get-nfts\";\n\nimport {AppDispatch} from \"../store\";\nimport {profileSlice} from \"./slice\";\n\nexport const fetchMyNfts = (accountId: string) => async (dispatch: AppDispatch) => {\n    dispatch(profileSlice.actions.startFetching())\n    getNfts(accountId)\n        .then(nfts => {\n                nfts.map(nftPromise =>\n                    nftPromise\n                        .then(nft => {\n                            dispatch(profileSlice.actions.addNft(nft))\n                        })\n                        .catch(() => console.log('NFT not found'))\n                )\n                dispatch(profileSlice.actions.success())\n            }\n        )\n        .catch(() => dispatch(profileSlice.actions.failure()))\n}","import React from 'react';\nimport ContentLoader from \"react-content-loader\";\n\nconst SmallNftLoader = ({width, height, speed = 1.5}) => {\n    return (\n        <ContentLoader\n            speed={speed}\n            width={width}\n            height={height}\n            viewBox={`0 0 ${width} ${height}`}\n            foregroundColor='#f0efef'\n            backgroundColor='#e1e4ea'\n        >\n            <rect x='0' y='0' rx='16' ry='16' width={width} height={height} speed={2}/>\n        </ContentLoader>\n    );\n};\n\nexport default SmallNftLoader;","import React from 'react';\n\nconst NftCollectionContainer = ({children}) => {\n    return (\n        <div className=\"grid gap-8 lg:gap-8 xl:gap-10 justify-center auto-rows-min\n                        grid-cols-1\n                        xxs:grid-cols-1nft-280\n                        sm:grid-cols-2nft-280\n                        lg:grid-cols-3nft-280\n                        xl:grid-cols-4nft-280\n                        2xl:grid-cols-4nft-300\">\n            {children}\n        </div>\n    );\n};\n\nexport default NftCollectionContainer;","import React from 'react';\n\nconst NftImage = ({path}) => {\n    return (\n        <div className=\"aspect-w-1 aspect-h-1 mb-1 аlex justify-center\">\n            <img src={path}\n                 alt=\"media not supported\"\n                 className=\"object-contain\"\n            />\n        </div>\n    );\n};\n\nexport default NftImage;","import React from 'react';\n\nconst NftBoxContainer = ({children}) => {\n    return (\n        <div className=\"group flex flex-col overflow-hidden justify-between\n                        rounded-xl bg-white ring-1 ring-blue-200\n                        select-none\n                        shadow-mjol-blue-all-xs\n                        transform duration-300 ease-border-timing\n                        hover:shadow-mjol-blue-all-md hover:ring-blue-400\"\n        >\n            {children}\n        </div>\n    );\n};\n\nexport default NftBoxContainer;","import React from 'react';\n\nconst NearSVG = () => {\n    return (\n        <svg className=\"mx-2 h\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <g clipPath=\"url(#clip0)\">\n                <path className=\"fill-current\"\n                      d=\"M19.1736 1.21319L14.2154 8.57143C13.8725 9.07253 14.5318 9.67912 15.0066 9.25714L19.8857 5.01099C20.0175 4.90549 20.2022 4.98462 20.2022 5.16923V18.4352C20.2022 18.6198 19.9648 18.6989 19.8593 18.567L5.09008 0.896703C4.61535 0.316484 3.92964 0 3.1648 0H2.63733C1.2659 0 0.131836 1.13407 0.131836 2.53187V21.2044C0.131836 22.6022 1.2659 23.7363 2.6637 23.7363C3.53403 23.7363 4.35162 23.2879 4.82634 22.5231L9.78458 15.1648C10.1274 14.6637 9.4681 14.0571 8.99337 14.4791L4.11425 18.6989C3.98239 18.8044 3.79777 18.7253 3.79777 18.5407V5.3011C3.79777 5.11648 4.03513 5.03736 4.14063 5.16923L18.9099 22.8396C19.3846 23.4198 20.0967 23.7363 20.8351 23.7363H21.3626C22.7604 23.7363 23.8945 22.6022 23.8945 21.2044V2.53187C23.8945 1.13407 22.7604 0 21.3626 0C20.4659 0 19.6483 0.448352 19.1736 1.21319V1.21319Z\"/>\n            </g>\n        </svg>\n\n    );\n};\n\nexport default NearSVG;","import React from 'react';\n\nimport ReactTooltip from \"react-tooltip\";\nimport NearSVG from \"../../../ui/icons/near/NearSVG\";\n\nconst SmallNftPrice = ({price, isListed}) => {\n    return (\n        <div className=\"flex items-center\">\n            <p className=\"text-mjol-cyan-base font-extrabold text-md sm:text-lg\">\n                {isListed ? price : \"Not listed\"}\n            </p>\n            {isListed &&\n                <div>\n                    <div data-tip='NEAR coin'><NearSVG/></div>\n                    <ReactTooltip place='right' delayShow={100}/>\n                </div>\n            }\n        </div>\n    );\n};\n\nexport default SmallNftPrice;","import React from 'react';\n\nconst NftMintedLink = ({mintedName, mintedLink}) => {\n    return (\n        <a className=\"text-mjol-purple-dark font-semibold hover:text-mjol-purple-base\"\n           href={mintedLink}\n           target=\"_blank\"\n        >\n            Minted on {mintedName}\n        </a>\n    );\n};\n\nexport default NftMintedLink;","import React from 'react';\n\nconst NftTitle = ({title}) => {\n    return (\n        <div className=\"font-extrabold text-mjol-purple-dark truncate\n                        text-sm md:text-md 2xl:text-lg\">\n            {title}\n        </div>\n    );\n};\n\nexport default NftTitle;","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nconst NftCollection = ({collectionName, collectionLink}) => {\n    return (\n        <Link className=\"text-xs md:text-sm 2xl:text-md font-medium truncate\n                         text-mjol-purple-dark-t hover:underline\"\n              to={collectionLink}\n        >\n            {collectionName}\n        </Link>\n    );\n};\n\nexport default NftCollection;","import React from 'react';\nimport {BsFillCheckCircleFill} from 'react-icons/bs'\n\nconst NftVerifiedStatus = ({isVerified = true}) => {\n    return isVerified\n        ? <BsFillCheckCircleFill color=\"#18b3cc\"/>\n        : <></>\n};\n\nexport default NftVerifiedStatus;","import React from 'react';\nimport NftImage from \"./details/image/NftImage\";\nimport NftBoxContainer from \"./NftBoxContainer\";\nimport SmallNftPrice from \"./details/price/SmallNftPrice\";\nimport NftMintedLink from \"./details/minted/NftMintedLink\";\nimport NftTitle from \"./details/title/NftTitle\";\nimport NftCollection from \"./details/collection/NftCollection\";\n\nimport NftVerifiedStatus from \"./details/verified/NftVerifiedStatus\";\nimport {Link} from \"react-router-dom\";\n\nconst NftItem = ({nft}) => {\n    const previewLink = `/nft/${nft.contractId}/${nft.tokenId}`\n    const isListed = nft.isListed()\n    return (\n        <NftBoxContainer>\n            <Link to={previewLink}>\n                <NftImage path={nft.mediaURL}/>\n            </Link>\n            <div className=\"px-5\">\n                <Link to={previewLink}>\n                    <NftTitle title={nft.title}/>\n                </Link>\n                <NftCollection collectionLogoLink=\"MOCK\"\n                               collectionLink=\"MOCK\"\n                               collectionName=\"MOCK\"/>\n                <div className=\"grid place-items-end\">\n                    <div className=\"inline-flex space-x-1 text-tiny-2 xs:text-tiny-3 2xl:text-tiny-4 items-center\">\n                        <NftMintedLink mintedName={nft.mintSite.name}\n                                       mintedLink={nft.mintSite.nftLink}/>\n                        {nft.mintSite.name === 'Non-verified contract' ? (\n                            <></>\n                        ) : (\n                            <NftVerifiedStatus/>\n                        )\n                        }\n                    </div>\n                </div>\n                <hr className=\"ring-1 ring-mjol-purple-dark border-none\"/>\n                <div className=\"py-2\">\n                    <SmallNftPrice price={nft.price} isListed={isListed}/>\n                </div>\n            </div>\n        </NftBoxContainer>\n    );\n};\n\nexport default NftItem;","import SmallNftLoader from \"../ui/loaders/SmallNftLoader\";\nimport NftCollectionContainer from \"./NftCollectionContainer\";\nimport NftItem from \"../nft-item/NftItem\";\nimport React from \"react\";\n\nconst NftsGrid = ({nfts, fetching}) => {\n    const loaders = Array(12)\n        .fill(0)\n        .map((i, idx) =>\n            <SmallNftLoader key={idx} width={280} height={410}/>\n        )\n\n    return (\n        <div className=\"p-5 md:p-10\">\n            <NftCollectionContainer>\n                {fetching\n                    ? loaders\n                    : nfts.length === 0\n                        ? <div className=\"text-center\">No nfts found</div>\n                        : nfts.map(nft =>\n                            <NftItem key={nft.getKey()} nft={nft}/>\n                        )\n                }\n            </NftCollectionContainer>\n        </div>\n    );\n};\n\nexport default NftsGrid;\n","import React, {useEffect} from 'react';\nimport {useAppDispatch, useAppSelector} from \"../../hooks/redux\";\nimport {PROFILE_TAB, profileSlice} from \"../../state/profile/slice\";\nimport {fetchMyNfts} from \"../../state/profile/thunk\";\nimport NftsGrid from \"../../components/nft-collection/NftsGrid\";\n\nconst ProfileNftsFetch = ({accountId}) => {\n    const {nfts, fetching, activeTab} = useAppSelector(state => state.profile)\n    const dispatch = useAppDispatch()\n\n    useEffect(() => {\n        dispatch(fetchMyNfts(accountId))\n        return () => dispatch(profileSlice.actions.resetNfts())\n    }, [accountId])\n\n    return (\n        <NftsGrid fetching={fetching}\n                  nfts={activeTab === PROFILE_TAB.LISTED_NFTS\n                      ? nfts.filter(nft => nft.isListed())\n                      : nfts\n                  }\n        />\n    );\n};\n\nexport default ProfileNftsFetch;","export default function classNames(...classes) {\n    return classes.filter(Boolean).join(' ')\n}","import React from 'react';\n\nconst DarkBlueMjolText = ({text}) => {\n    return (\n        <div className=\"text-center font-extrabold text-transparent\n                        bg-clip-text bg-gradient-to-bl from-blue-500 to-blue-800\"\n        >\n            {text}\n        </div>\n    );\n};\n\nexport default DarkBlueMjolText;","import React from 'react';\nimport classNames from \"../../../utils/css-utils\";\nimport DarkBlueMjolText from \"../text/DarkBlueMjolText\";\n\nconst MjolBlueGradientButton = ({title, onClick, isActive = true}) => {\n\n    return (\n        <button onClick={onClick}\n                className={\n                    classNames(isActive\n                            ? \"from-blue-500 to-blue-800\"\n                            : \"hover:shadow-mjol-blue-button hover:ring-1 hover:ring-inset hover:ring-blue-400\"\n                        , \"bg-gradient-to-l from-white to-white rounded-3xl group px-10 py-2 transform duration-200\"\n                    )\n                }\n        >\n            <div>\n                {isActive\n                    ? <div className=\"text-white font-extrabold\">{title}</div>\n                    : <DarkBlueMjolText text={title}/>\n                }\n            </div>\n        </button>\n    );\n};\n\nexport default MjolBlueGradientButton;","import React from 'react';\nimport MjolBlueGradientButton from \"../../../ui/buttons/MjolBlueGradientButton\";\nimport DarkBlueTitle from \"../../../ui/text/DarkBlueTitle\";\nimport BlueShadowContainer from \"../../../ui/shadow/BlueShadowContainer\";\n\nconst ProfileNavigationBar = ({onTabChange, activeTab, tabs}) => {\n\n    const navbar = tabs.map(item =>\n        <MjolBlueGradientButton key={item}\n                                title={item}\n                                isActive={item === activeTab}\n                                onClick={() => onTabChange(item)}\n        />)\n\n    return (\n        <BlueShadowContainer>\n            <div className=\"pb-10 space-y-10\">\n                <DarkBlueTitle title=\"My NFTs\"/>\n                <div className=\"text-center\">\n                    <div className=\"inline-flex flex-col gap-2 sm:flex-row sm:gap-5 md:text-lg\"\n                    >\n                        {navbar}\n                    </div>\n                </div>\n            </div>\n        </BlueShadowContainer>\n    );\n};\n\nexport default ProfileNavigationBar;","import React from 'react';\nimport ProfileNavigationBar from \"./navbar/ProfileNavigationBar\";\n\nconst ProfilePage = ({tabs, activeTab, onTabChange, children}) => {\n    return (\n        <div className=\"bg-mjol-white space-y-8 pb-4 min-h-screen\">\n            <ProfileNavigationBar onTabChange={onTabChange}\n                                  activeTab={activeTab}\n                                  tabs={tabs}/>\n\n            {children}\n        </div>\n    );\n};\n\nexport default ProfilePage;","import React from 'react';\nimport {useAppDispatch, useAppSelector} from \"../../hooks/redux\";\nimport withAccountId from \"../withAccountId\";\nimport {PROFILE_TAB, profileSlice} from \"../../state/profile/slice\";\nimport ProfileHistoryFetch from \"./ProfileHistoryFetch\";\nimport ProfileNftsFetch from \"./ProfileNftsFetch\";\nimport ProfilePage from \"../../components/pages/profile/ProfilePage\";\n\nconst ProfileFetch = ({accountId}) => {\n    const {activeTab, tabs} = useAppSelector(state => state.profile)\n    const dispatch = useAppDispatch()\n\n    const render = (children) =>\n        <ProfilePage tabs={tabs}\n                     activeTab={activeTab}\n                     onTabChange={tab => dispatch(profileSlice.actions.changeTab(tab))}>\n            {children}\n        </ProfilePage>\n\n    switch (activeTab) {\n        case PROFILE_TAB.ALL_NFTS:\n        case PROFILE_TAB.LISTED_NFTS:\n            return render(<ProfileNftsFetch accountId={accountId}/>)\n        case PROFILE_TAB.HISTORY:\n            return render(<ProfileHistoryFetch accountId={accountId}/>)\n    }\n};\n\nexport default withAccountId(ProfileFetch);","import React from 'react';\n\nconst PreviewNftImage = ({link}) => {\n    return (\n        <div className=\"justify-self-center md:justify-self-end w-full max-w-2xl\">\n            <img src={link}\n                 alt=\"media not supported\"\n                 className=\"w-full max-h-xl object-contain\"\n            />\n        </div>\n    );\n};\n\nexport default PreviewNftImage;","import React from 'react';\n\nconst ShareIcon = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"30\" viewBox=\"0 0 24 24\" fill=\"none\"\n             stroke=\"currentColor\"\n             strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"tw-mr-1\" color=\"black\">\n            <circle cx=\"18\" cy=\"5\" r=\"3\"/>\n            <circle cx=\"6\" cy=\"12\" r=\"3\"/>\n            <circle cx=\"18\" cy=\"19\" r=\"3\"/>\n            <line x1=\"8.59\" y1=\"13.51\" x2=\"15.42\" y2=\"17.49\"/>\n            <line x1=\"15.41\" y1=\"6.51\" x2=\"8.59\" y2=\"10.49\"/>\n        </svg>\n    );\n};\n\nexport default ShareIcon;\n","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport ShareIcon from \"../../../ui/icons/ShareIcon\";\n\nconst CollectionLink = ({name, link}) => {\n    return (\n        <div className=\"flex flex-row justify-between\">\n            <div\n                className=\"text-md md:text-lg font-bold text-mjol-purple-dark-t hover:underline text-center\">\n                <Link to={link}>{name}</Link>\n            </div>\n            <ShareIcon/>\n        </div>\n    );\n};\n\nexport default CollectionLink;","import React from 'react';\n\nconst Hr = ({color = \"bg-black\"}) => {\n    return <div className={color + \" h-px\"}/>\n};\n\nexport default Hr;","import {ChevronUpIcon} from '@heroicons/react/solid'\nimport React, {useState} from \"react\";\nimport classNames from \"../../../utils/css-utils\";\nimport Hr from \"../borders/Hr\";\n\nexport default function DropDownMjolBlueButton({buttonContent, children, initialVisible = false}) {\n\n    const [visible, setVisible] = useState(initialVisible)\n\n    return (\n        <div>\n            <button onClick={() => setVisible(!visible)}\n                    className={\n                        classNames(visible\n                                ? \"rounded-t-lg\"\n                                : \"rounded-lg\",\n                            \"group flex justify-between p-5 w-full text-md font-semibold text-left bg-blue-100\"\n                        )\n                    }\n            >\n                {buttonContent}\n                <ChevronUpIcon\n                    className={\n                        classNames(visible\n                                ? \"\"\n                                : \"rotate-180\",\n                            \"transform duration-200 w-6 h-6 text-gray-500 group-hover:text-black\"\n                        )\n                    }\n                />\n            </button>\n            {visible &&\n                <div>\n                    <div className=\"px-2 bg-blue-100\">\n                        <Hr color=\"bg-gray-600\"/>\n                    </div>\n                    {children}\n                </div>\n            }\n        </div>\n    )\n}","import React from 'react';\n\nconst NftPreviewTitle = ({title}) => {\n    return (\n        <div className=\"font-extrabold text-mjol-purple-dark text-lg md:text-xl\">\n            {title}\n        </div>\n    );\n};\n\nexport default NftPreviewTitle;","export enum ItemMarketStatus {\n    // Item is owned by current user and listed on transaction.\n    LISTED = \"LISTED\",\n\n    // Item is owned by current user and not listed on transaction.\n    CAN_SELL = \"CAN_SELL\",\n\n    // Item is owned by another user and listed on transaction\n    CAN_BUY = \"CAN_BUY\",\n\n    // Item is owned by another user and not listed on transaction.\n    FREE = \"FREE\"\n}\n\n\nexport interface TransactionStatus {\n    pending: boolean | undefined,\n    success: boolean | undefined\n}","import React from 'react';\nimport {shortenString} from \"../../../../utils/string\";\nimport ReactTooltip from 'react-tooltip';\n\nconst PreviewAttribute = ({name, value}) => {\n    let shrinkValue = shortenString(value)\n    return (\n        <div className=\"flex flex-row justify-between\">\n            <div className=\"font-semibold\">{name}</div>\n            <p className=\"cursor-pointer\"\n               data-tip={value}\n               onClick={() => navigator.clipboard.writeText(value)}\n            >\n                {shrinkValue}\n            </p>\n            <ReactTooltip className='text-sm' type='dark' place='bottom' delayShow={200}/>\n        </div>\n    );\n};\n\nexport default PreviewAttribute;","export const shortenString = (string, chunkSize = 5, sizeToSplit = 15) => {\n    if (string.length > sizeToSplit) {\n        return string.slice(0, chunkSize) + '..' + string.slice(-chunkSize)\n    }\n    return string\n}\n","import React from 'react';\nimport PreviewAttribute from \"./PreviewAttribute\";\n\nconst PreviewAttributes = ({attributes}) => {\n    return (\n        <div>\n            {attributes.length === 0\n                ? <div>Not found</div>\n                : attributes.map(attribute =>\n                    <PreviewAttribute key={attribute.name}\n                                      name={attribute.name}\n                                      value={attribute.value}\n                    />\n                )}\n        </div>\n    );\n};\n\nexport default PreviewAttributes;","import React from 'react';\n\nconst IconText = ({icon, text}) => {\n    return (\n        <div className=\"gap-2 flex flex-row items-center\">\n            {icon}\n            {text}\n        </div>\n    );\n};\n\nexport default IconText;","import CollectionLink from \"./CollectionLink\";\nimport DropDownMjolBlueButton from \"../../../ui/buttons/DropDownMjolBlueButton\";\nimport NftPreviewTitle from \"./NftPreviewTitle\";\nimport PreviewAttributes from \"../attributes/PreviewAttributes\";\nimport IconText from \"../../../ui/icons/IconText\";\nimport {BsList} from 'react-icons/bs';\nimport {MdAccountBalanceWallet as MdAcc} from 'react-icons/md'\nimport {GrMoney} from 'react-icons/gr'\nimport {GiBuyCard} from 'react-icons/gi'\nimport {BiDna} from 'react-icons/bi'\n\n\nconst NftPreviewInfo = ({nft, payouts, statusElement}) => {\n\n    const ownerAttributes = [\n        {name: \"Owner ID\", value: nft.ownerId || \"Not found\"},\n        {name: \"Token ID\", value: nft.tokenId || \"Not found\"},\n        {name: \"Contract\", value: nft.contractId || \"Not found\"}\n    ]\n\n    const tabs = [\n        {name: \"Description\", element: nft.description || \"Not found\", icon: <BsList/>},\n        {name: \"Attributes\", element: <PreviewAttributes attributes={ownerAttributes}/>, icon: <MdAcc/>},\n        {name: \"Royalties\", element: <PreviewAttributes attributes={payouts}/>, icon: <GrMoney/>},\n        {name: \"History\", element: \"Not found\", icon: <GiBuyCard/>},\n        {name: \"Traits\", element: \"Not found\", icon: <BiDna/>}\n    ]\n\n\n    return (\n        <div className=\"space-y-5 md:max-w-xl\">\n            <div>\n                <NftPreviewTitle title={nft.title}/>\n                <CollectionLink name=\"MOCK\" link=\"\"/>\n            </div>\n            {statusElement}\n            <div className=\"space-y-3\">\n                {tabs.map(tab => (\n                    <DropDownMjolBlueButton key={tab.name}\n                                            buttonContent={\n                                                <IconText icon={tab.icon}\n                                                          text={tab.name}\n                                                />\n                                            }>\n                        <div className=\"rounded-b-lg w-full bg-blue-100 text-black font-medium text-sm px-5 py-2\">\n                            {tab.element}\n                        </div>\n                    </DropDownMjolBlueButton>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default NftPreviewInfo;","import React from 'react';\n\nimport PreviewNftImage from \"../../../nft-item/preview/image/PreviewNftImage\";\nimport NftPreviewInfo from \"../../../nft-item/preview/details/NftPreviewInfo\";\n\nconst PreviewNftPage = ({nft, payouts, statusElement}) => {\n    return (\n        <div className=\"grid md:grid-cols-2 gap-8 min-h-screen bg-mjol-white p-5 xs:p-10 md:items-start\">\n            <PreviewNftImage link={nft.mediaURL}/>\n            <NftPreviewInfo nft={nft}\n                            payouts={payouts}\n                            statusElement={statusElement}\n            />\n        </div>\n    );\n};\n\nexport default PreviewNftPage;","import {NFT} from \"../../../business-logic/models/nft\";\nimport {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\n\nexport interface PreviewNftState {\n    nft: NFT | null,\n    payouts: Array<any>,\n    fetching: boolean,\n    success: boolean | undefined\n}\n\n\nconst initialState: PreviewNftState = {\n    nft: null,\n    payouts: [],\n    fetching: true,\n    success: undefined,\n}\n\nexport const previewNftSlice = createSlice({\n    name: \"preview-nft\",\n    initialState,\n    reducers: {\n        startFetching: (state) => {\n            state.fetching = true\n        },\n        success: (state, action: PayloadAction<NFT | null>) => {\n            if (action.payload) {\n                state.nft = action.payload\n                state.success = true\n            } else {\n                state.success = false\n            }\n            state.fetching = false\n        },\n        fetchPayouts: (state, action) => {\n            state.payouts = Object.entries(action.payload).map(kv => {\n                const [name, royalty] = kv\n                return {name, value: `${royalty}%`}\n            })\n        },\n        failure: (state) => {\n            state.nft = null\n            state.success = false\n            state.fetching = false\n        },\n        reset: () => initialState\n    }\n})\n\nexport const previewNftReducer = previewNftSlice.reducer","import React from 'react';\nimport DarkBlueMjolText from \"../../../ui/text/DarkBlueMjolText\";\nimport NearSVG from \"../../../ui/icons/near/NearSVG\";\n\nconst PreviewNftPrice = ({price}) => {\n    return (\n        <div className=\"flex items-center text-xl\">\n            <DarkBlueMjolText text={price}/>\n            <NearSVG/>\n        </div>\n    );\n};\n\nexport default PreviewNftPrice;","import React from 'react';\nimport PreviewNftPrice from \"../../../details/price/PreviewNftPrice\";\n\nconst withPriceContainer = (Component) => ({price, ...props}) => {\n    return (\n        <div className=\"rounded-lg px-5 py-2 space-y-2 bg-blue-100\">\n            <PreviewNftPrice price={price}/>\n            <Component {...props}/>\n        </div>\n    );\n};\n\nexport default withPriceContainer;","import React from 'react';\n\nconst DarkBlueGradientButton = ({title, ...props}) => {\n    return (\n        <button {...props}\n                className=\"w-full text-white font-extrabold\n                           bg-gradient-to-l from-blue-500 to-blue-800 rounded-lg px-10 py-2\n                           hover:from-blue-600\n                           hover:to-blue-800\n                           hover:shadow-mjol-gray-xs\"\n        >\n            {title}\n        </button>\n    )\n}\n\nexport default DarkBlueGradientButton;","import React from 'react';\nimport withPriceContainer from \"./withPriceContainer\";\nimport DarkBlueGradientButton from \"../../../../ui/buttons/DarkBlueGradientButton\";\n\nconst BuyNftContainer = (props) => {\n    return <DarkBlueGradientButton title=\"Buy NFT\" {...props}/>;\n};\n\nexport default withPriceContainer(BuyNftContainer);","import {TransactionStatus} from \"../state\";\nimport {createSlice} from \"@reduxjs/toolkit\";\n\nconst initialState: TransactionStatus = {\n    pending: undefined,\n    success: undefined\n}\n\nexport const marketNftTransactionSlice = createSlice({\n    name: 'market-nft-transaction',\n    initialState,\n    reducers: {\n        commit: (state) => {\n            state.pending = true\n        },\n        success: (state) => {\n            state.success = true\n            state.pending = false\n        },\n        failure: (state) => {\n            state.success = false\n            state.pending = false\n        },\n        reset: () => initialState\n    }\n})\n\nexport const marketNftTransactionReducer = marketNftTransactionSlice.reducer","import {config, wallet, contract} from \"../../setup/near\";\nimport {utils} from \"near-api-js\";\nimport {GAS, SM_DEPOSIT, YOCTO_NEAR} from \"../../constants\";\n\n\nexport async function giveApprove(contractId, tokenId, price) {\n    const nearAmount = utils.format.parseNearAmount(price.toString());\n    return await wallet.account().functionCall(\n        contractId,\n        'nft_approve',\n        {\n            token_id: tokenId,\n            account_id: config.contractName,\n            msg: JSON.stringify({price: nearAmount})\n        },\n        GAS,\n        SM_DEPOSIT\n    )\n}\n\nexport async function buyNftWithPayouts(contractId, tokenId, price) {\n    const nearAmount = utils.format.parseNearAmount(price);\n    return await contract.buy_with_payouts(\n        {\n            nft_contract_id: contractId,\n            token_id: tokenId\n        },\n        GAS,\n        nearAmount\n    )\n}\n\nexport async function unlistNFT(contractId, tokenId) {\n    return await contract.remove_from_market(\n        {\n            nft_contract_id: contractId,\n            token_id: tokenId\n        },\n        GAS,\n        YOCTO_NEAR\n    )\n}","import {AppDispatch} from \"../../store\";\nimport {marketNftTransactionSlice} from \"./slice\";\nimport {buyNftWithPayouts, giveApprove, unlistNFT} from \"../../../business-logic/near2/near/api/market/transaction\";\n\nexport const sellNft = (contractId: string, tokenId: string, price: string) =>\n    async (dispatch: AppDispatch) => {\n        dispatch(marketNftTransactionSlice.actions.commit())\n        giveApprove(contractId, tokenId, price)\n            .then(() => dispatch(marketNftTransactionSlice.actions.success()))\n            .catch(() => dispatch(marketNftTransactionSlice.actions.failure()))\n    }\n\nexport const buyNft = (contractId: string, tokenId: string, price: string) =>\n    async (dispatch: AppDispatch) => {\n        dispatch(marketNftTransactionSlice.actions.commit())\n        buyNftWithPayouts(contractId, tokenId, price)\n            .then(() => dispatch(marketNftTransactionSlice.actions.success()))\n            .catch(() => dispatch(marketNftTransactionSlice.actions.failure()))\n    }\n\n\nexport const unlistNft = (contractId: string, tokenId: string) =>\n    async (dispatch: AppDispatch) => {\n        dispatch(marketNftTransactionSlice.actions.commit())\n        unlistNFT(contractId, tokenId)\n            .then(() => dispatch(marketNftTransactionSlice.actions.success()))\n            .catch(() => dispatch(marketNftTransactionSlice.actions.failure()))\n    }\n","import React from 'react';\n\nconst MjolGreenBlueButton = ({children, ...props}) => {\n    return (\n        <button {...props} className=\"px-4 py-2 rounded-lg w-full\n                           bg-gradient-to-r from-mjol-blue-base to-green-200\n                           text-gray-900 text-mono font-semibold\n                           text-md md:text-lg\n                           hover:to-mjol-blue-base hover:from-green-200\n                           \">\n            {children}\n        </button>\n    );\n};\n\nexport default MjolGreenBlueButton;","import React, {useState} from 'react';\nimport MjolGreenBlueButton from \"../buttons/MjolGreenBlueButton\";\n\nconst InputPriceModal = ({hidden, setVisible, onClick}) => {\n\n    const [price, setPrice] = useState('')\n\n    return (\n        <div>\n            {hidden\n                ? <></>\n                : <div className=\"fixed inset-0 bg-gray-600 bg-opacity-90 overflow-y-auto\n                                   h-full w-full grid place-items-center\"\n                >\n                    <div className=\"w-1/2 grid grid-rows-2 gap-4 px-2 py-4 rounded-lg bg-mjol-white\">\n                        <input className=\"rounded-lg p-2\"\n                               type=\"number\"\n                               placeholder=\"Price you want your NFT to be sold\"\n                               value={price}\n                               onChange={e => setPrice(e.target.value)}\n                        />\n                        <MjolGreenBlueButton onClick={() => onClick(price)}>\n                            Sell\n                        </MjolGreenBlueButton>\n                        <MjolGreenBlueButton onClick={() => setVisible(false)}>\n                            Close popup\n                        </MjolGreenBlueButton>\n                    </div>\n                </div>\n            }\n        </div>\n    );\n};\n\nexport default InputPriceModal;","import React, {useState} from 'react';\nimport InputPriceModal from \"../../../../ui/modal/InputPriceModal\";\nimport DarkBlueGradientButton from \"../../../../ui/buttons/DarkBlueGradientButton\";\n\nconst SellNftContainer = ({onClick}) => {\n\n    const [visible, setVisible] = useState(false)\n\n    return (\n        <div>\n            <DarkBlueGradientButton title=\"Sell NFT\" onClick={() => setVisible(true)}/>\n            <InputPriceModal hidden={!visible} setVisible={setVisible} onClick={onClick}/>\n        </div>\n    );\n};\n\nexport default SellNftContainer;","import React from 'react';\nimport withPriceContainer from \"./withPriceContainer\";\nimport DarkBlueGradientButton from \"../../../../ui/buttons/DarkBlueGradientButton\";\n\nconst UnlistNftContainer = (props) => {\n    return <DarkBlueGradientButton title=\"Unlist NFT\" {...props}/>;\n};\n\nexport default withPriceContainer(UnlistNftContainer);","import React from 'react';\n\nconst NotListedNftContainer = () => {\n    return (\n        <div className=\"text-center rounded-2xl bg-gray-900 p-2 font-medium text-md md:text-lg text-blue-100\">\n            Nft not listed on market\n        </div>\n    );\n};\n\nexport default NotListedNftContainer;","import React from 'react';\nimport {useAppDispatch} from \"../../../hooks/redux\";\nimport {ItemMarketStatus} from \"../../../state/transaction/state\";\nimport BuyNftContainer from \"../../../components/nft-item/preview/status/actions/BuyNftContainer\";\nimport {useNftMarketStatus} from \"../../../hooks/useNftMarketStatus\";\nimport {buyNft, sellNft, unlistNft} from \"../../../state/transaction/nft/thunk\";\nimport SellNftContainer from \"../../../components/nft-item/preview/status/actions/SellNftContainer\";\nimport UnlistNftContainer from \"../../../components/nft-item/preview/status/actions/UnlistNftContainer\";\nimport NotListedNftContainer from \"../../../components/nft-item/preview/status/NotListedNftContainer\";\nimport {NFT} from \"../../../business-logic/models/nft\";\n\ninterface PropTypes {\n    accountId: string,\n    nft: NFT\n}\n\nconst NftStatusHoc: React.FC<PropTypes> = ({accountId, nft}) => {\n    const status = useNftMarketStatus(accountId, nft)\n    const dispatch = useAppDispatch()\n\n    const buy = () => {\n        dispatch(buyNft(nft.contractId, nft.tokenId, nft.price || ''))\n    }\n\n    const sell = (price: string) => {\n        dispatch(sellNft(nft.contractId, nft.tokenId, price))\n    }\n\n    const unlist = () => {\n        dispatch(unlistNft(nft.contractId, nft.tokenId))\n    }\n\n    switch (status) {\n        case ItemMarketStatus.CAN_BUY:\n            return <BuyNftContainer price={nft.price} onClick={buy}/>\n        case ItemMarketStatus.CAN_SELL:\n            return <SellNftContainer onClick={sell}/>\n        case ItemMarketStatus.LISTED:\n            return <UnlistNftContainer price={nft.price} onClick={unlist}/>\n        case ItemMarketStatus.FREE:\n            return <NotListedNftContainer/>\n\n    }\n};\n\nexport default NftStatusHoc;","import {NFT} from \"../business-logic/models/nft\";\nimport {ItemMarketStatus} from \"../state/transaction/state\";\n\nexport const useNftMarketStatus = (accountId: string, nft: NFT): ItemMarketStatus => {\n\n    const isListed = nft.isListed()\n\n    return (accountId === nft.ownerId) ?\n        isListed\n            ? ItemMarketStatus.LISTED\n            : ItemMarketStatus.CAN_SELL\n        : isListed\n            ? ItemMarketStatus.CAN_BUY\n            : ItemMarketStatus.FREE\n}","import React, {useEffect} from 'react';\nimport PreviewNftPage from \"../../../components/pages/preview/nft/PreviewNftPage\";\nimport {useAppDispatch, useAppSelector} from \"../../../hooks/redux\";\nimport {fetchNft} from \"../../../state/preview/nft/thunk\";\nimport withAccountId from \"../../withAccountId\";\nimport RoundLoader from \"../../../components/ui/loaders/RoundLoader\";\nimport NotFoundPage from \"../../../components/pages/not-found/NotFoundPage\";\nimport {previewNftSlice} from \"../../../state/preview/nft/slice\";\nimport {useParams} from \"react-router\";\nimport NftStatusHoc from \"./NftStatusHoc\";\n\ninterface PropTypes {\n    accountId: string\n}\n\ntype ParamTypes = {\n    contractId: string,\n    tokenId: string\n}\n\nconst PreviewNftPageHoc: React.FC<PropTypes> = ({accountId}) => {\n    const {contractId, tokenId} = useParams<ParamTypes>()\n    const {nft, success, fetching, payouts} = useAppSelector(state => state.preview.nft)\n    const dispatch = useAppDispatch()\n\n    useEffect((): any => {\n        dispatch(fetchNft(accountId, contractId, tokenId))\n        return () => dispatch(previewNftSlice.actions.reset())\n    }, [accountId])\n\n    if (fetching) {\n        return <RoundLoader/>\n    }\n\n\n    if (!success || !nft) {\n        return <NotFoundPage/>\n    }\n\n    return (\n        <PreviewNftPage nft={nft}\n                        payouts={payouts}\n                        statusElement={\n                            <NftStatusHoc nft={nft}\n                                          accountId={accountId}\n                            />\n                        }\n        />)\n};\n\nexport default withAccountId(PreviewNftPageHoc);\n","import {AppDispatch} from \"../../store\";\nimport {previewNftSlice} from \"./slice\";\nimport {getNftPayouts, getNFTsByContractAndTokenId} from \"../../../business-logic/near/get-nfts\";\n\nexport const fetchNft = (accountId?: string, contractId?: string, tokenId?: string) =>\n    async (dispatch: AppDispatch) => {\n        dispatch(previewNftSlice.actions.startFetching())\n        getNFTsByContractAndTokenId(accountId, contractId, tokenId)\n            .then(nft => {\n                //console.log(nft)\n                dispatch(previewNftSlice.actions.success(nft))\n            })\n            .catch(() => {\n                console.log(\"Nft loading error\")\n                dispatch(previewNftSlice.actions.failure())\n            })\n\n        getNftPayouts(accountId, contractId, tokenId)\n            .then(payouts => dispatch(previewNftSlice.actions.fetchPayouts(payouts)))\n            .catch(() => console.log(\"Payouts not found\"))\n    }","import React, {useEffect} from 'react';\nimport {Navigate} from 'react-router-dom'\n\nconst Logout = ({logout}) => {\n\n    useEffect(logout, [])\n\n    return <Navigate to=\"/\"/>\n};\n\nexport default Logout;","import React from 'react';\nimport {FaSearch} from 'react-icons/fa'\n\nconst SearchInput = ({placeholder, isTyping, onCancel, onSearch}) => {\n    return (\n        <div className=\"flex text-xs xs:text-md\">\n            <input className=\"rounded-l-3xl w-full sm:w-88\n                              focus:outline-0 outline-none py-2 px-5 ring-1 ring-inset ring-blue-100\"\n                   placeholder={placeholder}\n                   type=\"search\"\n            />\n            <div className=\"rounded-r-3xl px-5 bg-gradient-to-b from-blue-400 to-blue-900 grid place-items-center cursor-pointer\">\n                <FaSearch color=\"white\"/>\n            </div>\n        </div>\n    );\n};\n\nexport default SearchInput;","import React from 'react';\nimport BlueShadowContainer from \"../../../ui/shadow/BlueShadowContainer\";\nimport DarkBlueTitle from \"../../../ui/text/DarkBlueTitle\";\nimport SearchInput from \"../../../filters/search/SearchInput\";\nimport ToggleFilter from \"../../../filters/toggle/ToggleFilter\";\n\nconst NftFilters = () => {\n    return (\n        <BlueShadowContainer>\n            <div className=\"pb-10 px-4 space-y-8\">\n                <DarkBlueTitle title=\"Explore NFTs\"/>\n                <div className=\"flex justify-center\">\n                    <SearchInput placeholder=\"Search by NFT name\"/>\n                </div>\n            </div>\n        </BlueShadowContainer>\n    );\n};\n\nexport default NftFilters;","import React from 'react';\nimport NftFilters from \"./NftFilters\";\nimport NftsGrid from \"../../../nft-collection/NftsGrid\";\n\nconst ExploreNftPage = ({nfts, fetching}) => {\n    return (\n        <div className=\"space-y-6\">\n            <NftFilters/>\n            <NftsGrid nfts={nfts} fetching={fetching}/>\n        </div>\n    );\n};\n\nexport default ExploreNftPage;","import {NFT} from \"../../../business-logic/models/nft\";\nimport {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\n\nexport interface ExploreNftsState {\n    nfts: Array<NFT>,\n    fetching: boolean,\n    success: boolean | undefined\n}\n\nconst initialState: ExploreNftsState = {\n    nfts: [],\n    fetching: true,\n    success: undefined\n}\n\nexport const exploreNftsSlice = createSlice({\n    name: \"explore-nfts\",\n    initialState,\n    reducers: {\n        addNft: (state, action: PayloadAction<NFT | null>) => {\n            if (action.payload) {\n                state.nfts.push(action.payload)\n            }\n        },\n        startFetching: (state) => {\n            state.fetching = true\n        },\n        success: (state) => {\n            state.success = true\n            state.fetching = false\n        },\n        failure: (state) => {\n            state.success = false\n            state.fetching = false\n        },\n        reset: () => initialState\n    }\n})\n\nexport const exploreNftsReducer = exploreNftsSlice.reducer;","import React, {useEffect} from 'react';\nimport ExploreNftsPage from \"../../../components/pages/explore/nft/ExploreNftPage\";\nimport {useAppDispatch, useAppSelector} from \"../../../hooks/redux\";\n\nimport {exploreNftsSlice} from \"../../../state/explore/nfts/slice\";\nimport {fetchMarketNfts} from \"../../../state/explore/nfts/thunk\";\n\nconst ExploreNftsPageHoc = () => {\n\n    const {nfts, fetching} = useAppSelector(state => state.explore.nfts)\n    const dispatch = useAppDispatch()\n\n    useEffect(() => {\n        dispatch(fetchMarketNfts('mainnet.near'))\n        return () => dispatch(exploreNftsSlice.actions.reset())\n    }, [])\n\n    return <ExploreNftsPage nfts={nfts} fetching={fetching}/>\n};\n\nexport default ExploreNftsPageHoc;","import {AppDispatch} from \"../../store\";\nimport {exploreNftsSlice} from \"./slice\";\nimport {getMarketNfts} from \"../../../business-logic/near/get-nfts-market\";\n\nexport const fetchMarketNfts = (accountId: number, from: number, limit: number) =>\n    async (dispatch: AppDispatch) => {\n        dispatch(exploreNftsSlice.actions.startFetching())\n        getMarketNfts(accountId, from, limit)\n            .then(nfts => {\n                    nfts.map(nftPromise =>\n                        nftPromise\n                            .then(nft => dispatch(exploreNftsSlice.actions.addNft(nft)))\n                            .catch(() => console.log('NFT not found'))\n                    )\n                    dispatch(exploreNftsSlice.actions.success())\n                }\n            )\n            .catch(() => dispatch(exploreNftsSlice.actions.failure()))\n            .finally(() => dispatch(exploreNftsSlice.actions.success()))\n    }","import React from 'react';\nimport {Route, Routes} from \"react-router\";\nimport LandingPage from \"../components/pages/landing/LandingPage\";\nimport NotFoundPage from \"../components/pages/not-found/NotFoundPage\";\nimport CreateCollectionPage from \"../components/pages/create/collection/CreateCollectionPage\";\nimport CreateNftPage from \"../components/pages/create/nft/CreateNftPage\";\nimport ExploreCollectionsPage from \"../components/pages/explore/collection/ExploreCollectionsPage\";\nimport ProfilePageHoc from \"../hoc/profile/ProfilePageHoc\";\nimport PreviewNftHoc from \"../hoc/preview/nft/PreviewNftPageHoc\";\nimport Logout from \"../hoc/auth/Logout\";\nimport ExploreNftsPageHoc from \"../hoc/explore/nft/ExploreNftsPageHoc\";\nimport {signOut} from \"../business-logic/near2/near/setup/near\";\n\n\nconst AppRouter = () => {\n    return (\n        <Routes>\n            <Route path=\"/\" exact element={<LandingPage/>} key=\"1\"/>\n            <Route path=\"/logout\" exact element={<Logout logout={signOut}/>}/>\n            <Route path=\"/nfts\" exact element={<ExploreNftsPageHoc/>} key=\"2\"/>\n            <Route path=\"/nft/:contractId/:tokenId\" exact element={<PreviewNftHoc/>} key=\"30\"/>\n            <Route path=\"/collections\" element={<ExploreCollectionsPage/>} key=\"3\"/>\n            <Route path=\"/create-nft\" element={<CreateNftPage/>} key=\"4\"/>\n            <Route path=\"/create-collection\" element={<CreateCollectionPage/>} key=\"5\"/>\n            <Route path=\"/profile/nfts\" element={<ProfilePageHoc/>} key=\"6\"/>\n            {/*<Route path=\"/profile-collection\" element={<ProfileNftCollectionsPage/>} key=\"11\"/>*/}\n            <Route path=\"*\" element={<NotFoundPage/>} key=\"12\"/>\n        </Routes>\n    );\n};\n\nexport default AppRouter;\n\n\n\n","import {Popover} from \"@headlessui/react\";\nimport {MenuIcon, XIcon} from \"@heroicons/react/outline\";\nimport React from \"react\";\nimport classNames from \"../../../utils/css-utils\";\nimport {ChevronDownIcon} from \"@heroicons/react/solid\";\n\nexport const CloseMenuButton = () => {\n    return (\n        <Popover.Button\n            className=\"bg-white rounded-md p-2 inline-flex nfts-center justify-center text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500\">\n            <span className=\"sr-only\">Close menu</span>\n            <XIcon className=\"h-6 w-6\" aria-hidden=\"true\"/>\n        </Popover.Button>\n    );\n};\n\nexport const DropDownButton = ({isOpen, tabName}) => {\n    return (\n        <Popover.Button\n            className={classNames(\n                isOpen ? 'text-gray-900' : 'text-cyan-700',\n                'group bg-light_white rounded-md inline-flex items-center ' +\n                'text-lg font-extrabold hover:text-gray-900 focus:outline-none ' +\n                'focus:bg-light_white'\n            )}\n        >\n            {tabName}\n            <ChevronDownIcon\n                className={classNames(\n                    isOpen ? 'text-gray-900' : 'text-cyan-700',\n                    'ml-2 h-5 w-5 group-hover:text-gray-900'\n                )}\n                aria-hidden=\"true\"\n            />\n        </Popover.Button>\n    );\n};\n\nexport const MenuButton = () => {\n    return (\n        <Popover.Button\n            className=\"bg-white rounded-md p-2 inline-flex nfts-center justify-center text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500\">\n            <span className=\"sr-only\">Open menu</span>\n            <MenuIcon className=\"h-6 w-6\" aria-hidden=\"true\"/>\n        </Popover.Button>\n    );\n};\n","import {Popover, Transition} from \"@headlessui/react\";\nimport {DropDownButton} from \"../../../ui/navbar/buttons\";\nimport React, {Fragment} from \"react\";\nimport classNames from \"../../../../utils/css-utils\";\nimport {Link} from \"react-router-dom\";\n\nexport const TabsDropDownMenu = ({name, tabs, isProfile}) => {\n    return (\n        <Popover className=\"relative\">\n            {({isOpen}) => (\n                <div key={name}>\n                    <DropDownButton isOpen={isOpen} tabName={name}/>\n                    <Transition\n                        as={Fragment}\n                        enter=\"transition ease-out duration-200\"\n                        enterFrom=\"opacity-0 translate-y-1\"\n                        enterTo=\"opacity-100 translate-y-0\"\n                        leave=\"transition ease-in duration-150\"\n                        leaveFrom=\"opacity-100 translate-y-0\"\n                        leaveTo=\"opacity-0 translate-y-1\"\n                    >\n                        <Popover.Panel\n                            className={classNames(\n                                isProfile ? '-ml-20' : '-ml-4',\n                                \"absolute z-10 -ml-4 mt-3 transform px-2\"\n                            )}>\n                            <div className=\"rounded-lg shadow-lg ring-1 ring-black ring-opacity-5 overflow-hidden\">\n                                <div className=\"relative grid gap-6 bg-white px-5 py-6 sm:gap-8 sm:p-8\">\n                                    {tabs.map(({path, name}) => (\n                                        <Link key={name} to={path}>\n                                            <div\n                                                className=\"cursor-pointer -m-3 p-3 flex items-start rounded-lg hover:bg-gray-100\"\n                                            >\n                                                <p className=\"text-medium font-medium text-gray-900\">{name}</p>\n                                            </div>\n                                        </Link>\n                                    ))}\n                                </div>\n                            </div>\n                        </Popover.Panel>\n                    </Transition>\n                </div>\n            )}\n        </Popover>\n    )\n}","export default __webpack_public_path__ + \"static/media/hammer.743d332f.png\";","export default __webpack_public_path__ + \"static/media/label6.5b6747ff.png\";","import React, {Fragment} from 'react'\nimport {Popover, Transition} from '@headlessui/react'\nimport classNames from \"../../../utils/css-utils\";\nimport {CloseMenuButton, MenuButton} from \"../../ui/navbar/buttons\";\nimport {Link} from \"react-router-dom\";\nimport {TabsDropDownMenu} from \"./menu/TabDropDownMenu\";\nimport imgLogo from \"../../../resources/hammer.png\"\nimport imgLabel from \"../../../resources/label6.png\"\nimport {signIn, wallet} from \"../../../business-logic/near2/near/setup/near\";\n\n\nfunction SmallNavBar({tabs}) {\n    return (\n        <div className=\"grid grid-cols-2 gap-y-4 gap-x-8\">\n            {tabs.map(({path, name}) => (\n                <>\n                    {name === \"Launchpad\" || name === \"Docs\" ? (\n                        <div\n                            className=\"cursor-not-allowed text-base font-medium text-gray-900 hover:text-gray-500\">\n                            {name}\n                        </div>\n                    ) : (\n                        <Link to={path} key={name}>\n                            <div\n                                className=\"cursor-pointer text-base font-medium text-gray-900 hover:text-gray-500\">\n                                {name}\n                            </div>\n                        </Link>\n                    )}\n                </>\n            ))}\n        </div>\n    )\n}\n\nexport default function Navbar({tabs}) {\n    const exploreTabs = tabs.explore\n    const createTabs = tabs.create\n    const profileTabs = tabs.profile\n    const singleTabs = tabs.single\n\n    return (\n        <Popover className=\"bg-light_white\">\n            <div className=\"max-w-7xl mx-auto px-4 sm:px-6\">\n                <div\n                    className=\"flex justify-between items-center border-b-2 border-gray-200 py-6 md:justify-start md:space-x-10\">\n                    <div className=\"flex justify-start lg:w-0 lg:flex-1\">\n                        <Link to=\"/\">\n                            <img\n                                className=\"inline-block h-8 w-auto sm:h-10\"\n                                src={imgLogo}\n                                alt=\"\"\n                            />\n                            <img\n                                className=\"inline-block h-8 w-auto sm:h-10\"\n                                src={imgLabel}\n                                alt=\"\"\n                            />\n                        </Link>\n                    </div>\n                    <div className=\"-mr-2 -my-2 md:hidden\">\n                        <MenuButton/>\n                    </div>\n                    <Popover.Group as=\"nav\" className=\"hidden md:flex space-x-10\">\n                        <TabsDropDownMenu key=\"Explore\" name=\"Explore\" tabs={exploreTabs} isProfile={false}/>\n                        <TabsDropDownMenu key=\"Create\" name=\"Create\" tabs={createTabs} isProfile={false}/>\n                        {singleTabs.map(({name, path}) => (\n                            <div\n                                className={classNames(\n                                    name === \"Launchpad\" || name === \"Docs\" ? 'cursor-not-allowed' : 'cursor-pointer',\n                                    \"text-lg font-extrabold text-cyan-700 hover:text-gray-900\"\n                                )}>\n                                {name}\n                            </div>\n                        ))}\n                    </Popover.Group>\n                    {wallet.isSignedIn() ? (\n                        <div className=\"hidden md:flex items-center justify-end md:flex-1 lg:w-0\">\n                            <TabsDropDownMenu name=\"Profile\" tabs={profileTabs} isProfile={true}/>\n                        </div>\n                    ) : (\n                        <div className=\"hidden md:flex items-center justify-end md:flex-1 lg:w-0\">\n                            <Link to=\"/\"\n                                  onClick={signIn}\n                                  className=\"inline-flex justify-center py-1.5 px-4 font-bold text-lg font-large rounded-md text-white bg-gradient-to-br from-mjol-blue-base to-green-200 hover:from-green-200 hover:to-mjol-blue-base\"\n                            >\n                                Sign in\n                            </Link>\n                        </div>\n                    )}\n                </div>\n            </div>\n\n            <Transition\n                as={Fragment}\n                enter=\"duration-200 ease-out\"\n                enterFrom=\"opacity-0 scale-95\"\n                enterTo=\"opacity-100 scale-100\"\n                leave=\"duration-100 ease-in\"\n                leaveFrom=\"opacity-100 scale-100\"\n                leaveTo=\"opacity-0 scale-95\"\n            >\n                <Popover.Panel focus\n                               className=\"absolute top-0 inset-x-0 p-2 transition transform origin-top-right md:hidden\">\n                    <div\n                        className=\"rounded-lg shadow-lg ring-1 ring-black ring-opacity-5 bg-white divide-y-2 divide-gray-50\">\n                        <div className=\"pt-5 pb-6 px-5\">\n                            <div className=\"flex items-center justify-between\">\n                                <div>\n                                    <Link to=\"/\">\n                                        <img\n                                            className=\"h-8 w-auto\"\n                                            src={imgLogo}\n                                            alt=\"logo\"/>\n                                    </Link>\n                                </div>\n                                <div className=\"-mr-2\">\n                                    <CloseMenuButton/>\n                                </div>\n                            </div>\n                        </div>\n                        <div key=\"Explore\" className=\"py-6 px-5 space-y-6\">\n                            <div className=\"text-cyan-700\">Explore:</div>\n                            <SmallNavBar tabs={exploreTabs}/>\n                        </div>\n                        <div key=\"Create\" className=\"py-6 px-5 space-y-6\">\n                            <div className=\"text-cyan-700\">Create:</div>\n                            <SmallNavBar tabs={createTabs}/>\n                        </div>\n                        <div className=\"py-6 px-5 space-y-6\">\n                            <SmallNavBar tabs={singleTabs}/>\n                            {wallet.isSignedIn() ? (\n                                <>\n                                    <div className=\"grid grid-cols-2 gap-y-4 gap-x-8\">\n                                        {profileTabs.filter(item => item.name !== 'Sign out').map(({name, path}) => (\n                                            <Link to={path} key={name}>\n                                                <div\n                                                    className=\"cursor-pointer text-base font-medium text-gray-900 hover:text-gray-500\"\n                                                >\n                                                    {name}\n                                                </div>\n                                            </Link>\n                                        ))}\n                                        <Link to=\"/signOut\"\n                                              className=\"cursor-pointer col-span-2 text-center font-medium text-gray-500 hover:text-gray-700\"\n                                        >\n                                            Log out\n                                        </Link>\n                                    </div>\n                                </>\n                            ) : (\n                                <div>\n                                    <Link to=\"/\"\n                                          onClick={signIn}\n                                          className=\"cursor-pointer w-full py-2 flex items-center justify-center font-bold text-lg font-large rounded-md text-white bg-gradient-to-br from-mjol-blue-base to-green-200 hover:from-green-200 hover:to-mjol-blue-base\"\n                                    >\n                                        Sign in\n                                    </Link>\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                </Popover.Panel>\n            </Transition>\n        </Popover>\n    )\n}","import Navbar from \"./Navbar\";\n\nimport React from 'react';\nimport {useAppSelector} from \"../../../hooks/redux\";\n\nconst NavbarContainer = () => {\n    const tabs = useAppSelector(state => state.navbar.tabs)\n\n    return <Navbar tabs={tabs}/>;\n};\n\nexport default NavbarContainer;","import React from 'react'\nimport AppRouter from \"./AppRouter\";\nimport NavbarContainer from \"../components/pages/navbar/NavbarContainer\";\n\nexport default function App() {\n    return (\n        <div>\n            <NavbarContainer/>\n            <AppRouter/>\n            {/*<FooterPage/>*/}\n        </div>\n    )\n}","import {combineReducers} from \"redux\";\nimport {previewNftReducer} from \"./nft/slice\";\n\nexport const previewReducer = combineReducers({\n    nft: previewNftReducer\n})","import {createSlice} from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    tabs: {\n        explore: [\n            {name: 'NFTs', path: '/nfts'},\n            {name: 'Collections', path: '/collections'},\n        ],\n        create: [\n            {name: 'NFT', path: '/create-nft'},\n            {name: 'Collection', path: '/create-collection'}\n        ],\n        profile: [\n            {name: 'My NFTs', path: '/profile/nfts'},\n            {name: 'My Collections', path: '/profile/collections'},\n            {name: 'Sign out', path: '/logout'}\n        ],\n        single: [\n            {name: 'Launchpad', path: '/launchpad'},\n            {name: 'Docs', path: '/docs'}\n        ]\n    }\n}\n\nexport const navbarSlice = createSlice({\n    name: \"navbar\",\n    initialState,\n    reducers: {}\n})\n\nexport const navbarReducer = navbarSlice.reducer","import {combineReducers} from \"redux\";\nimport {exploreNftsReducer} from \"./nfts/slice\";\n\nexport const exploreReducer = combineReducers({\n    nfts: exploreNftsReducer\n})","import {configureStore} from \"@reduxjs/toolkit\";\nimport {combineReducers} from \"redux\";\nimport {profileReducer} from \"./profile/slice\";\nimport {previewReducer} from \"./preview/reducer\";\nimport {navbarReducer} from \"./navbar/slice\";\nimport {exploreReducer} from \"./explore/reducer\";\n\n\nexport const rootReducer = combineReducers({\n    navbar: navbarReducer,\n    profile: profileReducer,\n    preview: previewReducer,\n    explore: exploreReducer\n})\n\nexport const setupStore = () => {\n    return configureStore({\n        reducer: rootReducer\n    })\n}\n\nexport type RootState = ReturnType<typeof rootReducer>\nexport type AppStore = ReturnType<typeof setupStore>\nexport type AppDispatch = AppStore['dispatch']","import './index.css';\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport App from \"./launch/App\";\nimport {setupStore} from \"./state/store\";\n\nconst store = setupStore()\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n)"],"sourceRoot":""}