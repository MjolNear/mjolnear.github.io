{"version":3,"sources":["business-logic/near/enviroment/network.ts","components/Pages/landing/GreetingText.jsx","components/Pages/landing/LandingPage.jsx","components/Pages/not-found/NotFoundPage.jsx","components/Pages/create/collection/CreateCollectionPage.jsx","business-logic/near/constants.ts","business-logic/near/enviroment/contract-names.ts","business-logic/near/enviroment/near.ts","business-logic/near/enviroment/config.ts","business-logic/near/api/rpc.ts","components/Pages/create/nft/upload/lines/SingleCharLine.jsx","components/Pages/create/nft/upload/lines/SingleNumberLine.jsx","components/Pages/create/nft/upload/containers/SingleLineContainer.jsx","components/Pages/create/nft/upload/containers/MultiLineContainer.jsx","components/Pages/create/nft/upload/containers/OptionInputContainer.jsx","components/Pages/create/nft/upload/lines/PropertyInput.jsx","components/Pages/create/nft/upload/UploadFileInput.jsx","business-logic/ipfs/upload.ts","components/Common/text/DarkBlueTitle.jsx","state/profile/slice.ts","components/Common/loaders/RoundLoader.jsx","components/Common/shadow/BlueShadowContainer.jsx","components/Pages/create/nft/CreateNftPage.jsx","business-logic/near/api/nfts/mint.js","components/Pages/explore/collection/ExploreCollectionsPage.jsx","hooks/redux.ts","hoc/withAccountId.jsx","components/Common/text/DarkBlueMjolText.jsx","hoc/profile/ProfileHistoryFetch.jsx","business-logic/near/get-utils.js","business-logic/near/api/utils.ts","business-logic/near/api/contracts/parser/lib/interfaces.ts","business-logic/near/api/core.ts","business-logic/near/api/contracts/api.ts","business-logic/near/api/contracts/marketplaces.ts","business-logic/near/api/standardization/nft-converter.ts","business-logic/near/api/nfts/api.ts","business-logic/near/api/market/api.ts","business-logic/near/api/batch-request/batchify.ts","business-logic/near/api/nfts/get-user-nfts.ts","state/profile/thunk.ts","components/Common/loaders/MjolLoader.jsx","components/Card/Blocks/ImageBlock.tsx","components/Card/Blocks/MintedBlock.tsx","components/Card/Blocks/TitleBlock.tsx","components/Card/Blocks/CollectionBlock.tsx","resources/near-protocol-near-logo.svg","components/Icons/near/NearBlackLogo.jsx","components/Card/Blocks/PriceBlock.tsx","components/Card/Card.tsx","components/CardList/ItemsGridContainer.tsx","components/CardList/CardGrid.tsx","components/Card/CardLoader.tsx","components/Card/CardListLoader.tsx","hoc/profile/ProfileNftsFetch.tsx","utils/css-utils.js","components/Common/buttons/MjolBlueGradientButton.jsx","components/Pages/profile/navbar/ProfileNavigationBar.jsx","components/Pages/profile/ProfilePage.jsx","hoc/profile/ProfilePageHoc.jsx","components/Preview/PreviewNftImage.jsx","components/Common/borders/Hr.jsx","components/Common/buttons/DropDownMjolBlueButton.jsx","components/Icons/IconText.jsx","state/transaction/state.ts","utils/string.js","components/Preview/Attributes/PreviewAttribute.jsx","components/Preview/Attributes/PreviewAttributes.jsx","components/Preview/Blocks/NftPreviewTitle.jsx","components/Icons/ShareIcon.jsx","components/Preview/Blocks/NftPreviewCollectionLink.jsx","components/Preview/Blocks/NftPreviewInfo.jsx","components/Pages/preview/nft/PreviewNftPage.jsx","state/preview/nft/slice.ts","components/Common/buttons/DarkBlueGradientButton.jsx","components/Preview/Blocks/PreviewNftPrice.jsx","components/Preview/Status/withPriceContainer.jsx","components/Preview/Status/BuyNftContainer.jsx","state/transaction/nft/slice.ts","business-logic/near/api/market/transaction.ts","state/transaction/nft/thunk.ts","components/Common/modal/Modal.jsx","components/Preview/Status/sell/recieve/SinglePayout.jsx","components/Preview/Status/sell/recieve/PayoutsPreview.jsx","components/Preview/Status/sell/InputPriceModal.jsx","components/Preview/Status/sell/SellNftContainer.jsx","components/Preview/Status/unlist/UnlistNftContainer.jsx","components/Preview/Status/NotListedNftContainer.jsx","components/Preview/Status/connect-wallet/ConnectWalletButton.jsx","components/Preview/Status/NftContractNotSupported.jsx","hoc/preview/nft/NftStatusHoc.tsx","hooks/useNftMarketStatus.ts","hoc/preview/nft/PreviewNftPageHoc.tsx","state/preview/nft/thunk.ts","hoc/auth/Logout.jsx","components/Filter/search/SearchInput.jsx","components/Pages/explore/nft/NftFilters.jsx","state/explore/nfts/slice.ts","business-logic/near/api/market/get-nfts-market.ts","state/explore/nfts/thunk.ts","components/CardList/CardList.tsx","hoc/explore/nft/ExploreNftsPageHoc.tsx","launch/AppRouter.jsx","components/Common/navbar/buttons.js","components/Pages/navbar/menu/TabDropDownMenu.jsx","resources/hammer.png","resources/label6.png","components/Pages/navbar/Navbar.js","components/Pages/navbar/NavbarContainer.js","launch/App.tsx","state/preview/reducer.ts","state/navbar/slice.ts","state/explore/reducer.ts","state/store.ts","index.tsx","business-logic/near/api/contracts/parser/lib/parseWasm.ts"],"names":["NetworkEnv","GreetingText","className","LandingPage","NotFoundPage","React","memo","src","alt","CreateCollectionPage","GAS","BN","SM_DEPOSIT","YOCTO_NEAR","MJOL_MARKET_CONTRACT_ID","config","env","PRODUCTION","MAINNET","networkId","nodeUrl","contractName","walletUrl","helperUrl","explorerUrl","DEVELOPMENT","TESTNET","BETANET","LOCAL","keyPath","process","HOME","TEST","CI","masterAccount","CI_BETANET","Error","getConfig","near","Near","keyStore","keyStores","BrowserLocalStorageKeyStore","wallet","WalletConnection","getAccountId","Contract","account","viewMethods","changeMethods","signIn","requestSignIn","then","catch","signOut","viewFunction","contractId","methodName","args","functionCall","gas","attachedDeposit","walletCallbackUrl","mjolViewFunction","mjolFunctionCall","SingleCharLine","props","type","name","id","placeholder","text","minLength","maxLength","onChange","e","setState","target","value","SingleNumberLine","min","max","SingleLineContainer","required","MultiLineContainer","rows","defaultValue","OptionInputContainer","setCurCollection","myCollections","map","PropertyInput","UploadFileInput","state","stroke","fill","viewBox","d","strokeWidth","strokeLinecap","strokeLinejoin","htmlFor","accept","files","width","URL","createObjectURL","onClick","xmlns","description","image","traits","a","client","NFTStorage","token","store","makeNftLink","nftIpfsLink","startsWith","slice","PROFILE_TAB","DarkBlueTitle","title","classes","RoundLoader","height","loop","animationData","lottieJson","play","style","BlueShadowContainer","children","LineAlert","role","CreateNftPage","concat","useState","curCollection","setTitle","setDescription","royalty","setRoyalty","file","setFile","isLoading","setIsLoading","alertText","setAlertText","propertiesNum","setPropertiesNum","fetchProperties","setFetchProperties","onSubmit","preventDefault","isSignedIn","length","storeNFT","res","console","log","ipfsMedia","data","href","ipfsRef","url","token_metadata","media","reference","copies","payout","toString","tokenMetadata","token_owner_id","mintToCommonCollection","tmpNum","pop","ind","ExploreCollectionsPage","useAppDispatch","useDispatch","useAppSelector","useSelector","withAccountId","Component","accountId","initialState","tabs","ALL_NFTS","LISTED_NFTS","HISTORY","activeTab","fetching","nfts","history","profileSlice","createSlice","reducers","changeTab","action","payload","setPageData","addNft","push","toggleFetching","resetNfts","profileReducer","reducer","DarkBlueMjolText","undefined","ProfileHistoryFetch","useEffect","NftAPI","fetch","timeout","response","ok","error","statusText","status","json","formatOptionalPrice","price","formatPrice","getPrice","uid","tokenPrices","stringPrice","toLocaleString","useGrouping","utils","format","formatNearAmount","buildUID","tokenId","Object","freeze","nep171","methods","nep177","nep178","nep181","nep199","resource","options","controller","AbortController","setTimeout","abort","signal","clearTimeout","Marketplace","contractAPI","fetchWithTimeout","isIPFS","require","getRealUrl","urlHash","storageLink","endsWith","cid","getNftMintedSiteInfo","nft","PARAS","holder","token_id","split","nftLink","metadata","convertStandardNFT","mediaUrl","media_hash","Promise","reject","resolve","ownerId","owner_id","mediaURL","referenceURL","reference_hash","mintSite","getMintbaseNFT","getJsonByURL","jsonNFT","Account","getConvertedNFT","jsonNft","nftAPI","limit","from","account_id","from_index","balance","max_len_payout","marketAPI","tokens","has_next_batch","total_count","prices","forEach","nft_contract_id","tokenUID","token_uid","batchRequest","batch","request","values","errors","all","result","getNFTsByContractAndTokenId","tokenPrice","getNftPayouts","payouts","royalties","highestPayout","payoutKey","payoutVal","parseInt","addExtraContracts","curContracts","contract","includes","getUserNfts","nftContracts","fetchNfts","flat","MjolLoader","border","borderTop","borderRadius","animation","ImageBlock","path","scrollPosition","loading","setLoading","effect","threshold","afterLoad","objectFit","MintedBlock","market","link","size","color","TitleBlock","previewLink","to","CollectionBlock","NearBlackLogo","logo","PriceBlock","isListed","Card","ItemsGridContainer","CardGrid","CardLoader","gradient","direction","background","CardListLoader","ProfileNftsFetch","profile","dispatch","actions","finally","fetchMyNfts","filter","classNames","Boolean","join","MjolBlueGradientButton","isActive","ProfileNavigationBar","onTabChange","navbar","item","ProfilePage","render","tab","PreviewNftImage","onLoad","Hr","DropDownMjolBlueButton","buttonContent","initialVisible","visible","setVisible","ItemMarketStatus","IconText","icon","getPercentage","percentage","maxValue","MAX_ITEM_PRICE","getStringPercentage","minValue","maximumFractionDigits","PreviewAttribute","shrinkValue","string","chunkSize","sizeToSplit","shortenString","navigator","clipboard","writeText","place","delayShow","PreviewAttributes","attributes","attribute","NftPreviewTitle","ShareIcon","cx","cy","r","x1","y1","x2","y2","NftPreviewCollectionLink","NftPreviewInfo","statusElement","ownerAttributes","formattedPayouts","entries","kv","element","PreviewNftPage","previewNftSlice","success","failure","setPayouts","reset","previewNftReducer","DarkBlueGradientButton","PreviewNftPrice","withPriceContainer","pending","marketNftTransactionSlice","commit","giveApprove","parseNearAmount","json_nft","JSON","stringify","msg","buyNftWithPayouts","nearAmount","unlistNFT","Modal","close","closeOnBgClick","closeOnEscape","modalRef","useRef","onKeydown","event","key","document","addEventListener","removeEventListener","ref","current","backgroundColor","SinglePayout","PayoutsPreview","treasury","rest","reduce","b","receive","InputPriceModal","imgSrc","closeModal","useForm","mode","defaultValues","register","watch","handleSubmit","formState","isValid","step","message","aspectRatio","disabled","SellNftContainer","NotListedNftContainer","ConnectWalletButton","NftContractNotSupported","NftStatusHoc","LISTED","CAN_SELL","CAN_BUY","FREE","useNftMarketStatus","sellNft","NOT_SUPPORTED","useParams","preview","p","fetchNft","Logout","logout","window","location","reload","SearchInput","isTyping","onCancel","onSearch","NftFilters","total","hasMore","exploreNftsSlice","exploreNftsReducer","getMarketNfts","marketNfts","fetchMarketNfts","trackWindowScroll","explore","next","scrollThreshold","loader","dataLength","endMessage","ExploreNftsPageHoc","AppRouter","exact","ProfilePageHoc","CloseMenuButton","Button","DropDownButton","isOpen","tabName","MenuButton","TabsDropDownMenu","isProfile","as","Fragment","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Panel","SmallNavBar","Navbar","exploreTabs","createTabs","create","profileTabs","singleTabs","single","imgLogo","imgLabel","Group","focus","NavbarContainer","App","previewReducer","combineReducers","navbarReducer","exploreReducer","rootReducer","configureStore","ReactDOM","StrictMode","getElementById","parseWasm","wasmb64","decode","strb64","Buffer","Uint8Array","atob","trim","c","charCodeAt"],"mappings":"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","file":"static/js/main.b35a9692.chunk.js","sourcesContent":["export enum NetworkEnv {\n    MAINNET = \"mainnet\",\n    TESTNET = \"testnet\",\n    DEVELOPMENT = \"development\",\n    BETANET = \"betanet\",\n    PRODUCTION = \"production\",\n    LOCAL = \"local\",\n    TEST = \"test\",\n    CI = \"ci\",\n    CI_BETANET = \"ci-betanet\"\n}","import React from 'react';\n\nconst GreetingText = () => {\n    return (\n        <div className=\"max-w-7xl mx-auto w-1/2 space-y-14 h-screen\">\n            <div\n                className=\"text-3xl text-left md:text-6xl font-extrabold text-transparent bg-clip-text bg-gradient-to-br from-mjol-blue-base to-green-200 flex-end\">\n                Welcome to MjolNear\n            </div>\n            <div className=\"text-sm md:text-lg font-mono\">\n                The first Open NFT marketplace on Near blockchain.\n            </div>\n        </div>\n    );\n};\n\nexport default GreetingText;","import React from 'react';\nimport GreetingText from \"./GreetingText\";\n\nconst LandingPage = () => {\n    return (\n        <div className=\"px-8 py-8\">\n            <GreetingText/>\n        </div>\n    )\n};\n\nexport default LandingPage;","import React from 'react';\n\nconst NotFoundPage = React.memo(() => {\n    return (\n        <img className=\"max-w-3xl mx-auto\"\n             src=\"https://cdn.dribbble.com/users/745025/screenshots/6723888/gif_404.gif\"\n             alt=\"not found\"\n        />\n    );\n});\n\nexport default NotFoundPage;","import React from 'react';\n\nconst CreateCollectionPage = () => {\n    return (\n        <div>\n            Create collection\n        </div>\n    );\n};\n\nexport default CreateCollectionPage;","import BN from \"bn.js\";\n\n// 0.0000000003 Ⓝ\nexport const GAS = new BN(\"300000000000000\");\n\n// 0.1 Ⓝ\nexport const SM_DEPOSIT = new BN(\"100000000000000000000000\")\n\n// one yocto Ⓝ\nexport const YOCTO_NEAR = new BN(\"1\");\n\n","export const MJOL_MARKET_CONTRACT_ID = 'market.mjol.near'","import {Contract, keyStores, Near, WalletConnection} from \"near-api-js\";\nimport {getConfig} from \"./config\";\nimport {NetworkEnv} from \"./network\";\n\nexport const network = NetworkEnv.MAINNET\nexport const config = getConfig(network)\n\nconst near = new Near({\n    keyStore: new keyStores.BrowserLocalStorageKeyStore(),\n    ...config,\n})\n\nexport const wallet = new WalletConnection(near, config.contractName)\n\n// Initializing our setup APIs by setup name and configuration\nexport const contract = new Contract(wallet.account(), config.contractName, {\n    // View methods are read only. They don't modify the state, but usually return some value.\n    viewMethods: ['get_nfts', 'get_user_nfts', 'get_nft_price'],\n    // Change methods can modify the state. But you don't receive the returned value when called.\n    changeMethods: ['buy_with_payouts', 'remove_from_market'],\n})\n\nexport const getAccountId = () => {\n    return wallet.getAccountId()\n}\n\nexport const signIn = () => {\n    wallet.requestSignIn(config.contractName)\n        .then()\n        .catch()\n}\n\nexport const signOut = () => {\n    wallet.signOut()\n}","import {NetworkEnv} from \"./network\";\nimport {NearConfig} from \"near-api-js/lib/near\";\nimport {MJOL_MARKET_CONTRACT_ID} from \"./contract-names\";\n\n\nexport interface Config extends NearConfig {\n    contractName: string,\n    explorerUrl?: string,\n    keyPath?: string\n}\n\nexport const getConfig = (env: NetworkEnv): Config => {\n    switch (env) {\n        case NetworkEnv.PRODUCTION:\n        case NetworkEnv.MAINNET:\n            return {\n                networkId: 'mainnet',\n                nodeUrl: 'https://rpc.mainnet.near.org',\n                contractName: MJOL_MARKET_CONTRACT_ID,\n                walletUrl: 'https://wallet.near.org',\n                helperUrl: 'https://helper.mainnet.near.org',\n                explorerUrl: 'https://explorer.mainnet.near.org',\n            };\n        case NetworkEnv.DEVELOPMENT:\n        case NetworkEnv.TESTNET:\n            return {\n                networkId: 'testnet',\n                nodeUrl: 'https://rpc.testnet.near.org',\n                contractName: MJOL_MARKET_CONTRACT_ID,\n                walletUrl: 'https://wallet.testnet.near.org',\n                helperUrl: 'https://helper.testnet.near.org',\n                explorerUrl: 'https://explorer.testnet.near.org',\n            };\n        case NetworkEnv.BETANET:\n            return {\n                networkId: 'betanet',\n                nodeUrl: 'https://rpc.betanet.near.org',\n                contractName: MJOL_MARKET_CONTRACT_ID,\n                walletUrl: 'https://wallet.betanet.near.org',\n                helperUrl: 'https://helper.betanet.near.org',\n                explorerUrl: 'https://explorer.betanet.near.org',\n            };\n        case NetworkEnv.LOCAL:\n            return {\n                networkId: 'local',\n                nodeUrl: 'http://localhost:3030',\n                keyPath: `${process.env.HOME}/.near/validator_key.json`,\n                walletUrl: 'http://localhost:4000/wallet',\n                contractName: MJOL_MARKET_CONTRACT_ID,\n            };\n        case NetworkEnv.TEST:\n        case NetworkEnv.CI:\n            return {\n                networkId: 'shared-test',\n                nodeUrl: 'https://rpc.ci-testnet.near.org',\n                contractName: MJOL_MARKET_CONTRACT_ID,\n                masterAccount: 'test.near',\n            };\n        case NetworkEnv.CI_BETANET:\n            return {\n                networkId: 'shared-test-staging',\n                nodeUrl: 'https://rpc.ci-betanet.near.org',\n                contractName: MJOL_MARKET_CONTRACT_ID,\n                masterAccount: 'test.near',\n            };\n        default:\n            throw Error(`Unconfigured environment '${env}'. Can be configured in src/config.js.`)\n    }\n}\n\n// Why do we need that?\n// module.exports = getConfig;\n","import BN from \"bn.js\";\nimport {wallet} from \"../enviroment/near\";\nimport {MJOL_MARKET_CONTRACT_ID} from \"../enviroment/contract-names\";\nimport {GAS, SM_DEPOSIT} from \"../constants\";\nimport {ContractId} from \"../../models/types\";\n\nexport interface ViewFunctionOptions {\n    contractId: ContractId,\n    methodName: string,\n    args: object\n}\n\nexport interface FunctionCallOptions extends ViewFunctionOptions {\n    gas?: BN,\n    attachedDeposit?: BN,\n    walletCallbackUrl?: string\n}\n\nexport interface MjolViewFunctionOptions {\n    methodName: string,\n    args: object\n}\n\nexport interface MjolFunctionCallOptions extends MjolViewFunctionOptions {\n    gas?: BN,\n    attachedDeposit?: BN,\n    walletCallbackUrl?: string\n}\n\nexport function viewFunction<T = any>({contractId, methodName, args}: ViewFunctionOptions): Promise<T> {\n    return wallet.account().viewFunction(contractId, methodName, args)\n}\n\nexport const functionCall = ({\n    contractId,\n    methodName,\n    args,\n    gas,\n    attachedDeposit,\n    walletCallbackUrl\n}: FunctionCallOptions) => {\n    return wallet.account().functionCall({\n        contractId,\n        methodName,\n        args,\n        gas,\n        attachedDeposit,\n        walletCallbackUrl\n    })\n}\n\nexport function mjolViewFunction<T = any>({methodName, args}: MjolViewFunctionOptions) {\n    return viewFunction<T>({\n        contractId: MJOL_MARKET_CONTRACT_ID, methodName, args\n    })\n}\n\nexport const mjolFunctionCall = ({\n    methodName,\n    args,\n    gas = GAS,\n    attachedDeposit = SM_DEPOSIT,\n    walletCallbackUrl\n}: MjolFunctionCallOptions) => {\n    return functionCall({\n        contractId: MJOL_MARKET_CONTRACT_ID,\n        methodName,\n        args,\n        gas,\n        attachedDeposit,\n        walletCallbackUrl\n    })\n}","const SingleCharLine = (props) => {\n    return (\n        <input\n            type={props.type}\n            name={props.id}\n            id={props.id}\n            className=\"focus:border-cyan-500 flex-1 block w-full rounded-none rounded-md sm:text-sm border-gray-300\"\n            placeholder={props.text}\n            minLength={props.minLength}\n            maxLength={props.maxLength}\n            onChange={(e) => props.setState(e.target.value)}\n        />\n    );\n};\n\nexport default SingleCharLine;","import React from \"react\";\n\nconst SingleNumberLine = (props) => {\n    return (\n        <input\n            type={props.type}\n            name={props.id}\n            id={props.id}\n            className=\"peer focus:ring-indigo-500 focus:border-cyan-500 flex-1 block w-full rounded-none rounded-md sm:text-sm border-gray-300\"\n            placeholder={props.text}\n            min={props.min}\n            max={props.max}\n            onChange={(e) => props.setState(e.target.value)}\n        />\n    );\n};\n\nexport default SingleNumberLine;","import React from \"react\";\nimport SingleCharLine from \"../lines/SingleCharLine\";\nimport SingleNumberLine from \"../lines/SingleNumberLine\";\n\n\nconst SingleLineContainer = (props) => {\n    return (\n        <div className=\"grid grid-cols-3 gap-6\">\n            <div className=\"sm:col-span-2 col-span-3\">\n                <label\n                    className=\"block font-bold text-sm text-gray-700\">\n                    {props.name}{props.required ? <b className=\"text-sm font-large text-red-500\">*</b>:<></>}\n                </label>\n                <div className=\"mt-1 flex rounded-md shadow-sm\">\n                    {props.type === 'text' ? (\n                        <SingleCharLine name={props.name} text={props.text} type={props.type}\n                                        minLength={props.minLength} maxLength={props.maxLength} id={props.id}\n                                        setState={props.setState}\n                        />\n                    ) : (\n                        <SingleNumberLine name={props.name} text={props.text} type={props.type} min={props.min}\n                                          max={props.max} id={props.id} setState={props.setState}\n                        />\n                    )}\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default SingleLineContainer;","import React from \"react\";\n\nconst MultiLineContainer = (props) => {\n    return (\n        <div>\n            <label className=\"block text-sm font-bold text-gray-700\">\n                {props.name}\n            </label>\n            <div className=\"mt-1\">\n                      <textarea\n                          id={props.id}\n                          name={props.id}\n                          rows={props.rows}\n                          className=\"shadow-sm focus:ring-indigo-500 focus:border-cyan-500 mt-1 block w-full sm:text-sm border border-gray-300 rounded-md\"\n                          placeholder=\"Brief description for your NFT\"\n                          defaultValue={''}\n                          maxLength={props.maxLength}\n                          onChange={(e) => props.setState(e.target.value)}\n                      />\n            </div>\n        </div>\n    )\n};\n\nexport default MultiLineContainer;","import React from \"react\";\n\nconst OptionInputContainer = (props) => {\n    return (\n        <div className=\"grid grid-cols-6 gap-6\">\n            <div className=\"col-span-6 sm:col-span-2\">\n                <label className=\"block text-sm font-bold text-gray-700\">\n                    {props.name}\n                </label>\n                <select\n                    id={props.id}\n                    name={props.id}\n                    className=\"mt-1 block w-full py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-cyan-500 sm:text-sm\"\n                    onChange={(e) => props.setCurCollection(e.target.value)}\n                >\n                    {props.myCollections.map(name => (\n                        <option key={name} value={name}>{name}</option>\n                    ))}\n                </select>\n                <p className=\"mt-2 text-sm text-gray-500\">If you want to mint NFT as part of your collection, you can\n                    <b className=\"cursor-pointer\"> create it</b>\n                </p>\n            </div>\n        </div>\n    )\n};\n\nexport default OptionInputContainer;","const PropertyInput = (props) => {\n    return (\n        <div className=\"col-span-6 sm:col-span-3\">\n            <label className=\"text-sm font-medium text-gray-700\">\n                {props.name}\n            </label>\n            <input\n                type={props.type}\n                name={props.id}\n                id={props.id}\n                maxLength={props.maxLength}\n                className=\"mt-1 focus:ring-indigo-500 focus:border-cyan-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\n            />\n        </div>\n    )\n};\n\nexport default PropertyInput;","import React from \"react\";\n\nconst UploadFileInput = (props) => {\n    return (\n        <div>\n            <label className=\"block text-sm font-bold text-gray-700\">\n                Upload artwork file<b className=\"text-sm font-large text-red-500\">*</b>\n            </label>\n            {props.state === null ? (\n                <div\n                    className=\"flex justify-center mt-1 px-6 pt-5 pb-6 border-2 border-gray-300 border-dashed rounded-md\">\n                        <div className=\"space-y-1 text-center\">\n                            <svg\n                                className=\"mx-auto h-12 w-12 text-gray-400\"\n                                stroke=\"currentColor\"\n                                fill=\"none\"\n                                viewBox=\"0 0 48 48\"\n                                aria-hidden=\"true\"\n                            >\n                                <path\n                                    d=\"M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02\"\n                                    strokeWidth={2}\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                />\n                            </svg>\n                            <div className=\"flex text-sm text-gray-600\">\n                                <label\n                                    htmlFor=\"file-upload\"\n                                    className=\"relative cursor-pointer bg-white rounded-md font-medium text-blue-500 hover:text-indigo-500 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-indigo-500\"\n                                >\n                                    <span>Upload a file</span>\n                                    <input id=\"file-upload\" name=\"file-upload\" type=\"file\" accept=\"image/gif, image/jpeg, image/png\"\n                                           className=\"sr-only\" onChange={(e) => props.setState(e.target.files[0])}/>\n                                </label>\n                                <p className=\"pl-1\">or drag and drop</p>\n                            </div>\n                            <p className=\"text-xs text-gray-500\">PNG, JPG, GIF up to 10MB</p>\n                        </div>\n                </div>\n            ):(\n                <div className=\"flex justify-start mt-1 px-6 pt-5 pb-6 border-2 border-gray-300 border-dashed rounded-md\">\n                    <div className=\"relative\">\n                    <img width=\"100px\" src={URL.createObjectURL(props.state)} alt=\"nft image\"/>\n                    <button className=\"absolute top-0 right-0 -mx-2 -my-2 bg-gray-900 text-white rounded-full hover:bg-gray-500 cursor-pointer\"\n                            onClick={() => props.setState(null)}>\n                        <svg className=\"h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"\n                             stroke=\"currentColor\" aria-hidden=\"true\">\n                            <path d=\"M6 18L18 6M6 6l12 12\"/>\n                        </svg>\n                    </button>\n                    </div>\n                </div>\n\n            )}\n        </div>\n    )\n};\n\nexport default UploadFileInput;","import {NFTStorage} from 'nft.storage'\n\nexport async function storeNFT(name: any, description: any, image: any, traits: any) {\n    const client = new NFTStorage({\n        token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkaWQ6ZXRocjoweDYzZDFBZDhCMWIzMjQyQjFjMkUwNjE2NzcyOUNmMGEwYmIyNDE1OTUiLCJpc3MiOiJuZnQtc3RvcmFnZSIsImlhdCI6MTY0MDExNjI4NTY3OSwibmFtZSI6InRldHMgZm9yIG9wZW4gbmZ0In0.gU_buy_gF4XUwptAU7Ck5_TSrfhZNLva5h2uWAusHNo'\n    })\n\n    return await client.store({\n        name,\n        description,\n        image,\n        traits\n    })\n}\n\nexport function makeNftLink(nftIpfsLink: string) {\n    if (nftIpfsLink.startsWith('ipfs://')) {\n        return 'https://ipfs.io/ipfs/' + nftIpfsLink.slice(7)\n    }\n    return \"\"\n}\n","import React from 'react';\n\nconst DarkBlueTitle = ({title, classes}) => {\n    return (\n        <div\n            className={\n                \"font-extrabold text-transparent bg-clip-text \" +\n                \"bg-gradient-to-br from-teal-900 to-mjol-blue-base \" +\n                (classes ? classes : \"text-center text-5xl md:text-6xl lg:text-7xl\")\n            }\n        >\n            {title}\n        </div>\n    );\n};\n\nexport default DarkBlueTitle;","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport {Nft} from \"../../business-logic/models/nft\";\n\nexport enum PROFILE_TAB {\n    ALL_NFTS = \"All NFTs\",\n    LISTED_NFTS = \"Listed NFTs\",\n    HISTORY = \"My History\"\n}\n\nexport interface ProfileState {\n    tabs: Array<PROFILE_TAB>,\n    activeTab: PROFILE_TAB,\n    fetching: boolean,\n    nfts: Array<Nft>,\n    history: []\n}\n\nconst initialState: ProfileState = {\n    tabs: [PROFILE_TAB.ALL_NFTS, PROFILE_TAB.LISTED_NFTS, PROFILE_TAB.HISTORY],\n    activeTab: PROFILE_TAB.ALL_NFTS,\n    fetching: true,\n    nfts: [],\n    history: []\n}\n\nexport const profileSlice = createSlice({\n    name: \"profile\",\n    initialState,\n    reducers: {\n        changeTab: (state, action: PayloadAction<PROFILE_TAB>) => {\n            state.activeTab = action.payload\n        },\n        setPageData: (state, action: PayloadAction<Nft[]>) => {\n            state.nfts = action.payload\n        },\n        addNft: (state, action: PayloadAction<any>) => {\n            state.nfts.push(action.payload)\n        },\n        toggleFetching: (state, action: PayloadAction<boolean>) => {\n            state.fetching = action.payload\n        },\n        resetNfts: (state) => {\n            state.nfts = []\n            state.fetching = true\n        }\n    }\n})\n\nexport const profileReducer = profileSlice.reducer","import Lottie from \"react-lottie-player\";\nimport lottieJson from \"../../../resources/loading.json\";\nimport React from \"react\";\n\nconst RoundLoader = React.memo(({width = 200, height = 200}) => {\n    return (\n        <div className=\"flex h-screen bg-light_white justify-center\">\n            <div className=\"my-auto\">\n                <Lottie\n                    loop\n                    animationData={lottieJson}\n                    play\n                    style={{width, height}}\n                />\n            </div>\n        </div>\n    )\n});\n\nexport default RoundLoader;","import React from 'react';\n\nconst BlueShadowContainer = ({children}) => {\n    return (\n        <div className=\"shadow-mjol-base-blue-drop-xl pt-10\">\n            {children}\n        </div>\n    );\n};\n\nexport default BlueShadowContainer;","import React, {useState} from 'react';\nimport {mintToCommonCollection} from \"../../../../business-logic/near/api/nfts/mint\";\nimport SingleLineContainer from \"./upload/containers/SingleLineContainer\";\nimport MultiLineContainer from \"./upload/containers/MultiLineContainer\";\nimport OptionInputContainer from \"./upload/containers/OptionInputContainer\";\nimport PropertyInput from \"./upload/lines/PropertyInput\";\nimport UploadFileInput from \"./upload/UploadFileInput\";\nimport {makeNftLink, storeNFT} from \"../../../../business-logic/ipfs/upload\";\nimport DarkBlueTitle from \"../../../Common/text/DarkBlueTitle\";\nimport RoundLoader from \"../../../Common/loaders/RoundLoader\";\nimport BlueShadowContainer from \"../../../Common/shadow/BlueShadowContainer\";\nimport {getAccountId, wallet} from \"../../../../business-logic/near/enviroment/near\";\n\n\nconst LineAlert = ({state, setState}) => {\n    return (\n        <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative\" role=\"alert\">\n            <span className=\"block sm:inline\">{state}</span>\n            <span className=\"absolute top-0 bottom-0 right-0 px-4 py-3\">\n                <svg className=\"fill-current h-6 w-6 text-red-500\" role=\"button\"\n                     xmlns=\"http://www.w3.org/2000/svg\"\n                     viewBox=\"0 0 20 20\"\n                     onClick={() => setState(\"\")}>\n                    <title>Close</title>\n                    <path d=\"M14.348 14.849a1.2 1.2 0 0 1-1.697 0L10 11.819l-2.651 3.029a1.2 1.2 0 1\n                    1-1.697-1.697l2.758-3.15-2.759-3.152a1.2 1.2 0 1 1 1.697-1.697L10 8.183l2.651-3.031a1.2 1.2 0 1 1\n                    1.697 1.697l-2.758 3.152 2.758 3.15a1.2 1.2 0 0 1 0 1.698z\"\n                    />\n                </svg>\n            </span>\n        </div>\n    )\n};\n\nconst CreateNftPage = () => {\n    const MIN_TITLE_LEN = 3;\n    const MAX_TITLE_LEN = 30;\n    const MAX_DESC_LEN = 120;\n    const MIN_ROYALTY = 0;\n    const MAX_ROYALTY = 50;\n    const MIN_TRAITS_LEN = 1;\n    const MAX_TRAITS_LEN = 20;\n\n\n    let myCollections = [] //['Collection#1', 'Collection#2', 'Collection#3'];\n    myCollections = ['None'].concat(myCollections);\n\n    const [curCollection, setCurCollection] = useState('None');\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [royalty, setRoyalty] = useState(0);\n    const [file, setFile] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const [alertText, setAlertText] = useState(\"\");\n\n\n    const [propertiesNum, setPropertiesNum] = useState([1]);\n    const [fetchProperties, setFetchProperties] = useState(false);\n    const addProperty = () => {\n        setPropertiesNum(propertiesNum.concat(propertiesNum[propertiesNum.length - 1] + 1));\n        setFetchProperties(!fetchProperties);\n    };\n    const delProperty = () => {\n        if (propertiesNum.length !== 1) {\n            const tmpNum = propertiesNum;\n            tmpNum.pop();\n            setPropertiesNum(tmpNum);\n            setFetchProperties(!fetchProperties);\n        }\n    };\n\n    const submitForm = (e) => {\n        e.preventDefault();\n        setAlertText(\"\");\n        if (!wallet.isSignedIn()) {\n            return\n        }\n        if (!(title.length <= MAX_TITLE_LEN && title.length >= MIN_TITLE_LEN)) {\n            setAlertText(`Title length must be between ${MIN_TITLE_LEN} and ${MAX_TITLE_LEN} characters`);\n            return\n        }\n        if (!(description.length <= MAX_DESC_LEN)) {\n            setAlertText(`Description length must be less than ${MAX_DESC_LEN} characters`);\n            return\n        }\n        if (!(royalty <= MAX_ROYALTY && royalty >= MIN_ROYALTY)) {\n            setAlertText(`Royalty must be less than ${MAX_ROYALTY}`);\n            return\n        }\n        if (file === null) {\n            setAlertText(`Please upload your NFT file`);\n            return\n        }\n\n        if (curCollection === 'None') {\n            setIsLoading(true);\n            storeNFT(title,\n                description,\n                file,\n                {}).then(res => {\n                console.log(res);\n                const ipfsMedia = makeNftLink(res.data.image.href);\n                const ipfsRef = makeNftLink(res.url);\n                let token_metadata = {\n                    title: title,\n                    description: description,\n                    media: ipfsMedia,\n                    reference: ipfsRef,\n                    copies: 1\n                };\n                let payout = null;\n                if (royalty !== 0) {\n                    payout = {\n                        payout: {}\n                    };\n                    payout[\"payout\"][getAccountId()] = (100 * royalty).toString();\n                }\n                mintToCommonCollection(token_metadata, payout);\n                setIsLoading(false);\n            }).catch((e) => {\n                    setAlertText(`Error: Can't upload file to ipfs, try again or contact to our support`);\n                    setIsLoading(false);\n                    console.log(e);\n                }\n            )\n        } else {\n            setAlertText('Only common collection available now');\n        }\n\n    };\n\n\n    return (\n        <>\n            {isLoading ? (\n                <RoundLoader/>\n            ) : (\n                <div className=\"bg-mjol-white\">\n                    <div className=\"bg-white\">\n                        <BlueShadowContainer>\n                            <div className=\"pb-10 px-4 space-y-8\">\n                                <DarkBlueTitle title=\"Create NFT\"/>\n                            </div>\n                        </BlueShadowContainer>\n                    </div>\n                    <div className=\"max-w-7xl py-10 mx-auto px-4 sm:px-6\">\n                        <form onSubmit={submitForm}>\n                            <div className=\"shadow rounded-md overflow-hidden\">\n                                <div className=\"px-4 py-5 bg-white space-y-6 p-6\">\n                                    <SingleLineContainer name={'Title'}\n                                                         required={true}\n                                                         text={'My NFT'}\n                                                         type={'text'}\n                                                         minLength={MIN_TITLE_LEN}\n                                                         maxLength={MAX_TITLE_LEN}\n                                                         id={'mint-title'}\n                                                         setState={setTitle}\n                                    />\n                                    <MultiLineContainer name={'Description'}\n                                                        text={'Brief description for your NFT'}\n                                                        maxLength={MAX_DESC_LEN}\n                                                        rows={3}\n                                                        id={'mint-desc'}\n                                                        setState={setDescription}\n                                    />\n                                    <SingleLineContainer name={'Royalty'}\n                                                         text={'Royalties on secondary sales(%), number from 0-50'}\n                                                         type={'number'}\n                                                         min={MIN_ROYALTY}\n                                                         max={MAX_ROYALTY}\n                                                         id={'mint-royalty'}\n                                                         setState={setRoyalty}\n                                    />\n                                    <OptionInputContainer name={'NftCollection'}\n                                                          myCollections={myCollections}\n                                                          id={'mint-collection'}\n                                                          curCollection={curCollection}\n                                                          setCurCollection={setCurCollection}\n                                    />\n                                    {curCollection !== 'None' ? (\n                                        <div className=\"grid grid-cols-6 gap-6\">\n                                            <label className=\"col-span-6 text-sm font-medium text-gray-700\">\n                                                Properties:\n                                                <button\n                                                    type=\"button\"\n                                                    onClick={addProperty}\n                                                    className=\"ml-5 bg-white py-2 px-3 border border-gray-300 rounded-md shadow-sm text-sm leading-4 font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                                                >\n                                                    +\n                                                </button>\n                                                <button\n                                                    type=\"button\"\n                                                    onClick={delProperty}\n                                                    className=\"ml-5 bg-white py-2 px-3 border border-gray-300 rounded-md shadow-sm text-sm leading-4 font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                                                >\n                                                    -\n                                                </button>\n                                            </label>\n                                            {propertiesNum.map(ind => (\n                                                <>\n                                                    <PropertyInput name={'Key #' + ind}\n                                                                   type={'text'}\n                                                                   minLength={MIN_TRAITS_LEN}\n                                                                   maxLength={MAX_TRAITS_LEN}\n                                                                   id={'mint-key-' + ind}\n                                                    />\n                                                    <PropertyInput name={'Value #' + ind}\n                                                                   type={'text'}\n                                                                   minLength={MIN_TRAITS_LEN}\n                                                                   maxLength={MAX_TRAITS_LEN}\n                                                                   id={'mint-value-' + ind}\n                                                    />\n                                                </>\n                                            ))}\n                                        </div>\n                                    ) : (\n                                        <></>\n                                    )}\n                                    <UploadFileInput state={file} setState={setFile}/>\n                                    {alertText !== \"\" ? (\n                                        <LineAlert state={alertText} setState={setAlertText}/>\n                                    ) : (\n                                        <></>\n                                    )}\n                                </div>\n                                <div className=\"px-4 py-3 bg-gray-50 text-left sm:px-6\">\n                                    <button\n                                        type=\"submit\"\n                                        className=\"inline-flex justify-center py-2 px-6 font-bold text-lg hover:text-gray-900 font-large rounded-md text-white bg-gradient-to-br from-mjol-blue-base to-green-200 hover:from-green-200 hover:to-mjol-blue-base\"\n                                    >\n                                        Mint\n                                    </button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            )\n            }\n        </>\n    )\n};\n\nexport default CreateNftPage;","import {GAS, SM_DEPOSIT} from \"../../constants\";\nimport {getAccountId} from \"../../enviroment/near\";\nimport {functionCall} from \"../rpc\";\n\nexport function mintToCommonCollection(tokenMetadata, payout) {\n    const commonContactId = 'mjol.near';\n\n    const args = {\n        token_owner_id: getAccountId(),\n        token_metadata: tokenMetadata,\n    };\n    if (payout !== null) {\n        args[\"payout\"] = payout\n    }\n    return functionCall({\n        contractId: commonContactId,\n        methodName: 'nft_mint',\n        args,\n        gas: GAS,\n        attachedDeposit: SM_DEPOSIT\n    })\n}","import React from 'react';\n\nconst ExploreCollectionsPage = () => {\n    return (\n        <div>\n            Explore collections\n        </div>\n    );\n};\n\nexport default ExploreCollectionsPage;","import {useDispatch, TypedUseSelectorHook, useSelector} from \"react-redux\";\nimport {AppDispatch, RootState} from \"../state/store\";\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;","import React from \"react\";\nimport {wallet} from \"../business-logic/near/enviroment/near\";\n\nconst withAccountId = (Component) => (props) => {\n    return <Component {...props} accountId={wallet.getAccountId()}/>\n};\n\nexport default withAccountId;","import React from 'react';\n\nconst DarkBlueMjolText = ({text, classes = undefined}) => {\n    return (\n        <div className={\n            \"text-transparent bg-clip-text bg-gradient-to-bl from-blue-500 to-blue-800 \" +\n            (classes ? classes : \"text-center font-extrabold\")\n        }\n        >\n            {text}\n        </div>\n    );\n};\n\nexport default DarkBlueMjolText;","import React, {useEffect} from 'react';\nimport DarkBlueMjolText from \"../../components/Common/text/DarkBlueMjolText\";\n\nconst ProfileHistoryFetch = ({accountId}) => {\n\n    useEffect(() => {\n\n    }, [accountId])\n\n    return (\n        <DarkBlueMjolText text=\"History\"/>\n    );\n};\n\nexport default ProfileHistoryFetch;","export class NftAPI {\n\n    static async getJsonByURL(url) {\n        try {\n            const response = await fetch(url, {timeout: 30000});\n            if (!response.ok) {\n                return {error: response.statusText + ' (' + response.status + ')'}\n            }\n            try {\n                return await response.json();\n            } catch (err) {\n                return {error: 'Unable to parse json response'}\n            }\n        } catch (error) {\n            return {error}\n        }\n    }\n}","import {ContractId, NumberAmount, Optional, StringAmount, TokenId, TokenUID} from \"../../models/types\";\nimport {utils} from \"near-api-js\";\nimport {TokenPrices} from \"./market/api\";\n\nexport const formatOptionalPrice = (price: Optional<NumberAmount>): Optional<StringAmount> => {\n    return price === null\n        ? null\n        : formatPrice(price)\n}\n\nexport const getPrice = (uid: TokenUID, tokenPrices: TokenPrices): Optional<StringAmount> => {\n    const price = tokenPrices[uid]\n    return price === undefined\n        ? null\n        : price\n}\n\nexport const formatPrice = (price: NumberAmount): string => {\n    const stringPrice = price.toLocaleString('fullwide', {useGrouping: false})\n    return utils.format.formatNearAmount(stringPrice)\n}\n\n/**\n * Builds UID for token as `contract:token`\n */\nexport const buildUID = (contractId: ContractId, tokenId: TokenId): TokenUID => {\n    return `${contractId}:${tokenId}`\n}","import {JsonType} from './JsonType';\n\nexport type StandardInterfaceId =\n    | 'nep171'\n    | 'nep177'\n    | 'nep178'\n    | 'nep181'\n    | 'nep199'\n\n\n/**\n * Well-known smart contract interface specification\n */\nexport interface StandardInterface {\n    /** Unique interface ID */\n    id: StandardInterfaceId;\n    /** Human-readable interface name */\n    name: string;\n    /** Methods provided by interface */\n    methods: StandardInterfaceMethod[];\n}\n\nexport interface StandardInterfaceArgument {\n    name: string;\n    /**\n     * An argument can support one or multiple types\n     * (e.g. Rust's `Option<String>` becomes `['string', 'null']`)\n     */\n    type: JsonType | JsonType[];\n}\n\nexport interface StandardInterfaceMethod {\n    name: string;\n    args: StandardInterfaceArgument[];\n}\n\n/**\n * Mapping interface ID to interface specification\n */\nexport const interfaces: Readonly<Record<StandardInterfaceId, StandardInterface>> = Object.freeze({\n    nep171: {\n        id: \"nep171\",\n        name: 'NFT Core (NEP-171)',\n        methods: [\n            {\n                name: 'nft_transfer',\n                args: [\n                    {name: 'receiver_id', type: 'string'},\n                    {name: 'token_id', type: 'string'},\n                    {name: 'approval_id', type: ['number', 'null']},\n                    {name: 'memo', type: ['string', 'null']},\n                ],\n            },\n            {\n                name: 'nft_transfer_call',\n                args: [\n                    {name: 'receiver_id', type: 'string'},\n                    {name: 'token_id', type: 'string'},\n                    {name: 'approval_id', type: ['number', 'null']},\n                    {name: 'memo', type: ['string', 'null']},\n                    {name: 'msg', type: 'string'},\n                ],\n            },\n            {\n                name: 'nft_token',\n                args: [{name: 'token_id', type: 'string'}],\n            },\n        ],\n    },\n    nep177: {\n        id: \"nep177\",\n        name: 'NFT Metadata (NEP-177)',\n        methods: [\n            {\n                name: 'nft_metadata',\n                args: [],\n            },\n        ],\n    },\n    nep178: {\n        id: \"nep178\",\n        name: 'NFT Approval Management (NEP-178)',\n        methods: [\n            {\n                name: 'nft_approve',\n                args: [\n                    {name: 'token_id', type: 'string'},\n                    {name: 'account_id', type: 'string'},\n                    {name: 'msg', type: ['string', 'null']},\n                ],\n            },\n            {\n                name: 'nft_revoke',\n                args: [\n                    {name: 'token_id', type: 'string'},\n                    {name: 'account_id', type: 'string'},\n                ],\n            },\n            {\n                name: 'nft_revoke_all',\n                args: [{name: 'token_id', type: 'string'}],\n            },\n            {\n                name: 'nft_is_approved',\n                args: [\n                    {name: 'token_id', type: 'string'},\n                    {name: 'approved_account_id', type: 'string'},\n                    {name: 'approval_id', type: ['number', 'null']},\n                ],\n            },\n        ],\n    },\n    nep181: {\n        id: \"nep181\",\n        name: 'Non-Fungible Token Enumeration (NEP-181)',\n        methods: [\n            {\n                name: 'nft_total_supply',\n                args: [],\n            },\n            {\n                name: 'nft_tokens',\n                args: [\n                    {name: 'from_index', type: ['string', 'null']},\n                    {name: 'limit', type: ['number', 'null']},\n                ],\n            },\n            {\n                name: 'nft_supply_for_owner',\n                args: [{name: 'account_id', type: 'string'}],\n            },\n            {\n                name: 'nft_tokens_for_owner',\n                args: [\n                    {name: 'account_id', type: 'string'},\n                    {name: 'from_index', type: ['string', 'null']},\n                    {name: 'limit', type: ['number', 'null']},\n                ],\n            },\n        ],\n    },\n    nep199: {\n        id: \"nep199\",\n        name: 'Standard for a Multiple-Recipient-Payout mechanic on NFT Contracts (NEP-199)',\n        methods: [\n            {\n                name: 'nft_payout',\n                args: [\n                    {name: 'token_id', type: 'string'},\n                    {name: 'balance', type: 'U128'},\n                    {name: 'max_len_payout', type: 'u32'},\n                ],\n            },\n            {\n                name: 'nft_transfer_payout',\n                args: [\n                    {name: 'receiver_id', type: 'AccountId'},\n                    {name: 'token_id', type: 'string'},\n                    {name: 'approval_id', type: 'u64'},\n                    {name: 'balance', type: 'U128'},\n                    {name: 'max_len_payout', type: 'u32'},\n                ],\n            },\n        ],\n    },\n});\n","export interface TimeoutRequestInit extends RequestInit {\n    timeout: number\n}\n\nexport async function fetchWithTimeout(resource: RequestInfo, options: TimeoutRequestInit) {\n    const {timeout} = options\n    const controller = new AbortController();\n    const id = setTimeout(() => controller.abort(), timeout);\n    const response = await fetch(resource, {\n        ...options,\n        signal: controller.signal\n    });\n    clearTimeout(id);\n    return response;\n}","import {AccountId, ContractId} from \"../../../models/types\";\nimport {QueryResponseKind} from \"near-api-js/lib/providers/provider\";\nimport {JsonRpcProvider} from \"near-api-js/lib/providers\";\nimport {contractAccordance} from \"./parser/methods\";\nimport {parseContract} from \"./parser/lib\";\nimport {fetchWithTimeout} from \"../core\";\n\n\ninterface ViewCode extends QueryResponseKind {\n    code_base64: string\n}\n\n\nexport const contractAPI = {\n    /**\n     * Fetches all NFT stores (contracts) for given users.\n     *\n     * @param accountId NEAR valid account\n     */\n    fetchUserTokenContracts: (accountId: AccountId): Promise<ContractId[]> =>\n        fetchWithTimeout(\n            `https://helper.mainnet.near.org/account/${accountId}/likelyNFts`,\n            {timeout: 8000}\n        ).then(response => response.json()\n        ).catch(() => []),\n\n    /**\n     * Extracts exported functions from NEAR smart contract\n     *\n     * @param contractId NEAR contract\n     */\n    viewMethods: (contractId: ContractId) =>\n        new JsonRpcProvider('https://rpc.mainnet.near.org/')\n            .query<ViewCode>({\n                account_id: contractId,\n                finality: 'final',\n                request_type: 'view_code'\n            })\n            .then(response => contractAccordance(parseContract(response.code_base64)))\n}","export enum Marketplace {\n    MJOL = 'mjol.near',\n    PARAS = 'x.paras.near',\n    MINTBASE = 'mintbase.near',\n    MINTBASE1 = 'mintbase1.near'\n}","import {NftAPI} from \"../../get-utils\";\nimport {viewFunction} from \"../rpc\";\nimport {Nft} from \"../../../models/nft\";\nimport {TokenPrices} from \"../market/api\";\nimport {buildUID, getPrice} from \"../utils\";\nimport {Marketplace} from \"../contracts\";\n\nconst isIPFS = require('is-ipfs')\n\nfunction getRealUrl(url: string, urlHash?: string, contractId?: string) {\n    let storageLink = 'https://ipfs.fleek.co/ipfs/';\n\n    if (contractId && contractId.endsWith('mintbase1.near')) {\n        storageLink = 'https://arweave.net/';\n    }\n\n    if (url) {\n        if (url.startsWith(\"http\")) {\n            return url;\n        } else if (isIPFS.cid(url)) {\n            return storageLink + url;\n        }\n    }\n    if (urlHash && isIPFS.cid(urlHash)) {\n        return storageLink + urlHash;\n    }\n    return null\n}\n\nfunction getNftMintedSiteInfo(nft: any, contractId: string) {\n    if (contractId === Marketplace.PARAS) {\n        const holder = nft.token_id.split(':')[0];\n        return {\n            name: 'Paras',\n            nftLink: `https://paras.id/token/x.paras.near::${holder}/${nft.token_id}`\n        }\n    }\n    if (contractId.endsWith('mintbase1.near')) {\n        return {\n            name: 'Mintbase',\n            nftLink: `https://www.mintbase.io/thing/${nft.metadata.reference}:${contractId}`\n        }\n    }\n    // if (contractId === 'pluminite.near') {\n    //     return new MintSite(\n    //         'Pluminite',\n    //         `https://pluminite.com/#/gem/${nft.token_id}`\n    //     )\n    // }\n\n    if (contractId.endsWith('mjol.near')) {\n        return {\n            name: 'MjolNear',\n            nftLink: `https://mjolnear.com/nft/${contractId}/${nft.token_id}`\n        }\n    }\n    return {\n        name: 'unsupported contract',\n        nftLink: ''\n    }\n}\n\n// Input example:\n//\n// token_id: '56178:34',\n// owner_id: 'turk.near',\n// metadata: {\n//   title: 'Scent of a Cloud #34',\n//   description: null,\n//   media: 'bafybeidotqecqjq37mab2o4tlqevevpn5kgjhgeblj7zlscxt6g2rxrkau',\n//   media_hash: null,\n//   copies: 111,\n//   issued_at: '1638389142491715689',\n//   expires_at: null,\n//   starts_at: null,\n//   updated_at: null,\n//   extra: null,\n//   reference: 'bafybeicq6hg6azxaymzay7bi3cu2ozjcd7fclmqy56dzg5o5nttuzaklka',\n//   reference_hash: null\n// },\n// approved_account_ids: {}\nfunction convertStandardNFT(contractId: string, nft: any, tokenPrices: TokenPrices): Promise<Nft> {\n    const metadata = nft.metadata;\n    const mediaUrl = getRealUrl(metadata.media, metadata.media_hash, contractId);\n    if (!mediaUrl) {\n        return Promise.reject(\"Standard NFT has no media URL\")\n    }\n    const uid = buildUID(contractId, nft.token_id)\n    return Promise.resolve({\n        contractId,\n        tokenId: nft.token_id || nft.id,\n        ownerId: nft.owner_id,\n        title: metadata.title,\n        description: metadata.description,\n        copies: metadata.copies,\n        mediaURL: mediaUrl,\n        referenceURL: getRealUrl(metadata.reference, metadata.reference_hash, contractId),\n        mintSite: getNftMintedSiteInfo(nft, contractId),\n        price: getPrice(uid, tokenPrices)\n    })\n}\n\n// nfts example\n// id: 68,\n// owner_id: { Account: 'turk.near' },\n// approvals: {},\n// metadata: {\n//   title: null,\n//   description: null,\n//   media: null,\n//   media_hash: null,\n//   copies: 5,\n//   issued_at: null,\n//   expires_at: null,\n//   starts_at: null,\n//   updated_at: null,\n//   extra: null,\n//   reference: 'MIILJWlP432tEAhhhXTDwGeEMM35XxOmDKy2YFRy96Y',\n//   reference_hash: null\n// },\n// royalty: { split_between: [Object], percentage: [Object] },\n// split_owners: null,\n// minter: 'kiora.near',\n// loan: null,\n// composeable_stats: { local_depth: 0, cross_contract_children: 0 },\n// origin_key: null\n// -----------------------------------------\n// JSON example:\n// category: 'membership',\n// description: 'This token represents Proof of Attendance (PoA) for a single NEAR account at the MetaBUIDL Open House. The bearer of this token was one of the first 100 accounts that registered for the event.',\n// copies: 10,\n// media_hash: 'Zty1W1Xe8pp3sO6nBjJNIGgOfFV2E_xm25Hfm3rb1Dk',\n// lock: null,\n// visibility: 'safe',\n// youtube_url: null,\n// animation_url: null,\n// animation_hash: null,\n// document: null,\n// document_hash: null,\n// royalty: null,\n// royalty_perc: 0.1,\n// split_revenue: null,\n// tags: [ 'nearedu', 'metabuidl', 'hackathon', 'metaverse' ],\n// media: 'https://arweave.net/Zty1W1Xe8pp3sO6nBjJNIGgOfFV2E_xm25Hfm3rb1Dk',\n// extra: [\n// {\n//   trait_type: 'Start Date',\n//   value: 1630521000,\n//   display_type: 'date'\n// },\n// { trait_type: 'End Date', value: 1630521000, display_type: 'date' },\n// { trait_type: 'website', value: 'https://near.university/' }\n// ],\n// title: 'NEAR University Metaverse',\n// store: 'nuniversity.mintbase1.near',\n// external_url: 'https://near.university/',\n// type: 'NEP171'\nasync function getMintbaseNFT(contractId: string, nft: any, tokenPrices: TokenPrices): Promise<Nft> {\n    const metadata = nft.metadata;\n    const url = await viewFunction({\n            contractId,\n            methodName: 'nft_token_uri',\n            args: {\n                token_id: nft.id.toString()\n            }\n        }\n    )\n    const jsonNFT = await NftAPI.getJsonByURL(url)\n    const mediaUrl = getRealUrl(jsonNFT.media, jsonNFT.media_hash, contractId)\n    if (!mediaUrl) {\n        return Promise.reject(\"Mintbase NFT has no media URL\")\n    }\n    const uid = buildUID(contractId, nft.id.toString())\n    return Promise.resolve({\n        contractId,\n        tokenId: nft.id.toString(),\n        ownerId: nft.owner_id.Account,\n        title: jsonNFT.title,\n        description: jsonNFT.description,\n        copies: metadata.copies,\n        mediaURL: mediaUrl,\n        referenceURL: getRealUrl(nft.metadata.reference, nft.metadata.reference_hash, contractId),\n        mintSite: getNftMintedSiteInfo(nft, contractId),\n        price: getPrice(uid, tokenPrices)\n    })\n}\n\nexport async function getConvertedNFT(contractId: string, jsonNft: any, tokenPrices: TokenPrices) {\n    if (contractId.endsWith('mintbase1.near')) {\n        return getMintbaseNFT(contractId, jsonNft, tokenPrices)\n    }\n    return convertStandardNFT(contractId, jsonNft, tokenPrices)\n}","import {viewFunction} from \"../rpc\";\nimport {AccountId, ContractId, StringAmount, TokenId} from \"../../../models/types\";\n\nexport interface Payouts {\n    payout: Record<AccountId, StringAmount>\n}\n\nexport const nftAPI = {\n    /**\n     * Fetches information about NFT.\n     * Currently, supports any type of responses.\n     *\n     * @param contractId NEAR contract where NFT is stored.\n     * @param tokenId NFT token\n     */\n    fetchNft: (contractId: ContractId, tokenId: TokenId) =>\n        viewFunction({\n            contractId,\n            methodName: 'nft_token',\n            args: {\n                token_id: tokenId\n            }\n        }),\n\n\n    /**\n     * Fetches user tokens.\n     * @see [Non-Fungible Token Enumeration (NEP-181)]{@link https://nomicon.io/Standards/NonFungibleToken/Enumeration.html}\n     *\n     * @param contractId NEAR contract where NFT is stored.\n     * @param accountId a valid NEAR account\n     * @param limit the maximum number of tokens to return\n     * @param from a string representing an unsigned 128-bit integer,\n     * representing the starting index of tokens to return\n     */\n    fetchUserTokens: (\n        contractId: ContractId,\n        accountId: AccountId,\n        limit: number = 20,\n        from: number = 0\n    ): Promise<any[]> =>\n        viewFunction({\n            contractId,\n            methodName: 'nft_tokens_for_owner',\n            args: {\n                account_id: accountId,\n                from_index: from.toString(),\n                limit: limit\n            }\n        }),\n\n\n    /**\n     * Fetches standard NFT payouts.\n     * @see [Standard for a Multiple-Recipient-Payout mechanic on NFT Contracts (NEP-199)]{@link https://nomicon.io/Standards/NonFungibleToken/Payout.html}\n     *\n     * @param contractId NEAR contract where NFT is stored.\n     * @param tokenId NFT token\n     */\n    fetchTokenPayouts: (contractId: ContractId, tokenId: TokenId) =>\n        viewFunction<Payouts>({\n            contractId,\n            methodName: 'nft_payout',\n            args: {\n                token_id: tokenId,\n                balance: '100000000',\n                max_len_payout: 10\n            }\n        }),\n\n    fetchMintbaseNft: (url: string) => {\n\n    }\n}","import {mjolViewFunction} from \"../rpc\";\nimport {AccountId, ContractId, NumberAmount, Optional, StringAmount, TokenId, TokenUID} from \"../../../models/types\";\nimport {buildUID, formatOptionalPrice, formatPrice} from \"../utils\";\n\nexport interface MarketToken {\n    approval_id: number,\n    nft_contract_id: ContractId,\n    owner_id: AccountId,\n    price: NumberAmount,\n    token_id: TokenId\n}\n\nexport interface MarketData {\n    tokens: MarketToken[],\n    has_next_batch: boolean,\n    total_count: number\n}\n\nexport type TokenPrices = Record<TokenUID, Optional<StringAmount>>\n\n\nexport const marketAPI = {\n    /**\n     * Fetches NFTs listed on market.<br>\n     * If an error occurred returns empty array.\n     *\n     * @param from  start index for fetching\n     * @param limit maximum amount of fetched tokens\n     */\n    fetchTokens: (from: number, limit: number): Promise<MarketData> =>\n        mjolViewFunction<MarketData>({\n                methodName: 'get_nfts',\n                args: {\n                    from,\n                    limit\n                }\n            }\n        ).catch(() => ({\n            tokens: [],\n            has_next_batch: false,\n            total_count: 0\n        })),\n\n    /**\n     * Fetches market NFTs prices for given user\n     *\n     * @param accountId NEAR account\n     */\n    fetchUserTokenPrices: (accountId: AccountId): Promise<TokenPrices> => {\n        const prices: TokenPrices = {}\n        return mjolViewFunction<MarketToken[]>({\n                methodName: 'get_user_nfts',\n                args: {\n                    owner_id: accountId\n                }\n            }\n        ).then(tokens => {\n                tokens.forEach(nft => {\n                        const uid = buildUID(nft.nft_contract_id, nft.token_id)\n                        prices[uid] = formatPrice(nft.price)\n                    }\n                )\n                return prices\n            }\n        ).catch(() => prices)\n    },\n\n    /**\n     * Retrieves NFT price if NFT listed on market, otherwise returns null\n     */\n    fetchTokenPrice: (contractId: ContractId, tokenId: TokenId): Promise<TokenPrices> => {\n        const tokenUID = buildUID(contractId, tokenId)\n        return mjolViewFunction<Optional<NumberAmount>>({\n                methodName: 'get_nft_price',\n                args: {\n                    token_uid: tokenUID\n                }\n            }\n        ).then(price => ({\n            [tokenUID]: formatOptionalPrice(price)\n        }))\n    }\n}","export interface BatchResult<R> {\n    values: R[],\n    errors: any[]\n}\n\n/**\n * Batch async requests\n *\n * @param batch list of elements to process\n * @param request any function that accepts value and returns {@link Promise}\n */\nexport async function batchRequest<T, R = any>(\n    batch: T[],\n    request: ((data: T) => Promise<R>)\n): Promise<BatchResult<R>> {\n    let values: R[] = []\n    let errors: any[] = []\n\n    const results = await Promise.all(\n        batch.map(data =>\n            request(data)\n                .then(value => ({value}))\n                .catch(error => ({error}))\n        )\n    )\n\n    results.forEach(result => 'error' in result\n        ? errors.push(result.error)\n        : values.push(result.value)\n    )\n\n    return {values, errors}\n}","import {getConvertedNFT} from \"../standardization\";\nimport {nftAPI} from \"./api\";\nimport {marketAPI} from \"../market\";\nimport {AccountId, ContractId, TokenId} from \"../../../models/types\";\nimport {contractAPI} from \"../contracts\";\nimport {batchRequest} from \"../batch-request\";\n\nexport const getNFTsByContractAndTokenId = async (contractId: ContractId, tokenId: TokenId) => {\n    const jsonNft = await nftAPI.fetchNft(contractId, tokenId)\n    const tokenPrice = await marketAPI.fetchTokenPrice(contractId, tokenId);\n    return getConvertedNFT(contractId, jsonNft, tokenPrice)\n}\n\nexport async function getNftPayouts(contractId: string, tokenId: string) {\n    const TREASURY_PERCENT = 2;\n    return nftAPI.fetchTokenPayouts(contractId, tokenId)\n        .then(payouts => {\n            let royalties: Record<string, number> = {'treasury': TREASURY_PERCENT};\n            let highestPayout = null;\n            for (let payoutKey in payouts['payout']) {\n                const payoutVal = parseInt(payouts['payout'][payoutKey]) / 1000000;\n                if (!highestPayout || highestPayout[1] < payoutVal) {\n                    highestPayout = [payoutKey, payoutVal]\n                }\n                royalties[payoutKey] = payoutVal\n            }\n            if (highestPayout) {\n                delete royalties[highestPayout[0]]\n            }\n            delete royalties['undefined']\n\n            return royalties\n        })\n}\n\nfunction addExtraContracts(curContracts: string[]) {\n    const extraContracts = ['mjol.near'];\n    for (let contract of extraContracts) {\n        if (!curContracts.includes(contract)) {\n            curContracts.push('mjol.near');\n        }\n    }\n    return curContracts\n}\n\nexport async function getUserNfts(accountId: AccountId) {\n\n    let nftContracts = await contractAPI.fetchUserTokenContracts(accountId)\n    nftContracts = addExtraContracts(nftContracts)\n    const tokenPrices = await marketAPI.fetchUserTokenPrices(accountId);\n\n    const fetchNfts = (contractId: ContractId) =>\n        nftAPI.fetchUserTokens(contractId, accountId)\n            .then(nfts => batchRequest(nfts,\n                token => getConvertedNFT(contractId, token, tokenPrices)).then(result => result.values)\n            )\n\n    return batchRequest(nftContracts, fetchNfts)\n        .then(result => result.values.flat())\n}\n\n\n","import {getUserNfts} from \"../../business-logic/near/api/nfts/get-user-nfts\";\n\nimport {AppDispatch} from \"../store\";\nimport {profileSlice} from \"./slice\";\n\nexport const fetchMyNfts = (accountId: string) =>\n    async (dispatch: AppDispatch) => {\n        dispatch(profileSlice.actions.toggleFetching(true))\n        getUserNfts(accountId)\n            .then(nfts => dispatch(profileSlice.actions.setPageData(nfts)))\n            .finally(() => dispatch(profileSlice.actions.toggleFetching(false)))\n    }","import React from 'react';\n\nconst MjolLoader = React.memo(({width = 30, height = 30}) => {\n    return (\n        <div className=\"flex items-center justify-center w-full h-full\">\n            <div style={{\n                border: \"4px solid #f3f3f3\", /* Light grey */\n                borderTop: \"4px solid #3498db\", /* Blue */\n                borderRadius: '50%',\n                width,\n                height,\n                animation: \"spin 1s linear infinite\"\n            }}/>\n        </div>\n    );\n});\n\nexport default MjolLoader;","import React, {useState} from 'react';\nimport {LazyLoadImage, ScrollPosition} from 'react-lazy-load-image-component';\nimport 'react-lazy-load-image-component/src/effects/opacity.css';\nimport MjolLoader from \"../../Common/loaders/MjolLoader\";\n\ninterface PropTypes {\n    path: string,\n    scrollPosition?: ScrollPosition\n}\n\nconst ImageBlock: React.FC<PropTypes> = ({path, scrollPosition}) => {\n\n    const [loading, setLoading] = useState(true)\n\n    return (\n        <div className=\"aspect-w-1 aspect-h-1 justify-center\">\n            <LazyLoadImage src={path}\n                           alt=\"media not supported\"\n                           effect=\"opacity\"\n                           threshold={100}\n                           scrollPosition={scrollPosition}\n                           afterLoad={() => setLoading(false)}\n                           style={{\n                               width: \"100%\",\n                               height: \"100%\",\n                               objectFit: \"contain\",\n                           }}\n            />\n            {loading &&\n                <div className=\"flex items-center justify-center\">\n                    <MjolLoader/>\n                </div>\n            }\n        </div>\n    );\n};\n\nexport default ImageBlock;","import React from 'react';\nimport {GoUnverified, GoVerified} from \"react-icons/go\";\nimport DarkBlueMjolText from \"../../Common/text/DarkBlueMjolText\";\n\n\ninterface PropsTypes {\n    market?: string,\n    link?: string\n}\n\nconst MintedBlock = React.memo<PropsTypes>(({market, link}) => {\n    return (\n        <>\n            <div className=\"flex gap-1 items-center\">\n                {market !== 'unsupported contract'\n                    ? <GoVerified size={14} color=\"#18b3cc\"/>\n                    : <GoUnverified size={14} color=\"\"/>\n                }\n                <a className=\"text-mjol-purple-dark opacity-80 font-bold text-tiny-4 hover:opacity-90\"\n                   href={link}\n                   target=\"_blank\"\n                >\n                    {market === 'unsupported contract' ? 'Not verified' : `Minted on ${market}`}\n                </a>\n            </div>\n            <hr className=\"border-mjol-purple-dark\"/>\n        </>\n    );\n});\n\nexport default MintedBlock;","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\ninterface PropTypes {\n    title: string,\n    previewLink: string\n}\n\nconst TitleBlock = React.memo<PropTypes>(({title, previewLink}) => {\n    return (\n        <Link to={previewLink} className=\"font-bold text-mjol-purple-dark truncate text-md\">\n            {title}\n        </Link>\n    );\n});\n\nexport default TitleBlock;","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\ninterface PropTypes {\n    name: string,\n    link: string\n}\n\nconst CollectionBlock = React.memo<PropTypes>(({name, link}) => {\n    return (\n        <Link className=\"text-xs-2 font-semibold truncate text-mjol-purple-dark opacity-75 hover:opacity-90\"\n              to={link}\n        >\n            {name}\n        </Link>\n    );\n});\n\nexport default CollectionBlock;","export default __webpack_public_path__ + \"static/media/near-protocol-near-logo.3c418991.svg\";","import React from 'react';\nimport logo from '../../../resources/near-protocol-near-logo.svg'\n\nconst NearBlackLogo = React.memo(({width = 15, height = 15}) => {\n    return <img width={height} height={width} src={logo} alt=\"near\"/>\n});\n\nexport default NearBlackLogo;","import React from 'react';\nimport NearBlackLogo from \"../../Icons/near/NearBlackLogo\";\nimport DarkBlueMjolText from \"../../Common/text/DarkBlueMjolText\";\n\ninterface PropTypes {\n    price: string | null\n}\n\nconst PriceBlock = React.memo<PropTypes>(({price}) => {\n    const isListed = price !== null\n    return (\n        <div className=\"mt-2 mb-1 grid place-items-end\">\n            <div className=\"flex items-center gap-2\">\n                <p className=\"text-mjol-cyan-base font-black text-lg\">\n                    {isListed ? price : \"Not listed\"}\n                </p>\n                {isListed && <NearBlackLogo/>}\n            </div>\n        </div>\n    );\n});\n\nexport default PriceBlock;","import React from 'react';\nimport ImageBlock from \"./Blocks/ImageBlock\";\nimport MintedBlock from \"./Blocks/MintedBlock\";\nimport TitleBlock from \"./Blocks/TitleBlock\";\nimport CollectionBlock from \"./Blocks/CollectionBlock\";\nimport PriceBlock from \"./Blocks/PriceBlock\";\nimport {Nft} from \"../../business-logic/models/nft\";\nimport {Link} from \"react-router-dom\";\nimport {ScrollPosition} from \"react-lazy-load-image-component\";\n\ninterface PropTypes {\n    nft: Nft,\n    scrollPosition?: ScrollPosition\n}\n\nconst Card: React.FC<PropTypes> = ({nft, scrollPosition}) => {\n\n    const previewLink = `/nft/${nft.contractId}/${nft.tokenId}`\n    return (\n        <div className=\"flex flex-col justify-between overflow-hidden w-full rounded-xl\n                        ring-1 ring-blue-300 select-none\n                        transform hover:shadow-mjol-medium-blue-all-xs\"\n        >\n            <Link to={previewLink}>\n                <ImageBlock path={nft.mediaURL} scrollPosition={scrollPosition}/>\n            </Link>\n            <div className=\"px-2 xxs:px-5 mt-1\">\n                <div className=\"flex flex-col mb-4\">\n                    <TitleBlock title={nft.title} previewLink={previewLink}/>\n                    <CollectionBlock link=\"MOCK\" name=\"Mock collection\"/>\n                </div>\n                <MintedBlock market={nft.mintSite?.name} link={nft.mintSite?.nftLink}/>\n                <PriceBlock price={nft.price}/>\n            </div>\n        </div>\n    );\n};\n\nexport default Card;","import React from 'react';\n\nconst ItemsGridContainer: React.FC = ({children}) => {\n    return (\n        <div className=\"grid gap-6 lg:gap-7 2xl:gap-10 justify-center\n                                 grid-cols-1\n                                 xxs:grid-cols-1nft-300\n                                 sm:grid-cols-2nft-300\n                                 lg:grid-cols-3nft-300\n                                 xl:grid-cols-4nft-300\"\n        >\n            {children}\n        </div>\n    );\n};\n\nexport default ItemsGridContainer;","import Card from \"../Card/Card\";\nimport React from \"react\";\nimport {Nft} from \"../../business-logic/models/nft\";\nimport ItemsGridContainer from \"./ItemsGridContainer\";\nimport {ScrollPosition} from \"react-lazy-load-image-component\";\n\ninterface PropTypes {\n    nfts: Nft[],\n    scrollPosition?: ScrollPosition\n}\n\nconst CardGrid: React.FC<PropTypes> = ({nfts, scrollPosition}) => {\n    return (\n        <ItemsGridContainer>\n            {nfts.map(nft =>\n                <Card key={nft.tokenId + nft.contractId} nft={nft} scrollPosition={scrollPosition}/>\n            )}\n        </ItemsGridContainer>\n    )\n};\n\nexport default CardGrid;\n","import React from 'react';\n\ninterface PropTypes {\n    size?: number,\n    className?: string\n}\n\nconst CardLoader = React.memo<PropTypes>(({size = 300, ...props}) => {\n    const gradient = (direction: string) =>\n        `linear-gradient(to ${direction}, rgb(229, 232, 235), rgba(255, 255, 255, 0))`\n\n    return (\n        <div {...props}>\n            <div className=\"flex flex-col ring-1 rounded-xl ring-gray-200 overflow-hidden pulse-animation w-full\n                        transform hover:shadow-mjol-gray-xs hover:ring-inset\"\n            >\n                {/* Image block */}\n                <div style={{\n                    width: size,\n                    height: size,\n                    background: gradient('right')\n                }}>\n                </div>\n\n                <div className=\"py-2 px-2 xxs:px-5 space-y-0.5 mt-0.5\">\n                    {/* Title block */}\n                    <div className=\"inline-flex justify-between w-full rounded-lg overflow-hidden\"\n                         style={{\n                             height: '18px'\n                         }}\n                    >\n                        <div style={{\n                            background: gradient('right'),\n                            width: \"35%\",\n                        }}/>\n                        <div style={{\n                            background: gradient('left'),\n                            width: \"20%\"\n                        }}/>\n                    </div>\n\n                    {/* Subtitle block */}\n                    <div className=\"inline-flex justify-between w-full rounded-lg overflow-hidden\"\n                         style={{\n                             height: \"15px\"\n                         }}\n                    >\n                        <div style={{\n                            background: gradient('right'),\n                            width: \"50%\",\n                        }}/>\n                        <div style={{\n                            background: gradient('left'),\n                            width: \"25%\"\n                        }}/>\n                    </div>\n                </div>\n\n                {/* Price block */}\n                <div className=\"w-full mt-4 px-2 xxs:px-5 pt-3 pb-1\"\n                     style={{\n                         background: \"linear-gradient(rgba(229, 232, 235, 0.392) 0%, rgb(255, 255, 255) 20%)\"\n                     }}>\n                    <div className=\"inline-flex w-full justify-between rounded-lg overflow-hidden\"\n                         style={{\n                             height: '17px'\n                         }}\n                    >\n                        <div style={{\n                            background: gradient('right'),\n                            width: \"50%\",\n                        }}/>\n                        <div style={{\n                            background: gradient('left'),\n                            width: \"25%\"\n                        }}/>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n});\n\nexport default CardLoader;","import CardLoader from \"./CardLoader\";\nimport React from \"react\";\nimport ItemsGridContainer from \"../CardList/ItemsGridContainer\";\n\nconst CardListLoader = React.memo(() => {\n    return (\n        <ItemsGridContainer>\n            <CardLoader/>\n            <CardLoader className=\"hidden sm:block\"/>\n            <CardLoader className=\"hidden lg:block\"/>\n            <CardLoader className=\"hidden xl:block\"/>\n        </ItemsGridContainer>\n    )\n});\n\nexport default CardListLoader","import React, {useEffect} from 'react';\nimport {useAppDispatch, useAppSelector} from \"../../hooks/redux\";\nimport {PROFILE_TAB, profileSlice} from \"../../state/profile/slice\";\nimport {fetchMyNfts} from \"../../state/profile/thunk\";\nimport CardGrid from \"../../components/CardList/CardGrid\";\nimport CardListLoader from \"../../components/Card/CardListLoader\";\n\ninterface PropTypes {\n    accountId: string\n}\n\nconst ProfileNftsFetch: React.FC<PropTypes> = ({accountId}) => {\n    const {nfts, fetching, activeTab} = useAppSelector(state => state.profile)\n    const dispatch = useAppDispatch()\n\n    useEffect(() => {\n\n        dispatch(fetchMyNfts(accountId))\n\n        return () => {\n            dispatch(profileSlice.actions.resetNfts())\n        }\n    }, [accountId])\n\n    return (\n        <>\n            {fetching\n                ? <CardListLoader/>\n                : <CardGrid nfts={activeTab === PROFILE_TAB.LISTED_NFTS\n                    ? nfts.filter(nft => nft.price !== null)\n                    : nfts\n                }/>\n            }\n        </>\n    );\n};\n\nexport default ProfileNftsFetch;","export default function classNames(...classes) {\n    return classes.filter(Boolean).join(' ')\n}","import React from 'react';\nimport classNames from \"../../../utils/css-utils\";\nimport DarkBlueMjolText from \"../text/DarkBlueMjolText\";\n\nconst MjolBlueGradientButton = ({title, onClick, isActive = true}) => {\n\n    return (\n        <button onClick={onClick}\n                className={\n                    classNames(isActive\n                            ? \"from-blue-500 to-blue-800\"\n                            : \"hover:shadow-mjol-blue-button hover:ring-1 hover:ring-inset hover:ring-blue-400\"\n                        ,\n                        \"bg-gradient-to-l from-transparent to-transparent rounded-3xl group px-10 py-2 transform duration-200\"\n                    )\n                }\n        >\n            {isActive\n                ? <div className=\"text-white font-extrabold\">{title}</div>\n                : <DarkBlueMjolText text={title}/>\n            }\n        </button>\n    );\n};\n\nexport default MjolBlueGradientButton;","import React from 'react';\nimport MjolBlueGradientButton from \"../../../Common/buttons/MjolBlueGradientButton\";\nimport DarkBlueTitle from \"../../../Common/text/DarkBlueTitle\";\nimport BlueShadowContainer from \"../../../Common/shadow/BlueShadowContainer\";\n\nconst ProfileNavigationBar = React.memo(({onTabChange, activeTab, tabs}) => {\n\n    const navbar = tabs.map(item =>\n        <MjolBlueGradientButton key={item}\n                                title={item}\n                                isActive={item === activeTab}\n                                onClick={() => onTabChange(item)}\n        />)\n\n    return (\n        <BlueShadowContainer>\n            <div className=\"pb-10 space-y-10\">\n                <DarkBlueTitle title=\"My NFTs\"/>\n                <div className=\"text-center\">\n                    <div className=\"inline-flex flex-col gap-2 sm:flex-row sm:gap-5 md:text-lg\"\n                    >\n                        {navbar}\n                    </div>\n                </div>\n            </div>\n        </BlueShadowContainer>\n    );\n});\n\nexport default ProfileNavigationBar;","import React from 'react';\nimport ProfileNavigationBar from \"./navbar/ProfileNavigationBar\";\n\nconst ProfilePage = ({tabs, activeTab, onTabChange, children}) => {\n    return (\n        <div className=\"space-y-8 pb-4 min-h-screen\">\n            <ProfileNavigationBar onTabChange={onTabChange}\n                                  activeTab={activeTab}\n                                  tabs={tabs}/>\n\n            {children}\n        </div>\n    );\n};\n\nexport default ProfilePage;","import React from 'react';\nimport {useAppDispatch, useAppSelector} from \"../../hooks/redux\";\nimport withAccountId from \"../withAccountId\";\nimport {PROFILE_TAB, profileSlice} from \"../../state/profile/slice\";\nimport ProfileHistoryFetch from \"./ProfileHistoryFetch\";\nimport ProfileNftsFetch from \"./ProfileNftsFetch\";\nimport ProfilePage from \"../../components/Pages/profile/ProfilePage\";\n\nconst ProfileFetch = ({accountId}) => {\n    const {activeTab, tabs} = useAppSelector(state => state.profile)\n    const dispatch = useAppDispatch()\n\n    const render = (children) =>\n        <ProfilePage tabs={tabs}\n                     activeTab={activeTab}\n                     onTabChange={tab => dispatch(profileSlice.actions.changeTab(tab))}>\n            {children}\n        </ProfilePage>\n\n    switch (activeTab) {\n        case PROFILE_TAB.ALL_NFTS:\n        case PROFILE_TAB.LISTED_NFTS:\n            return render(<ProfileNftsFetch accountId={accountId}/>)\n        case PROFILE_TAB.HISTORY:\n            return render(<ProfileHistoryFetch accountId={accountId}/>)\n    }\n};\n\nexport default withAccountId(ProfileFetch);","import React, {useState} from 'react';\nimport MjolLoader from \"../Common/loaders/MjolLoader\";\n\nconst PreviewNftImage = ({link}) => {\n\n    const [loading, setLoading] = useState(true)\n\n    return (\n        <div className=\"justify-self-center md:justify-self-end w-full max-w-2xl\">\n            <img src={link}\n                 alt=\"media not supported\"\n                 className=\"w-full max-h-xl object-contain\"\n                 onLoad={() => setLoading(false)}\n            />\n            {loading && <MjolLoader width={60} height={60}/>}\n        </div>\n    );\n};\n\nexport default PreviewNftImage;","import React from 'react';\n\nconst Hr = React.memo(({color = \"bg-black\"}) => {\n    return <div className={color + \" h-px\"}/>\n});\n\nexport default Hr;","import {ChevronUpIcon} from '@heroicons/react/solid'\nimport React, {useState} from \"react\";\nimport classNames from \"../../../utils/css-utils\";\nimport Hr from \"../borders/Hr\";\n\nexport default function DropDownMjolBlueButton({buttonContent, children, initialVisible = false}) {\n\n    const [visible, setVisible] = useState(initialVisible)\n\n    return (\n        <div>\n            <button onClick={() => setVisible(!visible)}\n                    className={\n                        classNames(visible\n                                ? \"rounded-t-lg\"\n                                : \"rounded-lg\",\n                            \"group flex justify-between p-5 w-full text-md font-semibold text-left bg-blue-100\"\n                        )\n                    }\n            >\n                {buttonContent}\n                <ChevronUpIcon\n                    className={\n                        classNames(visible\n                                ? \"\"\n                                : \"rotate-180\",\n                            \"transform duration-200 w-6 h-6 text-gray-500 group-hover:text-black\"\n                        )\n                    }\n                />\n            </button>\n            {visible &&\n                <>\n                    <div className=\"px-2 bg-blue-100\">\n                        <Hr color=\"bg-gray-600\"/>\n                    </div>\n                    {children}\n                </>\n            }\n        </div>\n    )\n}","import React from 'react';\n\nconst IconText = ({icon, text}) => {\n    return (\n        <div className=\"gap-2 flex flex-row items-center\">\n            {icon}\n            {text}\n        </div>\n    );\n};\n\nexport default IconText;","export enum ItemMarketStatus {\n    // Item is owned by current user and listed on transaction.\n    LISTED = \"LISTED\",\n\n    // Item is owned by current user and not listed on transaction.\n    CAN_SELL = \"CAN_SELL\",\n\n    // Item is owned by another user and listed on transaction\n    CAN_BUY = \"CAN_BUY\",\n\n    // Item is owned by another user and not listed on transaction.\n    FREE = \"FREE\",\n\n    // Item contract is not supported\n    NOT_SUPPORTED = \"NOT_SUPPORTED\",\n}\n\n\nexport interface TransactionStatus {\n    pending: boolean | undefined,\n    success: boolean | undefined\n}","export const shortenString = (string, chunkSize = 5, sizeToSplit = 15) => {\n    if (string.length > sizeToSplit) {\n        return string.slice(0, chunkSize) + '..' + string.slice(-chunkSize)\n    }\n    return string\n}\n\nexport const getPercentage = (\n    value,\n    percentage,\n    minValue = 0,\n    maxValue = MAX_ITEM_PRICE,\n    defaultValue = 0\n) => {\n    if (value < 0 || value > maxValue) {\n        return defaultValue\n    }\n    return (percentage / 100) * value\n}\n\nexport const getStringPercentage = (\n    value,\n    percentage,\n    minValue = 0,\n    maxValue = MAX_ITEM_PRICE,\n    defaultValue = 0,\n    maximumFractionDigits = 4\n) => {\n    return getPercentage(value, percentage, minValue, maxValue, defaultValue)\n        .toLocaleString(\n            'en-US',\n            {maximumFractionDigits}\n        )\n}\n\nexport const MAX_ITEM_PRICE = 10_000_000","import React from 'react';\nimport {shortenString} from \"../../../utils/string\";\nimport ReactTooltip from 'react-tooltip';\n\nconst PreviewAttribute = React.memo(({name, value}) => {\n    let shrinkValue = shortenString(value)\n    return (\n        <div className=\"flex flex-row justify-between\">\n            <div className=\"font-semibold\">{name}</div>\n            <p className=\"cursor-pointer\"\n               data-tip={value}\n               onClick={() => navigator.clipboard.writeText(value)}\n            >\n                {shrinkValue}\n            </p>\n            <ReactTooltip className='text-sm' type='dark' place='bottom' delayShow={200}/>\n        </div>\n    );\n});\n\nexport default PreviewAttribute;","import React from 'react';\nimport PreviewAttribute from \"./PreviewAttribute\";\n\nconst PreviewAttributes = ({attributes}) => {\n    return (\n        <div>\n            {attributes.length === 0\n                ? <div>Not found</div>\n                : attributes.map(attribute =>\n                    <PreviewAttribute key={attribute.name}\n                                      name={attribute.name}\n                                      value={attribute.value}\n                    />\n                )}\n        </div>\n    );\n};\n\nexport default PreviewAttributes;","import React from 'react';\n\nconst NftPreviewTitle = React.memo(({title}) => {\n    return (\n        <div className=\"font-extrabold text-mjol-purple-dark text-lg md:text-xl\">\n            {title}\n        </div>\n    );\n});\n\nexport default NftPreviewTitle;","import React from 'react';\n\nconst ShareIcon = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"30\" viewBox=\"0 0 24 24\" fill=\"none\"\n             stroke=\"currentColor\"\n             strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"tw-mr-1\" color=\"black\">\n            <circle cx=\"18\" cy=\"5\" r=\"3\"/>\n            <circle cx=\"6\" cy=\"12\" r=\"3\"/>\n            <circle cx=\"18\" cy=\"19\" r=\"3\"/>\n            <line x1=\"8.59\" y1=\"13.51\" x2=\"15.42\" y2=\"17.49\"/>\n            <line x1=\"15.41\" y1=\"6.51\" x2=\"8.59\" y2=\"10.49\"/>\n        </svg>\n    );\n};\n\nexport default ShareIcon;\n","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport ShareIcon from \"../../Icons/ShareIcon\";\n\nconst NftPreviewCollectionLink = React.memo(({name, link}) => {\n    return (\n        <div className=\"flex flex-row justify-between\">\n            <div className=\"text-md md:text-lg font-bold text-mjol-purple-dark-t hover:bg-opacity-80 text-center\">\n                <Link to={link}>{name}</Link>\n            </div>\n            <ShareIcon/>\n        </div>\n    );\n});\n\nexport default NftPreviewCollectionLink;","import DropDownMjolBlueButton from \"../../Common/buttons/DropDownMjolBlueButton\";\nimport IconText from \"../../Icons/IconText\";\nimport {BsList} from 'react-icons/bs';\nimport {MdAccountBalanceWallet as MdAcc} from 'react-icons/md'\nimport {GrMoney} from 'react-icons/gr'\nimport {GiBuyCard} from 'react-icons/gi'\nimport {BiDna} from 'react-icons/bi'\nimport PreviewAttributes from \"../Attributes/PreviewAttributes\";\nimport NftPreviewTitle from \"./NftPreviewTitle\";\nimport NftPreviewCollectionLink from \"./NftPreviewCollectionLink\";\n\n\nconst NftPreviewInfo = ({nft, payouts, statusElement}) => {\n\n    const ownerAttributes = [\n        {name: \"Owner ID\", value: nft.ownerId || \"Not found\"},\n        {name: \"Token ID\", value: nft.tokenId || \"Not found\"},\n        {name: \"Contract\", value: nft.contractId || \"Not found\"}\n    ]\n\n    const formattedPayouts = Object.entries(payouts).map(kv => {\n        const [name, value] = kv\n        return {name, value: `${value}%`}\n    })\n\n    const tabs = [\n        {name: \"Description\", element: nft.description || \"Not found\", icon: <BsList/>},\n        {name: \"Attributes\", element: <PreviewAttributes attributes={ownerAttributes}/>, icon: <MdAcc/>},\n        {name: \"Royalties\", element: <PreviewAttributes attributes={formattedPayouts}/>, icon: <GrMoney/>},\n        {name: \"History\", element: \"Not found\", icon: <GiBuyCard/>},\n        {name: \"Traits\", element: \"Not found\", icon: <BiDna/>}\n    ]\n\n\n    return (\n        <div className=\"space-y-5 md:max-w-xl\">\n            <div>\n                <NftPreviewTitle title={nft.title}/>\n                <NftPreviewCollectionLink name=\"MOCK\" link=\"\"/>\n            </div>\n            {statusElement}\n            <div className=\"space-y-3\">\n                {tabs.map(tab => (\n                    <DropDownMjolBlueButton key={tab.name}\n                                            buttonContent={\n                                                <IconText icon={tab.icon}\n                                                          text={tab.name}\n                                                />\n                                            }>\n                        <div className=\"rounded-b-lg w-full bg-blue-100 text-black font-medium text-sm px-5 py-2\">\n                            {tab.element}\n                        </div>\n                    </DropDownMjolBlueButton>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default NftPreviewInfo;","import React from 'react';\n\nimport PreviewNftImage from \"../../../Preview/PreviewNftImage\";\nimport NftPreviewInfo from \"../../../Preview/Blocks/NftPreviewInfo\";\n\nconst PreviewNftPage = ({nft, payouts, statusElement}) => {\n    return (\n        <div className=\"grid md:grid-cols-2 gap-8 min-h-screen bg-mjol-white p-5 xs:p-10 md:items-start\">\n            <PreviewNftImage link={nft.mediaURL}/>\n            <NftPreviewInfo nft={nft}\n                            payouts={payouts}\n                            statusElement={statusElement}\n            />\n        </div>\n    );\n};\n\nexport default PreviewNftPage;","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport {Nft} from \"../../../business-logic/models/nft\";\nimport {act} from \"react-dom/test-utils\";\n\nexport interface PreviewNftState {\n    fetching: boolean,\n    success?: boolean,\n    nft?: Nft,\n    payouts: Record<string, number>\n}\n\n\nconst initialState: PreviewNftState = {\n    payouts: {},\n    fetching: true,\n}\n\nexport const previewNftSlice = createSlice({\n    name: \"preview-nft\",\n    initialState,\n    reducers: {\n        success: (state, action: PayloadAction<Nft>) => {\n            state.nft = action.payload\n        },\n        failure: (state) => {\n            state.nft = undefined\n        },\n        toggleFetching: (state, action: PayloadAction<boolean>) => {\n            state.fetching = action.payload\n        },\n        setPayouts: (state, action: PayloadAction<Record<string, number>>) => {\n            state.payouts = action.payload\n        },\n        reset: () => initialState\n    }\n})\n\nexport const previewNftReducer = previewNftSlice.reducer","import React from 'react';\n\nconst DarkBlueGradientButton = ({title, ...props}) => {\n    return (\n        <button {...props}\n                className=\"w-full text-white font-extrabold\n                           bg-gradient-to-l from-blue-500 to-blue-800 rounded-lg px-10 py-2\n                           hover:from-blue-600\n                           hover:to-blue-800\n                           hover:shadow-mjol-gray-xs\n                           disabled:opacity-50\n                           disabled:cursor-not-allowed\"\n        >\n            {title}\n        </button>\n    )\n}\n\nexport default DarkBlueGradientButton;","import React from 'react';\nimport DarkBlueMjolText from \"../../Common/text/DarkBlueMjolText\";\nimport NearBlackLogo from \"../../Icons/near/NearBlackLogo\";\n\n\nconst PreviewNftPrice = React.memo(({price}) => {\n    return (\n        <div className=\"flex items-center gap-2 text-xl\">\n            <DarkBlueMjolText text={price}/>\n            <NearBlackLogo/>\n        </div>\n    );\n});\n\nexport default PreviewNftPrice;","import React from 'react';\nimport PreviewNftPrice from \"../Blocks/PreviewNftPrice\";\n// import PreviewNftPrice from \"../../../Small/Blocks/\";\n\nconst withPriceContainer = (Component) => ({price, ...props}) => {\n    return (\n        <div className=\"rounded-lg px-5 py-2 space-y-2 bg-blue-100\">\n            <PreviewNftPrice price={price}/>\n            <Component {...props}/>\n        </div>\n    );\n};\n\nexport default withPriceContainer;","import React from 'react';\nimport DarkBlueGradientButton from \"../../Common/buttons/DarkBlueGradientButton\";\nimport withPriceContainer from \"./withPriceContainer\";\n\nconst BuyNftContainer = (props) => {\n    return <DarkBlueGradientButton title=\"Buy NFT\" {...props}/>;\n};\n\nexport default withPriceContainer(BuyNftContainer);","import {TransactionStatus} from \"../state\";\nimport {createSlice} from \"@reduxjs/toolkit\";\n\nconst initialState: TransactionStatus = {\n    pending: undefined,\n    success: undefined\n}\n\nexport const marketNftTransactionSlice = createSlice({\n    name: 'market-nft-transaction',\n    initialState,\n    reducers: {\n        commit: (state) => {\n            state.pending = true\n        },\n        success: (state) => {\n            state.success = true\n            state.pending = false\n        },\n        failure: (state) => {\n            state.success = false\n            state.pending = false\n        },\n        reset: () => initialState\n    }\n})\n\nexport const marketNftTransactionReducer = marketNftTransactionSlice.reducer","import {utils} from \"near-api-js\";\nimport {GAS, SM_DEPOSIT, YOCTO_NEAR} from \"../../constants\";\nimport {functionCall, mjolFunctionCall} from \"../rpc\";\nimport BN from \"bn.js\";\nimport {MJOL_MARKET_CONTRACT_ID} from \"../../enviroment/contract-names\";\nimport {ContractId, StringAmount, TokenId} from \"../../../models/types\";\nimport {Nft} from \"../../../models/nft\";\n\n\nexport function giveApprove(contractId: ContractId, tokenId: TokenId, stringPrice: StringAmount, nft: Nft) {\n    const price = utils.format.parseNearAmount(stringPrice.toString());\n\n    const json_nft = {\n        \"contract_id\": nft.contractId,\n        \"token_id\": nft.tokenId,\n        \"owner_id\": nft.ownerId,\n        \"title\": nft.title,\n        \"description\": nft.description,\n        \"copies\": nft.copies ? (nft.copies).toString() : \"1\",\n        \"media_url\": nft.mediaURL,\n        \"reference_url\": nft.referenceURL,\n        \"mint_site\": nft.mintSite ? {\n            \"name\": nft.mintSite.name,\n            \"nft_link\": nft.mintSite.nftLink\n        } : {\n            \"name\": \"\",\n            \"nft_link\": \"\"\n        },\n        \"price\":price\n    }\n\n    console.log(JSON.stringify({json_nft}));\n\n    return functionCall({\n        contractId,\n        methodName: 'nft_approve',\n        args: {\n            token_id: tokenId,\n            account_id: MJOL_MARKET_CONTRACT_ID,\n            msg: JSON.stringify({json_nft})\n        },\n        gas: GAS,\n        attachedDeposit: SM_DEPOSIT\n    })\n}\n\nexport function buyNftWithPayouts(contractId: ContractId, tokenId: TokenId, price: StringAmount) {\n    const nearAmount = utils.format.parseNearAmount(price) || \"0\";\n    return mjolFunctionCall({\n        methodName: 'buy_with_payouts',\n        args: {\n            nft_contract_id: contractId,\n            token_id: tokenId\n        },\n        gas: GAS,\n        attachedDeposit: new BN(nearAmount)\n    })\n}\n\nexport function unlistNFT(contractId: ContractId, tokenId: TokenId) {\n    return mjolFunctionCall({\n        methodName: 'remove_from_market',\n        args: {\n            nft_contract_id: contractId,\n            token_id: tokenId\n        },\n        gas: GAS,\n        attachedDeposit: YOCTO_NEAR\n    })\n}","import {AppDispatch} from \"../../store\";\nimport {marketNftTransactionSlice} from \"./slice\";\nimport {buyNftWithPayouts, giveApprove, unlistNFT} from \"../../../business-logic/near/api/market/transaction\";\nimport {Nft} from \"../../../business-logic/models/nft\";\n\nexport const sellNft = (contractId: string, tokenId: string, price: string, nft: Nft) =>\n    async (dispatch: AppDispatch) => {\n        dispatch(marketNftTransactionSlice.actions.commit())\n        giveApprove(contractId, tokenId, price, nft)\n            .then(() => dispatch(marketNftTransactionSlice.actions.success()))\n            .catch(() => dispatch(marketNftTransactionSlice.actions.failure()))\n    }\n\nexport const buyNft = (contractId: string, tokenId: string, price: string) =>\n    async (dispatch: AppDispatch) => {\n        dispatch(marketNftTransactionSlice.actions.commit())\n        buyNftWithPayouts(contractId, tokenId, price)\n            .then(() => dispatch(marketNftTransactionSlice.actions.success()))\n            .catch(() => dispatch(marketNftTransactionSlice.actions.failure()))\n    }\n\n\nexport const unlistNft = (contractId: string, tokenId: string) =>\n    async (dispatch: AppDispatch) => {\n        dispatch(marketNftTransactionSlice.actions.commit())\n        unlistNFT(contractId, tokenId)\n            .then(() => dispatch(marketNftTransactionSlice.actions.success()))\n            .catch(() => dispatch(marketNftTransactionSlice.actions.failure()))\n    }\n","import React, {useEffect, useRef} from 'react'\n\nconst Modal = ({\n    close = () => {\n    },\n    closeOnBgClick = true,\n    closeOnEscape = true,\n    children,\n    style = {},\n}) => {\n    const modalRef = useRef(null)\n\n    useEffect(() => {\n        const onKeydown = (event) => {\n            if (event.key === 'Escape') {\n                close()\n            }\n        }\n\n        if (closeOnEscape) {\n            document.addEventListener('keydown', onKeydown)\n        }\n\n        return () => {\n            document.removeEventListener('keydown', onKeydown)\n        }\n    }, [])\n\n    const _bgClick = (event) => {\n        if (closeOnBgClick && event.target === modalRef.current) {\n            close()\n        }\n    }\n\n    return (\n        <div\n            ref={modalRef}\n            onClick={_bgClick}\n            className=\"fixed inset-0 z-50 flex items-center p-4\"\n            style={{\n                backgroundColor: `rgba(0, 0, 0, 0.8)`,\n                ...style,\n            }}\n        >\n            {children}\n        </div>\n    )\n}\n\nexport default Modal","import React from 'react';\nimport NearBlackLogo from \"../../../../Icons/near/NearBlackLogo\";\n\nconst SinglePayout = ({name, value}) => {\n    return (\n        <div className=\"mt-2 text-black font-bold flex items-center justify-between\">\n            <span>{name}</span>\n            <span className=\"flex gap-2 items-center\">\n                <span>{value}</span>\n                <NearBlackLogo/>\n            </span>\n        </div>\n    );\n};\n\nexport default SinglePayout;","import React from 'react';\nimport {getStringPercentage} from \"../../../../../utils/string\";\nimport SinglePayout from \"./SinglePayout\";\n\nconst PayoutsPreview = ({price, payouts}) => {\n\n    const {treasury, ...rest} = payouts\n    const royalties = Object.values(rest).reduce((a, b) => a + b, 0)\n    const receive = 100 - treasury - royalties\n\n    return (\n        <div className=\"py-3\">\n            <SinglePayout name=\"Receive:\" value={getStringPercentage(price, receive)}/>\n            <SinglePayout name=\"Fee:\" value={getStringPercentage(price, treasury)}/>\n            <SinglePayout name=\"Royalty:\" value={getStringPercentage(price, royalties)}/>\n        </div>\n    );\n};\n\nexport default PayoutsPreview;","import React from 'react';\nimport Modal from \"../../../Common/modal/Modal\";\nimport DarkBlueGradientButton from \"../../../Common/buttons/DarkBlueGradientButton\";\nimport {AiOutlineClose} from 'react-icons/ai'\nimport NearBlackLogo from \"../../../Icons/near/NearBlackLogo\";\nimport DarkBlueMjolText from \"../../../Common/text/DarkBlueMjolText\";\nimport {useForm} from \"react-hook-form\";\nimport {MAX_ITEM_PRICE} from \"../../../../utils/string\";\nimport PayoutsPreview from \"./recieve/PayoutsPreview\";\n\nconst InputPriceModal = ({close, onClick, payouts, imgSrc}) => {\n\n        const closeModal = () => {\n            close()\n            reset()\n        }\n\n        const {\n            register,\n            watch,\n            handleSubmit,\n            reset,\n            formState: {\n                isValid, errors\n            }\n        } = useForm({\n                        mode: \"onChange\",\n                        defaultValues: {\n                            price: \"\"\n                        }\n                    })\n\n        const onSubmit = ({price}) => {\n            onClick(price)\n            closeModal()\n        }\n\n        const price = watch(\"price\")\n\n        return (\n            <Modal close={closeModal}>\n                <div className=\"max-w-xs md:max-w-lg p-4 bg-gray-100 mx-2 xs:mx-auto rounded-md relative\">\n                    <div className=\"absolute right-0 top-0 pr-4 pt-4\">\n                        <AiOutlineClose onClick={closeModal} className=\"cursor-pointer\" size={20}/>\n                    </div>\n                    <DarkBlueMjolText text=\"List NFT for sale\" classes=\"text-2xl text-left font-black pb-4 text-center\"/>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5\">\n                        <form onSubmit={handleSubmit(onSubmit)}>\n                            <div className=\"flex flex-col justify-between h-full\">\n                                <div className=\"space-y-1\">\n                                    <div className=\"text-sm text-gray-900 font-semibold\">\n                                        Price\n                                    </div>\n                                    <div className=\"flex justify-between gap-3\">\n                                        <input\n                                            min=\"0\"\n                                            className=\"\n                                               w-full\n                                               px-3 py-2 rounded-lg border-transparent text-gray-800 text-base\n                                               bg-black bg-opacity-5\n                                               focus:bg-opacity-10\n                                               focus:text-black\n                                               focus:border-transparent\n                                               focus:ring-0\n                                               \"\n                                            type=\"number\"\n                                            step=\"any\"\n                                            placeholder=\"NFT price\"\n                                            {...register(\"price\", {\n                                                required: true,\n                                                max: {\n                                                    value: MAX_ITEM_PRICE,\n                                                    message: `Maximum price is ${MAX_ITEM_PRICE} Ⓝ`\n                                                },\n                                                min: {\n                                                    value: 0,\n                                                    message: \"Minimum price is 0 Ⓝ\"\n                                                },\n                                            })}\n                                        />\n                                        <NearBlackLogo/>\n                                    </div>\n                                    {!isValid &&\n                                        <div\n                                            className=\"hidden md:block pt-1\n                                                       text-center text-gray-700 text-xs font-semibold\"\n                                        >\n                                            {errors?.price?.message}\n                                        </div>\n                                    }\n                                </div>\n                                <PayoutsPreview price={price} payouts={payouts}/>\n                            </div>\n                        </form>\n                        <img src={imgSrc} alt=\"loading\" className=\"hidden md:block rounded-2xl\" style={{\n                            width: \"100%\",\n                            objectFit: \"contain\",\n                            aspectRatio: \"1/1\"\n                        }}/>\n                    </div>\n                    <div className=\"items-center flex flex-col\">\n                        <p className=\"text-black mt-4 text-sm text-center opacity-60\">\n                            You will be redirected to\n                            NEAR Web Wallet to confirm your transaction.\n                        </p>\n                        <div className=\"mt-6\">\n                            <DarkBlueGradientButton title=\"Complete listing\"\n                                                    disabled={!isValid}\n                                                    onClick={() => handleSubmit(onSubmit)(price)}\n                                                    style={{\n                                                        width: \"300px\"\n                                                    }}/>\n                        </div>\n                    </div>\n                </div>\n            </Modal>\n        );\n    }\n;\n\nexport default InputPriceModal;","import React, {useState} from 'react';\nimport DarkBlueGradientButton from \"../../../Common/buttons/DarkBlueGradientButton\";\nimport InputPriceModal from \"./InputPriceModal\";\n\n\nconst SellNftContainer = ({onClick, payouts, imgSrc}) => {\n\n    const [visible, setVisible] = useState(false)\n\n    return (\n        <div>\n            <DarkBlueGradientButton title=\"Sell NFT\" onClick={() => setVisible(!visible)}/>\n            {visible &&\n                <InputPriceModal close={() => setVisible(false)}\n                                 onClick={onClick}\n                                 payouts={payouts}\n                                 imgSrc={imgSrc}\n                />\n            }\n        </div>\n    );\n};\n\nexport default SellNftContainer;","import React from 'react';\nimport withPriceContainer from \"../withPriceContainer\";\nimport DarkBlueGradientButton from \"../../../Common/buttons/DarkBlueGradientButton\";\n\nconst UnlistNftContainer = (props) => {\n    return <DarkBlueGradientButton title=\"Unlist NFT\" {...props}/>;\n};\n\nexport default withPriceContainer(UnlistNftContainer);","import React from 'react';\n\nconst NotListedNftContainer = () => {\n    return (\n        <div className=\"text-center rounded-lg bg-gray-900 p-2 font-medium text-md md:text-lg text-blue-300\">\n            Nft not listed on market\n        </div>\n    );\n};\n\nexport default NotListedNftContainer;","import React from 'react';\nimport DarkBlueGradientButton from \"../../../Common/buttons/DarkBlueGradientButton\";\n\nconst ConnectWalletButton = ({onClick}) => {\n    return <DarkBlueGradientButton title=\"Connect to NEAR\" onClick={onClick}/>\n};\n\nexport default ConnectWalletButton","import React from 'react';\n\nconst NftContractNotSupported = () => {\n    return (\n        <div className=\"text-center rounded-2xl bg-gray-900 p-2 font-medium text-md md:text-lg text-blue-300\">\n            Nft contract not supported\n            <div className=\"text-xs text-blue-900\">\n                See here for more information about supported NFTs.\n            </div>\n        </div>\n    );\n};\n\nexport default NftContractNotSupported;","import React from 'react';\nimport {useAppDispatch} from \"../../../hooks/redux\";\nimport {ItemMarketStatus} from \"../../../state/transaction/state\";\nimport BuyNftContainer from \"../../../components/Preview/Status/BuyNftContainer\";\nimport {useNftMarketStatus} from \"../../../hooks/useNftMarketStatus\";\nimport {buyNft, sellNft, unlistNft} from \"../../../state/transaction/nft/thunk\";\nimport SellNftContainer from \"../../../components/Preview/Status/sell/SellNftContainer\";\nimport UnlistNftContainer from \"../../../components/Preview/Status/unlist/UnlistNftContainer\";\nimport NotListedNftContainer from \"../../../components/Preview/Status/NotListedNftContainer\";\nimport {Nft} from \"../../../business-logic/models/nft\";\nimport {signIn} from \"../../../business-logic/near/enviroment/near\";\nimport ConnectWalletButton\n    from \"../../../components/Preview/Status/connect-wallet/ConnectWalletButton\";\nimport NftContractNotSupported\n    from \"../../../components/Preview/Status/NftContractNotSupported\";\n\ninterface PropTypes {\n    accountId: string,\n    nft: Nft,\n    payouts: Record<string, number>\n}\n\nconst NftStatusHoc: React.FC<PropTypes> = ({accountId, nft, payouts}) => {\n\n    if (!accountId) {\n        return <ConnectWalletButton onClick={signIn}/>\n    }\n\n    const status = useNftMarketStatus(accountId, nft)\n    const dispatch = useAppDispatch()\n\n    const buy = () => {\n        dispatch(buyNft(nft.contractId, nft.tokenId, nft.price || ''))\n    }\n\n    const sell = (price: string) => {\n        dispatch(sellNft(nft.contractId, nft.tokenId, price, nft))\n    }\n\n    const unlist = () => {\n        dispatch(unlistNft(nft.contractId, nft.tokenId))\n    }\n\n    switch (status) {\n        case ItemMarketStatus.CAN_BUY:\n            return <BuyNftContainer price={nft.price} onClick={buy}/>\n        case ItemMarketStatus.CAN_SELL:\n            return <SellNftContainer onClick={sell} payouts={payouts} imgSrc={nft.mediaURL}/>\n        case ItemMarketStatus.LISTED:\n            return <UnlistNftContainer price={nft.price} onClick={unlist}/>\n        case ItemMarketStatus.FREE:\n            return <NotListedNftContainer/>\n        case ItemMarketStatus.NOT_SUPPORTED:\n            return <NftContractNotSupported/>\n\n    }\n};\n\nexport default NftStatusHoc;","import {ItemMarketStatus} from \"../state/transaction/state\";\nimport {Nft} from \"../business-logic/models/nft\";\n\nexport const useNftMarketStatus = (accountId: string, nft: Nft): ItemMarketStatus => {\n\n    const isListed = nft.price !== null\n\n    return (accountId === nft.ownerId) ?\n        isListed\n            ? ItemMarketStatus.LISTED\n            : ItemMarketStatus.CAN_SELL\n        : isListed\n            ? ItemMarketStatus.CAN_BUY\n            : ItemMarketStatus.FREE\n}","import React, {useEffect, useState} from 'react';\nimport PreviewNftPage from \"../../../components/Pages/preview/nft/PreviewNftPage\";\nimport {useAppDispatch, useAppSelector} from \"../../../hooks/redux\";\nimport {fetchNft} from \"../../../state/preview/nft/thunk\";\nimport withAccountId from \"../../withAccountId\";\nimport RoundLoader from \"../../../components/Common/loaders/RoundLoader\";\nimport NotFoundPage from \"../../../components/Pages/not-found/NotFoundPage\";\nimport {previewNftSlice} from \"../../../state/preview/nft/slice\";\nimport {useParams} from \"react-router\";\nimport NftStatusHoc from \"./NftStatusHoc\";\n\ninterface PropTypes {\n    accountId: string\n}\n\ntype ParamTypes = {\n    contractId: string,\n    tokenId: string\n}\n\nconst PreviewNftPageHoc: React.FC<PropTypes> = ({accountId}) => {\n    const {contractId, tokenId} = useParams<ParamTypes>()\n\n    if (!contractId || !tokenId) {\n        return <NotFoundPage/>\n    }\n\n    const {nft, fetching, payouts} = useAppSelector(state => state.preview.nft)\n    const dispatch = useAppDispatch()\n\n    useEffect((): any => {\n        dispatch(fetchNft(contractId, tokenId))\n        return () => dispatch(previewNftSlice.actions.reset())\n    }, [accountId])\n\n    if (fetching) {\n        return <RoundLoader/>\n    }\n\n    if (!nft) {\n        return <NotFoundPage/>\n    }\n\n    return (\n        <PreviewNftPage nft={nft}\n                        payouts={payouts}\n                        statusElement={\n                            <NftStatusHoc nft={nft}\n                                          payouts={payouts}\n                                          accountId={accountId}\n                            />\n                        }\n        />)\n};\n\nexport default withAccountId(PreviewNftPageHoc);\n","import {AppDispatch} from \"../../store\";\nimport {previewNftSlice} from \"./slice\";\nimport {getNftPayouts, getNFTsByContractAndTokenId} from \"../../../business-logic/near/api/nfts/get-user-nfts\";\n\nexport const fetchNft = (contractId: string, tokenId: string) =>\n    async (dispatch: AppDispatch) => {\n\n        dispatch(previewNftSlice.actions.toggleFetching(true))\n\n        Promise.all([\n                getNFTsByContractAndTokenId(contractId, tokenId)\n                    .then(nft => dispatch(previewNftSlice.actions.success(nft)))\n                    .catch(() => dispatch(previewNftSlice.actions.failure())),\n\n                getNftPayouts(contractId, tokenId)\n                    .then(p => dispatch(previewNftSlice.actions.setPayouts(p)))\n            ]\n        ).finally(() => dispatch(previewNftSlice.actions.toggleFetching(false)))\n    }","import React, {useEffect} from 'react';\nimport {Navigate} from 'react-router-dom'\n\nconst Logout = ({logout}) => {\n\n    useEffect(() => {\n        logout()\n        window.location.reload()\n    }, [])\n\n    return <Navigate to=\"/\"/>\n};\n\nexport default Logout;","import React from 'react';\nimport {FaSearch} from 'react-icons/fa'\n\nconst SearchInput = ({placeholder, isTyping, onCancel, onSearch}) => {\n    return (\n        <div className=\"flex text-xs xs:text-md\">\n            <input className=\"rounded-l-3xl w-full sm:w-88\n                              focus:outline-0 outline-none py-2 px-5 ring-1 ring-inset ring-blue-100\"\n                   placeholder={placeholder}\n                   type=\"search\"\n            />\n            <div className=\"rounded-r-3xl px-5 bg-gradient-to-b from-blue-400 to-blue-900 grid place-items-center cursor-pointer\">\n                <FaSearch color=\"white\"/>\n            </div>\n        </div>\n    );\n};\n\nexport default SearchInput;","import React from 'react';\nimport BlueShadowContainer from \"../../../Common/shadow/BlueShadowContainer\";\nimport DarkBlueTitle from \"../../../Common/text/DarkBlueTitle\";\nimport SearchInput from \"../../../Filter/search/SearchInput\";\nimport ToggleFilter from \"../../../Filter/toggle/ToggleFilter\";\n\nconst NftFilters = ({total}) => {\n    return (\n        <BlueShadowContainer>\n            <div className=\"pb-10 px-4 space-y-8\">\n                <DarkBlueTitle title=\"Explore NFTs\"/>\n                <div className=\"flex justify-center\">\n                    <SearchInput placeholder=\"Search by NFT name\"/>\n                </div>\n            </div>\n        </BlueShadowContainer>\n    );\n};\n\nexport default NftFilters;","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport {Nft} from \"../../../business-logic/models/nft\";\nimport {MarketPage} from \"../../../business-logic/near/api/market/get-nfts-market\";\n\nexport interface ExploreNftsState {\n    nfts: Array<Nft>,\n    fetching: boolean,\n    from: number,\n    limit: number,\n    hasMore: boolean,\n    total: number\n}\n\nconst initialState: ExploreNftsState = {\n    nfts: [],\n    fetching: false,\n    from: 0,\n    limit: 12,\n    hasMore: true,\n    total: 0\n}\n\nexport const exploreNftsSlice = createSlice({\n    name: \"explore-nfts\",\n    initialState,\n    reducers: {\n        setPageData: (state, action: PayloadAction<MarketPage>) => {\n            state.nfts = state.nfts.concat(action.payload.tokens)\n            state.total = action.payload.total\n            state.hasMore = action.payload.hasMore\n            state.from += state.limit\n        },\n        toggleFetching: (state, action: PayloadAction<boolean>) => {\n            state.fetching = action.payload\n        },\n        reset: () => initialState\n    }\n})\n\nexport const exploreNftsReducer = exploreNftsSlice.reducer;","import {getConvertedNFT} from \"../standardization\";\nimport {viewFunction} from \"../rpc\";\nimport {marketAPI, MarketToken} from \"./api\";\nimport {buildUID, formatOptionalPrice} from \"../utils\";\nimport {batchRequest} from \"../batch-request\";\nimport {Nft} from \"../../../models/nft\";\n\nexport interface MarketPage {\n    tokens: Nft[],\n    hasMore: boolean,\n    total: number\n\n}\n\n\nexport async function getMarketNfts(from = 0, limit = 50): Promise<MarketPage> {\n    const marketNfts = await marketAPI.fetchTokens(from, limit)\n    return batchRequest<MarketToken, Nft>(marketNfts.tokens, async token => {\n        const {price, token_id, nft_contract_id: contractId} = token\n        return viewFunction({\n                contractId,\n                methodName: 'nft_token',\n                args: {token_id}\n            }\n        ).then(response => {\n                const uid = buildUID(contractId, token_id)\n                const tokenPrice = {[uid]: formatOptionalPrice(price)}\n                return getConvertedNFT(contractId, response, tokenPrice)\n            }\n        )\n    }).then(result => ({\n        tokens: result.values,\n        hasMore: marketNfts.has_next_batch,\n        total: marketNfts.total_count\n    }))\n}\n\n","import {AppDispatch} from \"../../store\";\nimport {exploreNftsSlice} from \"./slice\";\nimport {getMarketNfts} from \"../../../business-logic/near/api/market/get-nfts-market\";\n\nexport const fetchMarketNfts = (from: number, limit: number) =>\n    async (dispatch: AppDispatch) => {\n        dispatch(exploreNftsSlice.actions.toggleFetching(true))\n        getMarketNfts(from, limit)\n            .then(data => dispatch(exploreNftsSlice.actions.setPageData(data)))\n            .finally(() => dispatch(exploreNftsSlice.actions.toggleFetching(false)))\n    }","import React, {useEffect} from 'react';\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport CardListLoader from \"../Card/CardListLoader\";\nimport CardGrid from \"./CardGrid\";\nimport {useAppDispatch, useAppSelector} from \"../../hooks/redux\";\nimport {fetchMarketNfts} from \"../../state/explore/nfts/thunk\";\nimport {exploreNftsSlice} from \"../../state/explore/nfts/slice\";\nimport DarkBlueMjolText from \"../Common/text/DarkBlueMjolText\";\nimport {ScrollPosition, trackWindowScroll} from \"react-lazy-load-image-component\";\n\n\ninterface PropTypes {\n    scrollPosition: ScrollPosition\n}\n\nconst CardList: React.FC<PropTypes> = ({scrollPosition}) => {\n\n    const {nfts, hasMore, fetching, from, limit} = useAppSelector(state => state.explore.nfts)\n    const dispatch = useAppDispatch()\n\n    useEffect(() => {\n        dispatch(fetchMarketNfts(from, limit))\n        return () => {\n            dispatch(exploreNftsSlice.actions.reset())\n        }\n    }, [])\n\n    const fetchNextTokens = () => {\n        if (hasMore && !fetching) {\n            return dispatch(fetchMarketNfts(from, limit))\n        }\n    }\n\n    return (\n        <InfiniteScroll\n            next={fetchNextTokens}\n            scrollThreshold=\"100px\"\n            hasMore={hasMore}\n            className={\"py-5 \" + (nfts.length !== 0 ? \"space-y-6 lg:space-y-7 2xl:space-y-10\" : \"\")}\n            loader={<CardListLoader/>}\n            dataLength={nfts.length}\n            endMessage={<DarkBlueMjolText text=\"No more items on market\"/>}\n        >\n            <CardGrid nfts={nfts} scrollPosition={scrollPosition}/>\n        </InfiniteScroll>\n    );\n};\n\nexport default trackWindowScroll(CardList);","import React, {useEffect, useState} from 'react';\nimport ExploreNftsPage from \"../../../components/Pages/explore/nft/ExploreNftPage\";\nimport {useAppDispatch, useAppSelector} from \"../../../hooks/redux\";\n\nimport {exploreNftsSlice} from \"../../../state/explore/nfts/slice\";\nimport {fetchMarketNfts} from \"../../../state/explore/nfts/thunk\";\nimport NftFilters from \"../../../components/Pages/explore/nft/NftFilters\";\nimport CardList from \"../../../components/CardList/CardList\";\n\nconst ExploreNftsPageHoc = () => {\n\n    const {total} = useAppSelector(state => state.explore.nfts)\n\n    return (\n        <>\n            <NftFilters total={total}/>\n            <div className=\"my-5 font-mono text-center text-gray-600\">\n                Total items: {total}\n            </div>\n            <CardList/>\n        </>\n    )\n\n};\n\nexport default ExploreNftsPageHoc;","import React from 'react';\nimport {Route, Routes} from \"react-router\";\nimport LandingPage from \"../components/Pages/landing/LandingPage\";\nimport NotFoundPage from \"../components/Pages/not-found/NotFoundPage\";\nimport CreateCollectionPage from \"../components/Pages/create/collection/CreateCollectionPage\";\nimport CreateNftPage from \"../components/Pages/create/nft/CreateNftPage\";\nimport ExploreCollectionsPage from \"../components/Pages/explore/collection/ExploreCollectionsPage\";\nimport ProfilePageHoc from \"../hoc/profile/ProfilePageHoc\";\nimport PreviewNftHoc from \"../hoc/preview/nft/PreviewNftPageHoc\";\nimport Logout from \"../hoc/auth/Logout\";\nimport ExploreNftsPageHoc from \"../hoc/explore/nft/ExploreNftsPageHoc\";\nimport {signOut} from \"../business-logic/near/enviroment/near\";\n\nconst AppRouter = () => {\n    return (\n        <Routes>\n            <Route path=\"/\" exact element={<LandingPage/>} key=\"1\"/>\n            <Route path=\"logout\" exact element={<Logout logout={signOut}/>}/>\n            <Route path=\"nfts\" exact element={<ExploreNftsPageHoc/>} key=\"2\"/>\n            <Route path=\"nft/:contractId/:tokenId\" exact element={<PreviewNftHoc/>} key=\"30\"/>\n            <Route path=\"collections\" element={<ExploreCollectionsPage/>} key=\"3\"/>\n            <Route path=\"create-nft\" element={<CreateNftPage/>} key=\"4\"/>\n            <Route path=\"create-collection\" element={<CreateCollectionPage/>} key=\"5\"/>\n            <Route path=\"profile/nfts\" element={<ProfilePageHoc/>} key=\"6\"/>\n            {/*<Route path=\"/profile-collection\" element={<ProfileNftCollectionsPage/>} key=\"11\"/>*/}\n            <Route path=\"*\" element={<NotFoundPage/>} key=\"12\"/>\n        </Routes>\n    );\n};\n\nexport default AppRouter;\n\n\n\n","import {Popover} from \"@headlessui/react\";\nimport {MenuIcon, XIcon} from \"@heroicons/react/outline\";\nimport React from \"react\";\nimport classNames from \"../../../utils/css-utils\";\nimport {ChevronDownIcon} from \"@heroicons/react/solid\";\n\nexport const CloseMenuButton = () => {\n    return (\n        <Popover.Button\n            className=\"bg-white rounded-md p-2 inline-flex nfts-center justify-center text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500\">\n            <span className=\"sr-only\">Close menu</span>\n            <XIcon className=\"h-6 w-6\" aria-hidden=\"true\"/>\n        </Popover.Button>\n    );\n};\n\nexport const DropDownButton = ({isOpen, tabName}) => {\n    return (\n        <Popover.Button\n            className={classNames(\n                isOpen ? 'text-gray-900' : 'text-cyan-700',\n                'group bg-light_white rounded-md inline-flex items-center ' +\n                'text-lg font-extrabold hover:text-gray-900 focus:outline-none ' +\n                'focus:bg-light_white'\n            )}\n        >\n            {tabName}\n            <ChevronDownIcon\n                className={classNames(\n                    isOpen ? 'text-gray-900' : 'text-cyan-700',\n                    'ml-2 h-5 w-5 group-hover:text-gray-900'\n                )}\n                aria-hidden=\"true\"\n            />\n        </Popover.Button>\n    );\n};\n\nexport const MenuButton = () => {\n    return (\n        <Popover.Button\n            className=\"bg-white rounded-md p-2 inline-flex nfts-center justify-center text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500\">\n            <span className=\"sr-only\">Open menu</span>\n            <MenuIcon className=\"h-6 w-6\" aria-hidden=\"true\"/>\n        </Popover.Button>\n    );\n};\n","import {Popover, Transition} from \"@headlessui/react\";\nimport {DropDownButton} from \"../../../Common/navbar/buttons\";\nimport React, {Fragment} from \"react\";\nimport classNames from \"../../../../utils/css-utils\";\nimport {Link} from \"react-router-dom\";\n\nexport const TabsDropDownMenu = ({name, tabs, isProfile}) => {\n    return (\n        <Popover className=\"relative\">\n            {({isOpen}) => (\n                <div key={name}>\n                    <DropDownButton isOpen={isOpen} tabName={name}/>\n                    <Transition\n                        as={Fragment}\n                        enter=\"transition ease-out duration-200\"\n                        enterFrom=\"opacity-0 translate-y-1\"\n                        enterTo=\"opacity-100 translate-y-0\"\n                        leave=\"transition ease-in duration-150\"\n                        leaveFrom=\"opacity-100 translate-y-0\"\n                        leaveTo=\"opacity-0 translate-y-1\"\n                    >\n                        <Popover.Panel\n                            className={classNames(\n                                isProfile ? '-ml-20' : '-ml-4',\n                                \"absolute z-10 -ml-4 mt-3 transform px-2\"\n                            )}>\n                            <div className=\"rounded-lg shadow-lg ring-1 ring-black ring-opacity-5 overflow-hidden\">\n                                <div className=\"relative grid gap-6 bg-white px-5 py-6 sm:gap-8 sm:p-8\">\n                                    {tabs.map(({path, name}) => (\n                                        <Link key={name} to={path}>\n                                            <div\n                                                className=\"cursor-pointer -m-3 p-3 flex items-start rounded-lg hover:bg-gray-100\"\n                                            >\n                                                <p className=\"text-medium font-medium text-gray-900\">{name}</p>\n                                            </div>\n                                        </Link>\n                                    ))}\n                                </div>\n                            </div>\n                        </Popover.Panel>\n                    </Transition>\n                </div>\n            )}\n        </Popover>\n    )\n}","export default __webpack_public_path__ + \"static/media/hammer.743d332f.png\";","export default __webpack_public_path__ + \"static/media/label6.5b6747ff.png\";","import React, {Fragment} from 'react'\nimport {Popover, Transition} from '@headlessui/react'\nimport classNames from \"../../../utils/css-utils\";\nimport {CloseMenuButton, MenuButton} from \"../../Common/navbar/buttons\";\nimport {Link} from \"react-router-dom\";\nimport {TabsDropDownMenu} from \"./menu/TabDropDownMenu\";\nimport imgLogo from \"../../../resources/hammer.png\"\nimport imgLabel from \"../../../resources/label6.png\"\nimport {signIn, wallet} from \"../../../business-logic/near/enviroment/near\";\n\n\nfunction SmallNavBar({tabs}) {\n    return (\n        <div className=\"grid grid-cols-2 gap-y-4 gap-x-8\">\n            {tabs.map(({path, name}) => (\n                <>\n                    {name === \"Launchpad\" || name === \"Docs\" ? (\n                        <div\n                            className=\"cursor-not-allowed text-base font-medium text-gray-900 hover:text-gray-500\">\n                            {name}\n                        </div>\n                    ) : (\n                        <Link to={path} key={name}>\n                            <div\n                                className=\"cursor-pointer text-base font-medium text-gray-900 hover:text-gray-500\">\n                                {name}\n                            </div>\n                        </Link>\n                    )}\n                </>\n            ))}\n        </div>\n    )\n}\n\nconst Navbar = React.memo(({tabs}) => {\n    const exploreTabs = tabs.explore\n    const createTabs = tabs.create\n    const profileTabs = tabs.profile\n    const singleTabs = tabs.single\n\n    return (\n        <Popover className=\"bg-white\">\n            <div className=\"max-w-7xl mx-auto px-4 sm:px-6\">\n                <div\n                    className=\"flex justify-between items-center py-6 md:justify-start md:space-x-10\">\n                    <div className=\"flex justify-start lg:w-0 lg:flex-1\">\n                        <Link to=\"/\">\n                            <img\n                                className=\"inline-block h-8 w-auto sm:h-10\"\n                                src={imgLogo}\n                                alt=\"\"\n                            />\n                            <img\n                                className=\"inline-block h-8 w-auto sm:h-10\"\n                                src={imgLabel}\n                                alt=\"\"\n                            />\n                        </Link>\n                    </div>\n                    <div className=\"-mr-2 -my-2 md:hidden\">\n                        <MenuButton/>\n                    </div>\n                    <Popover.Group as=\"nav\" className=\"hidden md:flex space-x-10\">\n                        <TabsDropDownMenu key=\"Explore\" name=\"Explore\" tabs={exploreTabs} isProfile={false}/>\n                        <TabsDropDownMenu key=\"Create\" name=\"Create\" tabs={createTabs} isProfile={false}/>\n                        {singleTabs.map(({name, path}) => (\n                            <div\n                                className={classNames(\n                                    name === \"Launchpad\" || name === \"Docs\" ? 'cursor-not-allowed' : 'cursor-pointer',\n                                    \"text-lg font-extrabold text-cyan-700 hover:text-gray-900\"\n                                )}>\n                                {name}\n                            </div>\n                        ))}\n                    </Popover.Group>\n                    {wallet.isSignedIn() ? (\n                        <div className=\"hidden md:flex items-center justify-end md:flex-1 lg:w-0\">\n                            <TabsDropDownMenu name=\"Profile\" tabs={profileTabs} isProfile={true}/>\n                        </div>\n                    ) : (\n                        <div className=\"hidden md:flex items-center justify-end md:flex-1 lg:w-0\">\n                            <Link to=\"/\"\n                                  onClick={signIn}\n                                  className=\"inline-flex justify-center py-1.5 px-4 font-bold text-lg font-large rounded-md text-white bg-gradient-to-br from-mjol-blue-base to-green-200 hover:from-green-200 hover:to-mjol-blue-base\"\n                            >\n                                Sign in\n                            </Link>\n                        </div>\n                    )}\n                </div>\n            </div>\n\n            <Transition\n                as={Fragment}\n                enter=\"duration-200 ease-out\"\n                enterFrom=\"opacity-0 scale-95\"\n                enterTo=\"opacity-100 scale-100\"\n                leave=\"duration-100 ease-in\"\n                leaveFrom=\"opacity-100 scale-100\"\n                leaveTo=\"opacity-0 scale-95\"\n            >\n                <Popover.Panel focus\n                               className=\"absolute top-0 inset-x-0 p-2 transition transform origin-top-right md:hidden\">\n                    <div\n                        className=\"rounded-lg shadow-lg ring-1 ring-black ring-opacity-5 bg-white divide-y-2 divide-gray-50\">\n                        <div className=\"pt-5 pb-6 px-5\">\n                            <div className=\"flex items-center justify-between\">\n                                <div>\n                                    <Link to=\"/\">\n                                        <img\n                                            className=\"h-8 w-auto\"\n                                            src={imgLogo}\n                                            alt=\"logo\"/>\n                                    </Link>\n                                </div>\n                                <div className=\"-mr-2\">\n                                    <CloseMenuButton/>\n                                </div>\n                            </div>\n                        </div>\n                        <div key=\"Explore\" className=\"py-6 px-5 space-y-6\">\n                            <div className=\"text-cyan-700\">Explore:</div>\n                            <SmallNavBar tabs={exploreTabs}/>\n                        </div>\n                        <div key=\"Create\" className=\"py-6 px-5 space-y-6\">\n                            <div className=\"text-cyan-700\">Create:</div>\n                            <SmallNavBar tabs={createTabs}/>\n                        </div>\n                        <div className=\"py-6 px-5 space-y-6\">\n                            <SmallNavBar tabs={singleTabs}/>\n                            {wallet.isSignedIn() ? (\n                                <>\n                                    <div className=\"grid grid-cols-2 gap-y-4 gap-x-8\">\n                                        {profileTabs.filter(item => item.name !== 'Sign out').map(({name, path}) => (\n                                            <Link to={path} key={name}>\n                                                <div\n                                                    className=\"cursor-pointer text-base font-medium text-gray-900 hover:text-gray-500\"\n                                                >\n                                                    {name}\n                                                </div>\n                                            </Link>\n                                        ))}\n                                        <Link to=\"/signOut\"\n                                              className=\"cursor-pointer col-span-2 text-center font-medium text-gray-500 hover:text-gray-700\"\n                                        >\n                                            Log out\n                                        </Link>\n                                    </div>\n                                </>\n                            ) : (\n                                <div>\n                                    <Link to=\"/\"\n                                          onClick={signIn}\n                                          className=\"cursor-pointer w-full py-2 flex items-center justify-center font-bold text-lg font-large rounded-md text-white bg-gradient-to-br from-mjol-blue-base to-green-200 hover:from-green-200 hover:to-mjol-blue-base\"\n                                    >\n                                        Sign in\n                                    </Link>\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                </Popover.Panel>\n            </Transition>\n        </Popover>\n    )\n})\n\nexport default Navbar;","import Navbar from \"./Navbar\";\n\nimport React from 'react';\nimport {useAppSelector} from \"../../../hooks/redux\";\n\nconst NavbarContainer = () => {\n    const tabs = useAppSelector(state => state.navbar.tabs)\n\n    return <Navbar tabs={tabs}/>;\n};\n\nexport default NavbarContainer;","import React from 'react'\nimport AppRouter from \"./AppRouter\";\nimport NavbarContainer from \"../components/Pages/navbar/NavbarContainer\";\n\nexport default function App() {\n    return (\n        <div>\n            <NavbarContainer/>\n            <AppRouter/>\n        </div>\n    )\n}","import {combineReducers} from \"redux\";\nimport {previewNftReducer} from \"./nft/slice\";\n\nexport const previewReducer = combineReducers({\n    nft: previewNftReducer\n})","import {createSlice} from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    tabs: {\n        explore: [\n            {name: 'NFTs', path: '/nfts'},\n            {name: 'Collections', path: '/collections'},\n        ],\n        create: [\n            {name: 'NFT', path: '/create-nft'},\n            {name: 'Collection', path: '/create-collection'}\n        ],\n        profile: [\n            {name: 'My NFTs', path: '/profile/nfts'},\n            {name: 'My Collections', path: '/profile/collections'},\n            {name: 'Sign out', path: '/logout'}\n        ],\n        single: [\n            {name: 'Launchpad', path: '/launchpad'},\n            {name: 'Docs', path: '/docs'}\n        ]\n    }\n}\n\nexport const navbarSlice = createSlice({\n    name: \"navbar\",\n    initialState,\n    reducers: {}\n})\n\nexport const navbarReducer = navbarSlice.reducer","import {combineReducers} from \"redux\";\nimport {exploreNftsReducer} from \"./nfts/slice\";\n\nexport const exploreReducer = combineReducers({\n    nfts: exploreNftsReducer\n})","import {configureStore} from \"@reduxjs/toolkit\";\nimport {combineReducers} from \"redux\";\nimport {profileReducer} from \"./profile/slice\";\nimport {previewReducer} from \"./preview/reducer\";\nimport {navbarReducer} from \"./navbar/slice\";\nimport {exploreReducer} from \"./explore/reducer\";\n\n\nexport const rootReducer = combineReducers({\n    navbar: navbarReducer,\n    profile: profileReducer,\n    preview: previewReducer,\n    explore: exploreReducer\n})\n\nexport const setupStore = () => {\n    return configureStore({\n        reducer: rootReducer\n    })\n}\n\nexport type RootState = ReturnType<typeof rootReducer>\nexport type AppStore = ReturnType<typeof setupStore>\nexport type AppDispatch = AppStore['dispatch']","import './index.css';\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport {BrowserRouter, HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport App from \"./launch/App\";\nimport {setupStore} from \"./state/store\";\n\nconst store = setupStore()\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)","import {decode} from '@webassemblyjs/wasm-parser';\n\n/**\n * Converts a base64-encoded string to a byte array. Works in browser and Node\n * environments.\n *\n * @param strb64 base64 string\n * @returns Decoded byte array\n */\nfunction base64StringToUint8Array(strb64: string): Uint8Array {\n    if (typeof Buffer !== 'undefined') {\n        // Node\n        return Buffer.from(strb64, 'base64');\n    } else {\n        // Browser\n        return new Uint8Array(\n            atob(strb64.toString().trim())\n                .split('')\n                .map(c => c.charCodeAt(0)),\n        );\n    }\n}\n\n/**\n * Parse base64-encoded WASM into AST\n *\n * @param wasmb64 base64-encoded WASM binary\n * @returns WASM abstract syntax tree\n */\nexport function parseWasm(wasmb64: string): any {\n    return decode(base64StringToUint8Array(wasmb64));\n}\n"],"sourceRoot":""}